{"version":3,"file":"extension.js","mappings":"2DAEA,IAAIA,EAAe,EAAQ,KAEvBC,EAAW,EAAQ,MAEnBC,EAAWD,EAASD,EAAa,6BAErCG,EAAOC,QAAU,SAA4BC,EAAMC,GAClD,IAAIC,EAAYP,EAAaK,IAAQC,GACrC,MAAyB,mBAAdC,GAA4BL,EAASG,EAAM,gBAAkB,EAChEJ,EAASM,GAEVA,I,4BCXR,IAAIC,EAAO,EAAQ,MACfR,EAAe,EAAQ,KAEvBS,EAAST,EAAa,8BACtBU,EAAQV,EAAa,6BACrBW,EAAgBX,EAAa,mBAAmB,IAASQ,EAAKI,KAAKF,EAAOD,GAE1EI,EAAQb,EAAa,qCAAqC,GAC1Dc,EAAkBd,EAAa,2BAA2B,GAC1De,EAAOf,EAAa,cAExB,GAAIc,EACH,IACCA,EAAgB,GAAI,IAAK,CAAEE,MAAO,IACjC,MAAOC,GAERH,EAAkB,KAIpBX,EAAOC,QAAU,SAAkBc,GAClC,IAAIC,EAAOR,EAAcH,EAAME,EAAOU,WACtC,GAAIP,GAASC,EAAiB,CAC7B,IAAIO,EAAOR,EAAMM,EAAM,UACnBE,EAAKC,cAERR,EACCK,EACA,SACA,CAAEH,MAAO,EAAID,EAAK,EAAGG,EAAiBK,QAAUH,UAAUG,OAAS,MAItE,OAAOJ,GAGR,IAAIK,EAAY,WACf,OAAOb,EAAcH,EAAMC,EAAQW,YAGhCN,EACHA,EAAgBX,EAAOC,QAAS,QAAS,CAAEY,MAAOQ,IAElDrB,EAAOC,QAAQqB,MAAQD,G,SC5CxB,IAAIE,EAASC,OAAOC,UAAUC,eAC1BC,EAAWH,OAAOC,UAAUE,SAEhC3B,EAAOC,QAAU,SAAkB2B,EAAKC,EAAIC,GACxC,GAA0B,sBAAtBH,EAASlB,KAAKoB,GACd,MAAM,IAAIE,UAAU,+BAExB,IAAIC,EAAIJ,EAAIR,OACZ,GAAIY,KAAOA,EACP,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAGC,IACnBJ,EAAGpB,KAAKqB,EAAKF,EAAIK,GAAIA,EAAGL,QAG5B,IAAK,IAAIM,KAAKN,EACNL,EAAOd,KAAKmB,EAAKM,IACjBL,EAAGpB,KAAKqB,EAAKF,EAAIM,GAAIA,EAAGN,K,sBCZxC,IAAIO,EAAgB,kDAChBC,EAAQC,MAAMZ,UAAUW,MACxBE,EAAQd,OAAOC,UAAUE,SACzBY,EAAW,oBAEfvC,EAAOC,QAAU,SAAcuC,GAC3B,IAAIC,EAASC,KACb,GAAsB,mBAAXD,GAAyBH,EAAM7B,KAAKgC,KAAYF,EACvD,MAAM,IAAIR,UAAUI,EAAgBM,GAyBxC,IAvBA,IAEIE,EAFAC,EAAOR,EAAM3B,KAAKQ,UAAW,GAG7B4B,EAAS,WACT,GAAIH,gBAAgBC,EAAO,CACvB,IAAIG,EAASL,EAAOnB,MAChBoB,KACAE,EAAKG,OAAOX,EAAM3B,KAAKQ,aAE3B,OAAIO,OAAOsB,KAAYA,EACZA,EAEJJ,KAEP,OAAOD,EAAOnB,MACVkB,EACAI,EAAKG,OAAOX,EAAM3B,KAAKQ,cAK/B+B,EAAcC,KAAKC,IAAI,EAAGT,EAAOrB,OAASwB,EAAKxB,QAC/C+B,EAAY,GACPlB,EAAI,EAAGA,EAAIe,EAAaf,IAC7BkB,EAAUC,KAAK,IAAMnB,GAKzB,GAFAU,EAAQU,SAAS,SAAU,oBAAsBF,EAAUG,KAAK,KAAO,4CAA/DD,CAA4GR,GAEhHJ,EAAOhB,UAAW,CAClB,IAAI8B,EAAQ,aACZA,EAAM9B,UAAYgB,EAAOhB,UACzBkB,EAAMlB,UAAY,IAAI8B,EACtBA,EAAM9B,UAAY,KAGtB,OAAOkB,I,4BChDX,IAAIa,EAAiB,EAAQ,MAE7BxD,EAAOC,QAAUoD,SAAS5B,UAAUpB,MAAQmD,G,2BCF5C,IAAIC,EAEAC,EAAeC,YACfC,EAAYP,SACZQ,EAAa9B,UAGb+B,EAAwB,SAAUC,GACrC,IACC,OAAOH,EAAU,yBAA2BG,EAAmB,iBAAxDH,GACN,MAAO9C,MAGNJ,EAAQc,OAAOwC,yBACnB,GAAItD,EACH,IACCA,EAAM,GAAI,IACT,MAAOI,GACRJ,EAAQ,KAIV,IAAIuD,EAAiB,WACpB,MAAM,IAAIJ,GAEPK,EAAiBxD,EACjB,WACF,IAGC,OAAOuD,EACN,MAAOE,GACR,IAEC,OAAOzD,EAAMO,UAAW,UAAUmD,IACjC,MAAOC,GACR,OAAOJ,IAVR,GAcAA,EAECK,EAAa,EAAQ,KAAR,GAEbC,EAAW/C,OAAOgD,gBAAkB,SAAUC,GAAK,OAAOA,EAAEC,WAE5DC,EAAY,GAEZC,EAAmC,oBAAfC,WAA6BpB,EAAYc,EAASM,YAEtEC,EAAa,CAChB,mBAA8C,oBAAnBC,eAAiCtB,EAAYsB,eACxE,UAAW1C,MACX,gBAAwC,oBAAhB2C,YAA8BvB,EAAYuB,YAClE,2BAA4BV,EAAaC,EAAS,GAAGU,OAAOC,aAAezB,EAC3E,mCAAoCA,EACpC,kBAAmBkB,EACnB,mBAAoBA,EACpB,2BAA4BA,EAC5B,2BAA4BA,EAC5B,YAAgC,oBAAZQ,QAA0B1B,EAAY0B,QAC1D,WAA8B,oBAAXC,OAAyB3B,EAAY2B,OACxD,YAAaC,QACb,aAAkC,oBAAbC,SAA2B7B,EAAY6B,SAC5D,SAAUC,KACV,cAAeC,UACf,uBAAwBC,mBACxB,cAAeC,UACf,uBAAwBC,mBACxB,UAAWC,MACX,SAAUC,KACV,cAAeC,UACf,iBAA0C,oBAAjBC,aAA+BtC,EAAYsC,aACpE,iBAA0C,oBAAjBC,aAA+BvC,EAAYuC,aACpE,yBAA0D,oBAAzBC,qBAAuCxC,EAAYwC,qBACpF,aAAcrC,EACd,sBAAuBe,EACvB,cAAoC,oBAAduB,UAA4BzC,EAAYyC,UAC9D,eAAsC,oBAAfC,WAA6B1C,EAAY0C,WAChE,eAAsC,oBAAfC,WAA6B3C,EAAY2C,WAChE,aAAcC,SACd,UAAWC,MACX,sBAAuBhC,EAAaC,EAASA,EAAS,GAAGU,OAAOC,cAAgBzB,EAChF,SAA0B,iBAAT8C,KAAoBA,KAAO9C,EAC5C,QAAwB,oBAAR+C,IAAsB/C,EAAY+C,IAClD,yBAAyC,oBAARA,KAAwBlC,EAAyBC,GAAS,IAAIiC,KAAMvB,OAAOC,aAAtCzB,EACtE,SAAUR,KACV,WAAYwD,OACZ,WAAYjF,OACZ,eAAgBkF,WAChB,aAAcC,SACd,YAAgC,oBAAZC,QAA0BnD,EAAYmD,QAC1D,UAA4B,oBAAVC,MAAwBpD,EAAYoD,MACtD,eAAgBC,WAChB,mBAAoBC,eACpB,YAAgC,oBAAZC,QAA0BvD,EAAYuD,QAC1D,WAAYC,OACZ,QAAwB,oBAARC,IAAsBzD,EAAYyD,IAClD,yBAAyC,oBAARA,KAAwB5C,EAAyBC,GAAS,IAAI2C,KAAMjC,OAAOC,aAAtCzB,EACtE,sBAAoD,oBAAtB0D,kBAAoC1D,EAAY0D,kBAC9E,WAAYC,OACZ,4BAA6B9C,EAAaC,EAAS,GAAGU,OAAOC,aAAezB,EAC5E,WAAYa,EAAaW,OAASxB,EAClC,gBAAiBC,EACjB,mBAAoBQ,EACpB,eAAgBU,EAChB,cAAef,EACf,eAAsC,oBAAfgB,WAA6BpB,EAAYoB,WAChE,sBAAoD,oBAAtBwC,kBAAoC5D,EAAY4D,kBAC9E,gBAAwC,oBAAhBC,YAA8B7D,EAAY6D,YAClE,gBAAwC,oBAAhBC,YAA8B9D,EAAY8D,YAClE,aAAcC,SACd,YAAgC,oBAAZC,QAA0BhE,EAAYgE,QAC1D,YAAgC,oBAAZC,QAA0BjE,EAAYiE,QAC1D,YAAgC,oBAAZC,QAA0BlE,EAAYkE,SAGvDC,EAAS,SAASA,EAAO1H,GAC5B,IAAIW,EACJ,GAAa,oBAATX,EACHW,EAAQiD,EAAsB,6BACxB,GAAa,wBAAT5D,EACVW,EAAQiD,EAAsB,wBACxB,GAAa,6BAAT5D,EACVW,EAAQiD,EAAsB,8BACxB,GAAa,qBAAT5D,EAA6B,CACvC,IAAI2B,EAAK+F,EAAO,4BACZ/F,IACHhB,EAAQgB,EAAGJ,gBAEN,GAAa,6BAATvB,EAAqC,CAC/C,IAAI2H,EAAMD,EAAO,oBACbC,IACHhH,EAAQ0D,EAASsD,EAAIpG,YAMvB,OAFAqD,EAAW5E,GAAQW,EAEZA,GAGJiH,EAAiB,CACpB,yBAA0B,CAAC,cAAe,aAC1C,mBAAoB,CAAC,QAAS,aAC9B,uBAAwB,CAAC,QAAS,YAAa,WAC/C,uBAAwB,CAAC,QAAS,YAAa,WAC/C,oBAAqB,CAAC,QAAS,YAAa,QAC5C,sBAAuB,CAAC,QAAS,YAAa,UAC9C,2BAA4B,CAAC,gBAAiB,aAC9C,mBAAoB,CAAC,yBAA0B,aAC/C,4BAA6B,CAAC,yBAA0B,YAAa,aACrE,qBAAsB,CAAC,UAAW,aAClC,sBAAuB,CAAC,WAAY,aACpC,kBAAmB,CAAC,OAAQ,aAC5B,mBAAoB,CAAC,QAAS,aAC9B,uBAAwB,CAAC,YAAa,aACtC,0BAA2B,CAAC,eAAgB,aAC5C,0BAA2B,CAAC,eAAgB,aAC5C,sBAAuB,CAAC,WAAY,aACpC,cAAe,CAAC,oBAAqB,aACrC,uBAAwB,CAAC,oBAAqB,YAAa,aAC3D,uBAAwB,CAAC,YAAa,aACtC,wBAAyB,CAAC,aAAc,aACxC,wBAAyB,CAAC,aAAc,aACxC,cAAe,CAAC,OAAQ,SACxB,kBAAmB,CAAC,OAAQ,aAC5B,iBAAkB,CAAC,MAAO,aAC1B,oBAAqB,CAAC,SAAU,aAChC,oBAAqB,CAAC,SAAU,aAChC,sBAAuB,CAAC,SAAU,YAAa,YAC/C,qBAAsB,CAAC,SAAU,YAAa,WAC9C,qBAAsB,CAAC,UAAW,aAClC,sBAAuB,CAAC,UAAW,YAAa,QAChD,gBAAiB,CAAC,UAAW,OAC7B,mBAAoB,CAAC,UAAW,UAChC,oBAAqB,CAAC,UAAW,WACjC,wBAAyB,CAAC,aAAc,aACxC,4BAA6B,CAAC,iBAAkB,aAChD,oBAAqB,CAAC,SAAU,aAChC,iBAAkB,CAAC,MAAO,aAC1B,+BAAgC,CAAC,oBAAqB,aACtD,oBAAqB,CAAC,SAAU,aAChC,oBAAqB,CAAC,SAAU,aAChC,yBAA0B,CAAC,cAAe,aAC1C,wBAAyB,CAAC,aAAc,aACxC,uBAAwB,CAAC,YAAa,aACtC,wBAAyB,CAAC,aAAc,aACxC,+BAAgC,CAAC,oBAAqB,aACtD,yBAA0B,CAAC,cAAe,aAC1C,yBAA0B,CAAC,cAAe,aAC1C,sBAAuB,CAAC,WAAY,aACpC,qBAAsB,CAAC,UAAW,aAClC,qBAAsB,CAAC,UAAW,cAG/BzH,EAAO,EAAQ,MACfkB,EAAS,EAAQ,MACjBwG,EAAU1H,EAAKI,KAAK4C,SAAS5C,KAAM4B,MAAMZ,UAAUsB,QACnDiF,EAAe3H,EAAKI,KAAK4C,SAAS/B,MAAOe,MAAMZ,UAAUwG,QACzDC,EAAW7H,EAAKI,KAAK4C,SAAS5C,KAAM2G,OAAO3F,UAAU0G,SACrDC,EAAY/H,EAAKI,KAAK4C,SAAS5C,KAAM2G,OAAO3F,UAAUW,OAGtDiG,EAAa,qGACbC,EAAe,WACfC,EAAe,SAAsBC,GACxC,IAAIC,EAAQL,EAAUI,EAAQ,EAAG,GAC7BE,EAAON,EAAUI,GAAS,GAC9B,GAAc,MAAVC,GAA0B,MAATC,EACpB,MAAM,IAAIhF,EAAa,kDACjB,GAAa,MAATgF,GAA0B,MAAVD,EAC1B,MAAM,IAAI/E,EAAa,kDAExB,IAAIZ,EAAS,GAIb,OAHAoF,EAASM,EAAQH,GAAY,SAAUM,EAAOC,EAAQC,EAAOC,GAC5DhG,EAAOA,EAAO1B,QAAUyH,EAAQX,EAASY,EAAWR,EAAc,MAAQM,GAAUD,KAE9E7F,GAIJiG,EAAmB,SAA0B7I,EAAMC,GACtD,IACI6I,EADAC,EAAgB/I,EAOpB,GALIqB,EAAOuG,EAAgBmB,KAE1BA,EAAgB,KADhBD,EAAQlB,EAAemB,IACK,GAAK,KAG9B1H,EAAOuD,EAAYmE,GAAgB,CACtC,IAAIpI,EAAQiE,EAAWmE,GAIvB,GAHIpI,IAAU8D,IACb9D,EAAQ+G,EAAOqB,SAEK,IAAVpI,IAA0BV,EACpC,MAAM,IAAI0D,EAAW,aAAe3D,EAAO,wDAG5C,MAAO,CACN8I,MAAOA,EACP9I,KAAM+I,EACNpI,MAAOA,GAIT,MAAM,IAAI6C,EAAa,aAAexD,EAAO,qBAG9CF,EAAOC,QAAU,SAAsBC,EAAMC,GAC5C,GAAoB,iBAATD,GAAqC,IAAhBA,EAAKkB,OACpC,MAAM,IAAIyC,EAAW,6CAEtB,GAAI5C,UAAUG,OAAS,GAA6B,kBAAjBjB,EAClC,MAAM,IAAI0D,EAAW,6CAGtB,IAAIqF,EAAQX,EAAarI,GACrBiJ,EAAoBD,EAAM9H,OAAS,EAAI8H,EAAM,GAAK,GAElD9I,EAAY2I,EAAiB,IAAMI,EAAoB,IAAKhJ,GAC5DiJ,EAAoBhJ,EAAUF,KAC9BW,EAAQT,EAAUS,MAClBwI,GAAqB,EAErBL,EAAQ5I,EAAU4I,MAClBA,IACHG,EAAoBH,EAAM,GAC1BhB,EAAakB,EAAOnB,EAAQ,CAAC,EAAG,GAAIiB,KAGrC,IAAK,IAAI/G,EAAI,EAAGqH,GAAQ,EAAMrH,EAAIiH,EAAM9H,OAAQa,GAAK,EAAG,CACvD,IAAIsH,EAAOL,EAAMjH,GACbwG,EAAQL,EAAUmB,EAAM,EAAG,GAC3Bb,EAAON,EAAUmB,GAAO,GAC5B,IAEa,MAAVd,GAA2B,MAAVA,GAA2B,MAAVA,GACtB,MAATC,GAAyB,MAATA,GAAyB,MAATA,IAElCD,IAAUC,EAEb,MAAM,IAAIhF,EAAa,wDASxB,GAPa,gBAAT6F,GAA2BD,IAC9BD,GAAqB,GAMlB9H,EAAOuD,EAFXsE,EAAoB,KADpBD,GAAqB,IAAMI,GACmB,KAG7C1I,EAAQiE,EAAWsE,QACb,GAAa,MAATvI,EAAe,CACzB,KAAM0I,KAAQ1I,GAAQ,CACrB,IAAKV,EACJ,MAAM,IAAI0D,EAAW,sBAAwB3D,EAAO,+CAErD,OAED,GAAIQ,GAAUuB,EAAI,GAAMiH,EAAM9H,OAAQ,CACrC,IAAIF,EAAOR,EAAMG,EAAO0I,GAWvB1I,GAVDyI,IAAUpI,IASG,QAASA,KAAU,kBAAmBA,EAAKkD,KAC/ClD,EAAKkD,IAELvD,EAAM0I,QAGfD,EAAQ/H,EAAOV,EAAO0I,GACtB1I,EAAQA,EAAM0I,GAGXD,IAAUD,IACbvE,EAAWsE,GAAqBvI,IAInC,OAAOA,I,4BCtUR,IAAI2I,EAA+B,oBAAXvE,QAA0BA,OAC9CwE,EAAgB,EAAQ,MAE5BzJ,EAAOC,QAAU,WAChB,MAA0B,mBAAfuJ,GACW,mBAAXvE,QACsB,iBAAtBuE,EAAW,QACO,iBAAlBvE,OAAO,QAEXwE,M,sBCRRzJ,EAAOC,QAAU,WAChB,GAAsB,mBAAXgF,QAAiE,mBAAjCzD,OAAOkI,sBAAwC,OAAO,EACjG,GAA+B,iBAApBzE,OAAOC,SAAyB,OAAO,EAElD,IAAItD,EAAM,GACN+H,EAAM1E,OAAO,QACb2E,EAASpI,OAAOmI,GACpB,GAAmB,iBAARA,EAAoB,OAAO,EAEtC,GAA4C,oBAAxCnI,OAAOC,UAAUE,SAASlB,KAAKkJ,GAA8B,OAAO,EACxE,GAA+C,oBAA3CnI,OAAOC,UAAUE,SAASlB,KAAKmJ,GAAiC,OAAO,EAY3E,IAAKD,KADL/H,EAAI+H,GADS,GAED/H,EAAO,OAAO,EAC1B,GAA2B,mBAAhBJ,OAAOqI,MAAmD,IAA5BrI,OAAOqI,KAAKjI,GAAKR,OAAgB,OAAO,EAEjF,GAA0C,mBAA/BI,OAAOsI,qBAAiF,IAA3CtI,OAAOsI,oBAAoBlI,GAAKR,OAAgB,OAAO,EAE/G,IAAI2I,EAAOvI,OAAOkI,sBAAsB9H,GACxC,GAAoB,IAAhBmI,EAAK3I,QAAgB2I,EAAK,KAAOJ,EAAO,OAAO,EAEnD,IAAKnI,OAAOC,UAAUuI,qBAAqBvJ,KAAKmB,EAAK+H,GAAQ,OAAO,EAEpE,GAA+C,mBAApCnI,OAAOwC,yBAAyC,CAC1D,IAAIiG,EAAazI,OAAOwC,yBAAyBpC,EAAK+H,GACtD,GAdY,KAcRM,EAAWpJ,QAA8C,IAA1BoJ,EAAWC,WAAuB,OAAO,EAG7E,OAAO,I,4BCtCR,IAAI5F,EAAa,EAAQ,MAEzBtE,EAAOC,QAAU,WAChB,OAAOqE,OAAkBW,OAAOkF,c,4BCHjC,IAAI9J,EAAO,EAAQ,MAEnBL,EAAOC,QAAUI,EAAKI,KAAK4C,SAAS5C,KAAMe,OAAOC,UAAUC,iB,SCJ9B,mBAAlBF,OAAO4I,OAEhBpK,EAAOC,QAAU,SAAkBoK,EAAMC,GACnCA,IACFD,EAAKE,OAASD,EACdD,EAAK5I,UAAYD,OAAO4I,OAAOE,EAAU7I,UAAW,CAClD+I,YAAa,CACX3J,MAAOwJ,EACPH,YAAY,EACZO,UAAU,EACVtJ,cAAc,OAOtBnB,EAAOC,QAAU,SAAkBoK,EAAMC,GACvC,GAAIA,EAAW,CACbD,EAAKE,OAASD,EACd,IAAII,EAAW,aACfA,EAASjJ,UAAY6I,EAAU7I,UAC/B4I,EAAK5I,UAAY,IAAIiJ,EACrBL,EAAK5I,UAAU+I,YAAcH,K,4BCrBnC,IAAIM,EAAiB,EAAQ,KAAR,GAGjBC,EAFY,EAAQ,KAERC,CAAU,6BAEtBC,EAAsB,SAAqBjK,GAC9C,QAAI8J,GAAkB9J,GAA0B,iBAAVA,GAAsBoE,OAAOkF,eAAetJ,IAGtD,uBAArB+J,EAAU/J,IAGdkK,EAAoB,SAAqBlK,GAC5C,QAAIiK,EAAoBjK,IAGP,OAAVA,GACW,iBAAVA,GACiB,iBAAjBA,EAAMO,QACbP,EAAMO,QAAU,GACK,mBAArBwJ,EAAU/J,IACkB,sBAA5B+J,EAAU/J,EAAMmK,SAGdC,EAA6B,WAChC,OAAOH,EAAoB7J,WADI,GAIhC6J,EAAoBC,kBAAoBA,EAExC/K,EAAOC,QAAUgL,EAA4BH,EAAsBC,G,4BC9BnE,IAcIG,EAdA5I,EAAQd,OAAOC,UAAUE,SACzBwJ,EAAU9H,SAAS5B,UAAUE,SAC7ByJ,EAAY,sBACZT,EAAiB,EAAQ,KAAR,GACjBpG,EAAW/C,OAAOgD,eAYtBxE,EAAOC,QAAU,SAA6B4B,GAC7C,GAAkB,mBAAPA,EACV,OAAO,EAER,GAAIuJ,EAAUC,KAAKF,EAAQ1K,KAAKoB,IAC/B,OAAO,EAER,IAAK8I,EAEJ,MAAe,+BADLrI,EAAM7B,KAAKoB,GAGtB,IAAK0C,EACJ,OAAO,EAER,QAAiC,IAAtB2G,EAAmC,CAC7C,IAAII,EA1BiB,WACtB,IAAKX,EACJ,OAAO,EAER,IACC,OAAOtH,SAAS,wBAATA,GACN,MAAOvC,KAoBYyK,GACpBL,IAAoBI,GAAgB/G,EAAS+G,GAE9C,OAAO/G,EAAS1C,KAAQqJ,I,4BClCzB,IAAIM,EAAU,EAAQ,MAClBC,EAAuB,EAAQ,MAC/BZ,EAAY,EAAQ,MAEpBD,EAAYC,EAAU,6BACtBF,EAAiB,EAAQ,KAAR,GAEjBe,EAA0B,oBAAfC,WAA6B,EAAAD,EAASC,WACjDC,EAAcH,IAEd1L,EAAW8K,EAAU,2BAA2B,IAAS,SAAiBgB,EAAOhL,GACpF,IAAK,IAAIoB,EAAI,EAAGA,EAAI4J,EAAMzK,OAAQa,GAAK,EACtC,GAAI4J,EAAM5J,KAAOpB,EAChB,OAAOoB,EAGT,OAAQ,GAEL6J,EAASjB,EAAU,0BACnBkB,EAAY,GACZC,EAAO,EAAQ,KACfxH,EAAiBhD,OAAOgD,eACxBmG,GAAkBqB,GAAQxH,GAC7BgH,EAAQI,GAAa,SAAUK,GAC9B,IAAIC,EAAM,IAAIR,EAAEO,GAChB,GAAIhH,OAAOkF,eAAe+B,EAAK,CAC9B,IAAIC,EAAQ3H,EAAe0H,GACvBjC,EAAa+B,EAAKG,EAAOlH,OAAOkF,aACpC,IAAKF,EAAY,CAChB,IAAImC,EAAa5H,EAAe2H,GAChClC,EAAa+B,EAAKI,EAAYnH,OAAOkF,aAEtC4B,EAAUE,GAAchC,EAAW7F,QAiBtCpE,EAAOC,QAAU,SAAsBY,GACtC,IAAKA,GAA0B,iBAAVA,EAAsB,OAAO,EAClD,IAAK8J,KAAoB1F,OAAOkF,eAAetJ,GAAQ,CACtD,IAAIwL,EAAMP,EAAOlB,EAAU/J,GAAQ,GAAI,GACvC,OAAOd,EAAS6L,EAAaS,IAAQ,EAEtC,QAAKL,GAlBe,SAA2BnL,GAC/C,IAAIyL,GAAU,EAQd,OAPAd,EAAQO,GAAW,SAAUQ,EAAQN,GACpC,IAAKK,EACJ,IACCA,EAAUC,EAAO9L,KAAKI,KAAWoL,EAChC,MAAOnL,QAGJwL,EAUAE,CAAe3L,K,SCzDvB,IAOI4L,EACAC,EARAC,EAAU3M,EAAOC,QAAU,GAU/B,SAAS2M,IACL,MAAM,IAAIhH,MAAM,mCAEpB,SAASiH,IACL,MAAM,IAAIjH,MAAM,qCAsBpB,SAASkH,EAAWC,GAChB,GAAIN,IAAqBO,WAErB,OAAOA,WAAWD,EAAK,GAG3B,IAAKN,IAAqBG,IAAqBH,IAAqBO,WAEhE,OADAP,EAAmBO,WACZA,WAAWD,EAAK,GAE3B,IAEI,OAAON,EAAiBM,EAAK,GAC/B,MAAMjM,GACJ,IAEI,OAAO2L,EAAiBhM,KAAK,KAAMsM,EAAK,GAC1C,MAAMjM,GAEJ,OAAO2L,EAAiBhM,KAAKiC,KAAMqK,EAAK,MAvCnD,WACG,IAEQN,EADsB,mBAAfO,WACYA,WAEAJ,EAEzB,MAAO9L,GACL2L,EAAmBG,EAEvB,IAEQF,EADwB,mBAAjBO,aACcA,aAEAJ,EAE3B,MAAO/L,GACL4L,EAAqBG,GAjB7B,GAwEA,IAEIK,EAFAC,EAAQ,GACRC,GAAW,EAEXC,GAAc,EAElB,SAASC,IACAF,GAAaF,IAGlBE,GAAW,EACPF,EAAa9L,OACb+L,EAAQD,EAAanK,OAAOoK,GAE5BE,GAAc,EAEdF,EAAM/L,QACNmM,KAIR,SAASA,IACL,IAAIH,EAAJ,CAGA,IAAII,EAAUV,EAAWQ,GACzBF,GAAW,EAGX,IADA,IAAIK,EAAMN,EAAM/L,OACVqM,GAAK,CAGP,IAFAP,EAAeC,EACfA,EAAQ,KACCE,EAAaI,GACdP,GACAA,EAAaG,GAAYK,MAGjCL,GAAc,EACdI,EAAMN,EAAM/L,OAEhB8L,EAAe,KACfE,GAAW,EAnEf,SAAyBO,GACrB,GAAIjB,IAAuBO,aAEvB,OAAOA,aAAaU,GAGxB,IAAKjB,IAAuBG,IAAwBH,IAAuBO,aAEvE,OADAP,EAAqBO,aACdA,aAAaU,GAExB,IAEWjB,EAAmBiB,GAC5B,MAAO7M,GACL,IAEI,OAAO4L,EAAmBjM,KAAK,KAAMkN,GACvC,MAAO7M,GAGL,OAAO4L,EAAmBjM,KAAKiC,KAAMiL,KAgD7CC,CAAgBJ,IAiBpB,SAASK,EAAKd,EAAKlB,GACfnJ,KAAKqK,IAAMA,EACXrK,KAAKmJ,MAAQA,EAYjB,SAASiC,KA5BTnB,EAAQoB,SAAW,SAAUhB,GACzB,IAAInK,EAAO,IAAIP,MAAMpB,UAAUG,OAAS,GACxC,GAAIH,UAAUG,OAAS,EACnB,IAAK,IAAIa,EAAI,EAAGA,EAAIhB,UAAUG,OAAQa,IAClCW,EAAKX,EAAI,GAAKhB,UAAUgB,GAGhCkL,EAAM/J,KAAK,IAAIyK,EAAKd,EAAKnK,IACJ,IAAjBuK,EAAM/L,QAAiBgM,GACvBN,EAAWS,IASnBM,EAAKpM,UAAUiM,IAAM,WACjBhL,KAAKqK,IAAIzL,MAAM,KAAMoB,KAAKmJ,QAE9Bc,EAAQqB,MAAQ,UAChBrB,EAAQsB,SAAU,EAClBtB,EAAQuB,IAAM,GACdvB,EAAQwB,KAAO,GACfxB,EAAQyB,QAAU,GAClBzB,EAAQ0B,SAAW,GAInB1B,EAAQ2B,GAAKR,EACbnB,EAAQ4B,YAAcT,EACtBnB,EAAQ6B,KAAOV,EACfnB,EAAQ8B,IAAMX,EACdnB,EAAQ+B,eAAiBZ,EACzBnB,EAAQgC,mBAAqBb,EAC7BnB,EAAQiC,KAAOd,EACfnB,EAAQkC,gBAAkBf,EAC1BnB,EAAQmC,oBAAsBhB,EAE9BnB,EAAQoC,UAAY,SAAU7O,GAAQ,MAAO,IAE7CyM,EAAQqC,QAAU,SAAU9O,GACxB,MAAM,IAAI0F,MAAM,qCAGpB+G,EAAQsC,IAAM,WAAc,MAAO,KACnCtC,EAAQuC,MAAQ,SAAUC,GACtB,MAAM,IAAIvJ,MAAM,mCAEpB+G,EAAQyC,MAAQ,WAAa,OAAO,I,QCvLpCpP,EAAOC,QAAU,SAAkBoP,GACjC,OAAOA,GAAsB,iBAARA,GACI,mBAAbA,EAAIC,MACS,mBAAbD,EAAIE,MACc,mBAAlBF,EAAIG,Y,4BCClB,IAAIC,EAAoB,EAAQ,MAC5BC,EAAsB,EAAQ,MAC9BC,EAAkB,EAAQ,MAC1BC,EAAe,EAAQ,MAE3B,SAASC,EAAYC,GACnB,OAAOA,EAAErP,KAAKJ,KAAKyP,GAGrB,IAAIC,EAAoC,oBAAX3K,OACzB4K,EAAoC,oBAAX/K,OAEzBgL,EAAiBJ,EAAYrO,OAAOC,UAAUE,UAE9CuO,EAAcL,EAAYpJ,OAAOhF,UAAU0O,SAC3CC,EAAcP,EAAYzI,OAAO3F,UAAU0O,SAC3CE,EAAeR,EAAYxK,QAAQ5D,UAAU0O,SAEjD,GAAIJ,EACF,IAAIO,EAAcT,EAAYzK,OAAO3D,UAAU0O,SAGjD,GAAIH,EACF,IAAIO,EAAcV,EAAY5K,OAAOxD,UAAU0O,SAGjD,SAASK,EAAoB3P,EAAO4P,GAClC,GAAqB,iBAAV5P,EACT,OAAO,EAET,IAEE,OADA4P,EAAiB5P,IACV,EACP,MAAMC,GACN,OAAO,GA8FX,SAAS4P,EAAc7P,GACrB,MAAiC,iBAA1BoP,EAAepP,GAkBxB,SAAS8P,EAAc9P,GACrB,MAAiC,iBAA1BoP,EAAepP,GAiBxB,SAAS+P,EAAkB/P,GACzB,MAAiC,qBAA1BoP,EAAepP,GAiBxB,SAASgQ,EAAkBhQ,GACzB,MAAiC,qBAA1BoP,EAAepP,GAWxB,SAASiQ,EAAsBjQ,GAC7B,MAAiC,yBAA1BoP,EAAepP,GAMxB,SAASkQ,EAAclQ,GACrB,MAA2B,oBAAhBmE,cAIJ8L,EAAsBE,QACzBF,EAAsBjQ,GACtBA,aAAiBmE,aAIvB,SAASiM,EAAmBpQ,GAC1B,MAAiC,sBAA1BoP,EAAepP,GAOxB,SAASqQ,EAAWrQ,GAClB,MAAwB,oBAAbyE,WAIJ2L,EAAmBD,QACtBC,EAAmBpQ,GACnBA,aAAiByE,UA9LvBrF,EAAQwP,kBAAoBA,EAC5BxP,EAAQyP,oBAAsBA,EAC9BzP,EAAQ2P,aAAeA,EAkBvB3P,EAAQkR,UAdR,SAAmBC,GAClB,MAEqB,oBAAZxK,SACPwK,aAAiBxK,SAGP,OAAVwK,GACiB,iBAAVA,GACe,mBAAfA,EAAMC,MACU,mBAAhBD,EAAME,OAgBhBrR,EAAQsR,kBAVR,SAA2B1Q,GACzB,MAA2B,oBAAhBmE,aAA+BA,YAAYwM,OAC7CxM,YAAYwM,OAAO3Q,GAI1B+O,EAAa/O,IACbqQ,EAAWrQ,IASfZ,EAAQwR,aAHR,SAAsB5Q,GACpB,MAAkC,eAA3B8O,EAAgB9O,IAOzBZ,EAAQyR,oBAHR,SAA6B7Q,GAC3B,MAAkC,sBAA3B8O,EAAgB9O,IAOzBZ,EAAQ0R,cAHR,SAAuB9Q,GACrB,MAAkC,gBAA3B8O,EAAgB9O,IAOzBZ,EAAQ2R,cAHR,SAAuB/Q,GACrB,MAAkC,gBAA3B8O,EAAgB9O,IAOzBZ,EAAQ4R,YAHR,SAAqBhR,GACnB,MAAkC,cAA3B8O,EAAgB9O,IAOzBZ,EAAQ6R,aAHR,SAAsBjR,GACpB,MAAkC,eAA3B8O,EAAgB9O,IAOzBZ,EAAQ8R,aAHR,SAAsBlR,GACpB,MAAkC,eAA3B8O,EAAgB9O,IAOzBZ,EAAQ+R,eAHR,SAAwBnR,GACtB,MAAkC,iBAA3B8O,EAAgB9O,IAOzBZ,EAAQgS,eAHR,SAAwBpR,GACtB,MAAkC,iBAA3B8O,EAAgB9O,IAOzBZ,EAAQiS,gBAHR,SAAyBrR,GACvB,MAAkC,kBAA3B8O,EAAgB9O,IAOzBZ,EAAQkS,iBAHR,SAA0BtR,GACxB,MAAkC,mBAA3B8O,EAAgB9O,IAOzB6P,EAAcM,QACG,oBAARxK,KACPkK,EAAc,IAAIlK,KAYpBvG,EAAQmS,MATR,SAAevR,GACb,MAAmB,oBAAR2F,MAIJkK,EAAcM,QACjBN,EAAc7P,GACdA,aAAiB2F,MAOvBmK,EAAcK,QACG,oBAAR9J,KACPyJ,EAAc,IAAIzJ,KAWpBjH,EAAQoS,MATR,SAAexR,GACb,MAAmB,oBAARqG,MAIJyJ,EAAcK,QACjBL,EAAc9P,GACdA,aAAiBqG,MAOvB0J,EAAkBI,QACG,oBAAZvJ,SACPmJ,EAAkB,IAAInJ,SAWxBxH,EAAQqS,UATR,SAAmBzR,GACjB,MAAuB,oBAAZ4G,UAIJmJ,EAAkBI,QACrBJ,EAAkB/P,GAClBA,aAAiB4G,UAOvBoJ,EAAkBG,QACG,oBAAZrJ,SACPkJ,EAAkB,IAAIlJ,SAKxB1H,EAAQsS,UAHR,SAAmB1R,GACjB,OAAOgQ,EAAkBhQ,IAO3BiQ,EAAsBE,QACG,oBAAhBhM,aACP8L,EAAsB,IAAI9L,aAW5B/E,EAAQ8Q,cAAgBA,EAKxBE,EAAmBD,QACM,oBAAhBhM,aACa,oBAAbM,UACP2L,EAAmB,IAAI3L,SAAS,IAAIN,YAAY,GAAI,EAAG,IAWzD/E,EAAQiR,WAAaA,EAGrB,IAAIsB,EAAqD,oBAAtBrL,kBAAoCA,uBAAoB1D,EAC3F,SAASgP,EAA4B5R,GACnC,MAAiC,+BAA1BoP,EAAepP,GAExB,SAAS6R,EAAoB7R,GAC3B,YAAqC,IAA1B2R,SAIwC,IAAxCC,EAA4BzB,UACrCyB,EAA4BzB,QAAUyB,EAA4B,IAAID,IAGjEC,EAA4BzB,QAC/ByB,EAA4B5R,GAC5BA,aAAiB2R,GA6BvB,SAASG,EAAe9R,GACtB,OAAO2P,EAAoB3P,EAAOqP,GAIpC,SAAS0C,EAAe/R,GACtB,OAAO2P,EAAoB3P,EAAOuP,GAIpC,SAASyC,EAAgBhS,GACvB,OAAO2P,EAAoB3P,EAAOwP,GAIpC,SAASyC,EAAejS,GACtB,OAAOkP,GAAmBS,EAAoB3P,EAAOyP,GAIvD,SAASyC,EAAelS,GACtB,OAAOmP,GAAmBQ,EAAoB3P,EAAO0P,GAhDvDtQ,EAAQyS,oBAAsBA,EAK9BzS,EAAQ+S,gBAHR,SAAyBnS,GACvB,MAAiC,2BAA1BoP,EAAepP,IAOxBZ,EAAQgT,cAHR,SAAuBpS,GACrB,MAAiC,0BAA1BoP,EAAepP,IAOxBZ,EAAQiT,cAHR,SAAuBrS,GACrB,MAAiC,0BAA1BoP,EAAepP,IAOxBZ,EAAQkT,kBAHR,SAA2BtS,GACzB,MAAiC,uBAA1BoP,EAAepP,IAOxBZ,EAAQmT,4BAHR,SAAqCvS,GACnC,MAAiC,gCAA1BoP,EAAepP,IAOxBZ,EAAQ0S,eAAiBA,EAKzB1S,EAAQ2S,eAAiBA,EAKzB3S,EAAQ4S,gBAAkBA,EAK1B5S,EAAQ6S,eAAiBA,EAKzB7S,EAAQ8S,eAAiBA,EAWzB9S,EAAQoT,iBATR,SAA0BxS,GACxB,OACE8R,EAAe9R,IACf+R,EAAe/R,IACfgS,EAAgBhS,IAChBiS,EAAejS,IACfkS,EAAelS,IAWnBZ,EAAQqT,iBANR,SAA0BzS,GACxB,MAA6B,oBAAfgE,aACZkM,EAAclQ,IACd6R,EAAoB7R,KAKxB,CAAC,UAAW,aAAc,2BAA2B2K,SAAQ,SAAS+H,GACpE/R,OAAOgS,eAAevT,EAASsT,EAAQ,CACrCrJ,YAAY,EACZrJ,MAAO,WACL,MAAM,IAAI+E,MAAM2N,EAAS,wC,6BCrT3BE,EAA4BjS,OAAOiS,2BACrC,SAAmC7R,GAGjC,IAFA,IAAIiI,EAAOrI,OAAOqI,KAAKjI,GACnB8R,EAAc,GACTzR,EAAI,EAAGA,EAAI4H,EAAKzI,OAAQa,IAC/ByR,EAAY7J,EAAK5H,IAAMT,OAAOwC,yBAAyBpC,EAAKiI,EAAK5H,IAEnE,OAAOyR,GAGPC,EAAe,WACnB1T,EAAQ2T,OAAS,SAAS9D,GACxB,IAAK+D,EAAS/D,GAAI,CAEhB,IADA,IAAIgE,EAAU,GACL7R,EAAI,EAAGA,EAAIhB,UAAUG,OAAQa,IACpC6R,EAAQ1Q,KAAK2Q,EAAQ9S,UAAUgB,KAEjC,OAAO6R,EAAQxQ,KAAK,KAGlBrB,EAAI,EAmBR,IAnBA,IACIW,EAAO3B,UACPwM,EAAM7K,EAAKxB,OACX4S,EAAM5M,OAAO0I,GAAG3H,QAAQwL,GAAc,SAASlP,GACjD,GAAU,OAANA,EAAY,MAAO,IACvB,GAAIxC,GAAKwL,EAAK,OAAOhJ,EACrB,OAAQA,GACN,IAAK,KAAM,OAAO2C,OAAOxE,EAAKX,MAC9B,IAAK,KAAM,OAAOwE,OAAO7D,EAAKX,MAC9B,IAAK,KACH,IACE,OAAOsE,KAAK0N,UAAUrR,EAAKX,MAC3B,MAAOiS,GACP,MAAO,aAEX,QACE,OAAOzP,MAGJA,EAAI7B,EAAKX,GAAIA,EAAIwL,EAAKhJ,EAAI7B,IAAOX,GACpCkS,EAAO1P,KAAO2P,EAAS3P,GACzBuP,GAAO,IAAMvP,EAEbuP,GAAO,IAAMD,EAAQtP,GAGzB,OAAOuP,GAOT/T,EAAQoU,UAAY,SAASxS,EAAIyS,GAC/B,QAAuB,IAAZ3H,IAAqD,IAA1BA,EAAQ4H,cAC5C,OAAO1S,EAIT,QAAuB,IAAZ8K,EACT,OAAO,WACL,OAAO1M,EAAQoU,UAAUxS,EAAIyS,GAAKhT,MAAMoB,KAAMzB,YAIlD,IAAIuT,GAAS,EAeb,OAdA,WACE,IAAKA,EAAQ,CACX,GAAI7H,EAAQ8H,iBACV,MAAM,IAAI7O,MAAM0O,GACP3H,EAAQ+H,iBACjBC,QAAQC,MAAMN,GAEdK,QAAQE,MAAMP,GAEhBE,GAAS,EAEX,OAAO3S,EAAGP,MAAMoB,KAAMzB,aAO1B,IAAI6T,EAAS,GACTC,EAAgB,KAEpB,GAAIpI,EAAQuB,IAAI8G,WAAY,CAC1B,IAAIC,EAAWtI,EAAQuB,IAAI8G,WAC3BC,EAAWA,EAAS9M,QAAQ,qBAAsB,QAC/CA,QAAQ,MAAO,MACfA,QAAQ,KAAM,OACd+M,cACHH,EAAgB,IAAI9N,OAAO,IAAMgO,EAAW,IAAK,KA2BnD,SAASlB,EAAQnS,EAAKuT,GAEpB,IAAIrT,EAAM,CACRsT,KAAM,GACNC,QAASC,GAkBX,OAfIrU,UAAUG,QAAU,IAAGU,EAAIyT,MAAQtU,UAAU,IAC7CA,UAAUG,QAAU,IAAGU,EAAI0T,OAASvU,UAAU,IAC9CwU,EAAUN,GAEZrT,EAAI4T,WAAaP,EACRA,GAETlV,EAAQ0V,QAAQ7T,EAAKqT,GAGnBS,EAAY9T,EAAI4T,cAAa5T,EAAI4T,YAAa,GAC9CE,EAAY9T,EAAIyT,SAAQzT,EAAIyT,MAAQ,GACpCK,EAAY9T,EAAI0T,UAAS1T,EAAI0T,QAAS,GACtCI,EAAY9T,EAAI+T,iBAAgB/T,EAAI+T,eAAgB,GACpD/T,EAAI0T,SAAQ1T,EAAIuT,QAAUS,GACvBC,EAAYjU,EAAKF,EAAKE,EAAIyT,OAoCnC,SAASO,EAAiB9B,EAAKgC,GAC7B,IAAIC,EAAQlC,EAAQmC,OAAOF,GAE3B,OAAIC,EACK,KAAYlC,EAAQyB,OAAOS,GAAO,GAAK,IAAMjC,EAC7C,KAAYD,EAAQyB,OAAOS,GAAO,GAAK,IAEvCjC,EAKX,SAASsB,EAAetB,EAAKgC,GAC3B,OAAOhC,EAeT,SAAS+B,EAAYjU,EAAKjB,EAAOsV,GAG/B,GAAIrU,EAAI+T,eACJhV,GACAuV,EAAWvV,EAAMkT,UAEjBlT,EAAMkT,UAAY9T,EAAQ8T,WAExBlT,EAAM2J,aAAe3J,EAAM2J,YAAY/I,YAAcZ,GAAQ,CACjE,IAAIwV,EAAMxV,EAAMkT,QAAQoC,EAAcrU,GAItC,OAHK+R,EAASwC,KACZA,EAAMN,EAAYjU,EAAKuU,EAAKF,IAEvBE,EAIT,IAAIC,EA+FN,SAAyBxU,EAAKjB,GAC5B,GAAI+U,EAAY/U,GACd,OAAOiB,EAAIuT,QAAQ,YAAa,aAClC,GAAIxB,EAAShT,GAAQ,CACnB,IAAI0V,EAAS,IAAOhQ,KAAK0N,UAAUpT,GAAOsH,QAAQ,SAAU,IAClBA,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAAO,IACjE,OAAOrG,EAAIuT,QAAQkB,EAAQ,UAE7B,OAAIC,EAAS3V,GACJiB,EAAIuT,QAAQ,GAAKxU,EAAO,UAC7B4U,EAAU5U,GACLiB,EAAIuT,QAAQ,GAAKxU,EAAO,WAE7BsT,EAAOtT,GACFiB,EAAIuT,QAAQ,OAAQ,aAD7B,EA7GgBoB,CAAgB3U,EAAKjB,GACrC,GAAIyV,EACF,OAAOA,EAIT,IAAIzM,EAAOrI,OAAOqI,KAAKhJ,GACnB6V,EApCN,SAAqB7K,GACnB,IAAI8K,EAAO,GAMX,OAJA9K,EAAML,SAAQ,SAASoL,EAAKC,GAC1BF,EAAKC,IAAO,KAGPD,EA6BWG,CAAYjN,GAQ9B,GANI/H,EAAI4T,aACN7L,EAAOrI,OAAOsI,oBAAoBjJ,IAKhCkW,EAAQlW,KACJgJ,EAAKmN,QAAQ,YAAc,GAAKnN,EAAKmN,QAAQ,gBAAkB,GACrE,OAAOC,EAAYpW,GAIrB,GAAoB,IAAhBgJ,EAAKzI,OAAc,CACrB,GAAIgV,EAAWvV,GAAQ,CACrB,IAAIX,EAAOW,EAAMX,KAAO,KAAOW,EAAMX,KAAO,GAC5C,OAAO4B,EAAIuT,QAAQ,YAAcnV,EAAO,IAAK,WAE/C,GAAIgX,EAASrW,GACX,OAAOiB,EAAIuT,QAAQpO,OAAOxF,UAAUE,SAASlB,KAAKI,GAAQ,UAE5D,GAAIsW,EAAOtW,GACT,OAAOiB,EAAIuT,QAAQ9P,KAAK9D,UAAUE,SAASlB,KAAKI,GAAQ,QAE1D,GAAIkW,EAAQlW,GACV,OAAOoW,EAAYpW,GAIvB,IA2CIuW,EA3CAC,EAAO,GAAIxL,GAAQ,EAAOyL,EAAS,CAAC,IAAK,KA6B7C,OA1BIC,EAAQ1W,KACVgL,GAAQ,EACRyL,EAAS,CAAC,IAAK,MAIblB,EAAWvV,KAEbwW,EAAO,cADCxW,EAAMX,KAAO,KAAOW,EAAMX,KAAO,IACf,KAIxBgX,EAASrW,KACXwW,EAAO,IAAMpQ,OAAOxF,UAAUE,SAASlB,KAAKI,IAI1CsW,EAAOtW,KACTwW,EAAO,IAAM9R,KAAK9D,UAAU+V,YAAY/W,KAAKI,IAI3CkW,EAAQlW,KACVwW,EAAO,IAAMJ,EAAYpW,IAGP,IAAhBgJ,EAAKzI,QAAkByK,GAAyB,GAAhBhL,EAAMO,OAItC+U,EAAe,EACbe,EAASrW,GACJiB,EAAIuT,QAAQpO,OAAOxF,UAAUE,SAASlB,KAAKI,GAAQ,UAEnDiB,EAAIuT,QAAQ,WAAY,YAInCvT,EAAIsT,KAAKhS,KAAKvC,GAIZuW,EADEvL,EAsCN,SAAqB/J,EAAKjB,EAAOsV,EAAcO,EAAa7M,GAE1D,IADA,IAAIuN,EAAS,GACJnV,EAAI,EAAGD,EAAInB,EAAMO,OAAQa,EAAID,IAAKC,EACrCP,EAAeb,EAAOuG,OAAOnF,IAC/BmV,EAAOhU,KAAKqU,EAAe3V,EAAKjB,EAAOsV,EAAcO,EACjDtP,OAAOnF,IAAI,IAEfmV,EAAOhU,KAAK,IAShB,OANAyG,EAAK2B,SAAQ,SAASkM,GACfA,EAAI/O,MAAM,UACbyO,EAAOhU,KAAKqU,EAAe3V,EAAKjB,EAAOsV,EAAcO,EACjDgB,GAAK,OAGNN,EArDIO,CAAY7V,EAAKjB,EAAOsV,EAAcO,EAAa7M,GAEnDA,EAAK+N,KAAI,SAASF,GACzB,OAAOD,EAAe3V,EAAKjB,EAAOsV,EAAcO,EAAagB,EAAK7L,MAItE/J,EAAIsT,KAAKyC,MA6GX,SAA8BT,EAAQC,EAAMC,GAQ1C,OANaF,EAAOU,QAAO,SAASC,EAAMC,GAGxC,OADIA,EAAIhB,QAAQ,MACTe,EAAOC,EAAI7P,QAAQ,kBAAmB,IAAI/G,OAAS,IACzD,GAEU,GACJkW,EAAO,IACG,KAATD,EAAc,GAAKA,EAAO,OAC3B,IACAD,EAAO9T,KAAK,SACZ,IACAgU,EAAO,GAGTA,EAAO,GAAKD,EAAO,IAAMD,EAAO9T,KAAK,MAAQ,IAAMgU,EAAO,GA5H1DW,CAAqBb,EAAQC,EAAMC,IAxBjCA,EAAO,GAAKD,EAAOC,EAAO,GA+CrC,SAASL,EAAYpW,GACnB,MAAO,IAAM+E,MAAMnE,UAAUE,SAASlB,KAAKI,GAAS,IAwBtD,SAAS4W,EAAe3V,EAAKjB,EAAOsV,EAAcO,EAAagB,EAAK7L,GAClE,IAAI3L,EAAM8T,EAAK9S,EAsCf,IArCAA,EAAOM,OAAOwC,yBAAyBnD,EAAO6W,IAAQ,CAAE7W,MAAOA,EAAM6W,KAC5DtT,IAEL4P,EADE9S,EAAKgX,IACDpW,EAAIuT,QAAQ,kBAAmB,WAE/BvT,EAAIuT,QAAQ,WAAY,WAG5BnU,EAAKgX,MACPlE,EAAMlS,EAAIuT,QAAQ,WAAY,YAG7B3T,EAAegV,EAAagB,KAC/BxX,EAAO,IAAMwX,EAAM,KAEhB1D,IACClS,EAAIsT,KAAK4B,QAAQ9V,EAAKL,OAAS,GAE/BmT,EADEG,EAAOgC,GACHJ,EAAYjU,EAAKZ,EAAKL,MAAO,MAE7BkV,EAAYjU,EAAKZ,EAAKL,MAAOsV,EAAe,IAE5Ca,QAAQ,OAAS,IAErBhD,EADEnI,EACImI,EAAImE,MAAM,MAAMP,KAAI,SAASQ,GACjC,MAAO,KAAOA,KACb9U,KAAK,MAAM+U,OAAO,GAEf,KAAOrE,EAAImE,MAAM,MAAMP,KAAI,SAASQ,GACxC,MAAO,MAAQA,KACd9U,KAAK,OAIZ0Q,EAAMlS,EAAIuT,QAAQ,aAAc,YAGhCO,EAAY1V,GAAO,CACrB,GAAI2L,GAAS6L,EAAI/O,MAAM,SACrB,OAAOqL,GAET9T,EAAOqG,KAAK0N,UAAU,GAAKyD,IAClB/O,MAAM,iCACbzI,EAAOA,EAAKmY,OAAO,EAAGnY,EAAKkB,OAAS,GACpClB,EAAO4B,EAAIuT,QAAQnV,EAAM,UAEzBA,EAAOA,EAAKiI,QAAQ,KAAM,OACdA,QAAQ,OAAQ,KAChBA,QAAQ,WAAY,KAChCjI,EAAO4B,EAAIuT,QAAQnV,EAAM,WAI7B,OAAOA,EAAO,KAAO8T,EA6BvB,SAASuD,EAAQe,GACf,OAAOjW,MAAMkV,QAAQe,GAIvB,SAAS7C,EAAUpG,GACjB,MAAsB,kBAARA,EAIhB,SAAS8E,EAAO9E,GACd,OAAe,OAARA,EAST,SAASmH,EAASnH,GAChB,MAAsB,iBAARA,EAIhB,SAASwE,EAASxE,GAChB,MAAsB,iBAARA,EAShB,SAASuG,EAAYvG,GACnB,YAAe,IAARA,EAIT,SAAS6H,EAASqB,GAChB,OAAOnE,EAASmE,IAA8B,oBAAvBC,EAAeD,GAKxC,SAASnE,EAAS/E,GAChB,MAAsB,iBAARA,GAA4B,OAARA,EAIpC,SAAS8H,EAAOsB,GACd,OAAOrE,EAASqE,IAA4B,kBAAtBD,EAAeC,GAKvC,SAAS1B,EAAQjW,GACf,OAAOsT,EAAStT,KACW,mBAAtB0X,EAAe1X,IAA2BA,aAAa8E,OAK9D,SAASwQ,EAAW/G,GAClB,MAAsB,mBAARA,EAgBhB,SAASmJ,EAAeE,GACtB,OAAOlX,OAAOC,UAAUE,SAASlB,KAAKiY,GAIxC,SAASC,EAAIC,GACX,OAAOA,EAAI,GAAK,IAAMA,EAAEjX,SAAS,IAAMiX,EAAEjX,SAAS,IAvbpD1B,EAAQ4Y,SAAW,SAASX,GAE1B,GADAA,EAAMA,EAAIhD,eACLJ,EAAOoD,GACV,GAAInD,EAAc1J,KAAK6M,GAAM,CAC3B,IAAIY,EAAMnM,EAAQmM,IAClBhE,EAAOoD,GAAO,WACZ,IAAI5D,EAAMrU,EAAQ2T,OAAOtS,MAAMrB,EAASgB,WACxC0T,QAAQE,MAAM,YAAaqD,EAAKY,EAAKxE,SAGvCQ,EAAOoD,GAAO,aAGlB,OAAOpD,EAAOoD,IAoChBjY,EAAQ8T,QAAUA,EAIlBA,EAAQyB,OAAS,CACf,KAAS,CAAC,EAAG,IACb,OAAW,CAAC,EAAG,IACf,UAAc,CAAC,EAAG,IAClB,QAAY,CAAC,EAAG,IAChB,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,KAAS,CAAC,GAAI,IACd,KAAS,CAAC,GAAI,IACd,MAAU,CAAC,GAAI,IACf,QAAY,CAAC,GAAI,IACjB,IAAQ,CAAC,GAAI,IACb,OAAW,CAAC,GAAI,KAIlBzB,EAAQmC,OAAS,CACf,QAAW,OACX,OAAU,SACV,QAAW,SACX,UAAa,OACb,KAAQ,OACR,OAAU,QACV,KAAQ,UAER,OAAU,OA+QZjW,EAAQ8Y,MAAQ,EAAhB,MAKA9Y,EAAQsX,QAAUA,EAKlBtX,EAAQwV,UAAYA,EAKpBxV,EAAQkU,OAASA,EAKjBlU,EAAQ+Y,kBAHR,SAA2B3J,GACzB,OAAc,MAAPA,GAOTpP,EAAQuW,SAAWA,EAKnBvW,EAAQ4T,SAAWA,EAKnB5T,EAAQgZ,SAHR,SAAkB5J,GAChB,MAAsB,iBAARA,GAOhBpP,EAAQ2V,YAAcA,EAKtB3V,EAAQiX,SAAWA,EACnBjX,EAAQ8Y,MAAM7B,SAAWA,EAKzBjX,EAAQmU,SAAWA,EAKnBnU,EAAQkX,OAASA,EACjBlX,EAAQ8Y,MAAM5B,OAASA,EAMvBlX,EAAQ8W,QAAUA,EAClB9W,EAAQ8Y,MAAMG,cAAgBnC,EAK9B9W,EAAQmW,WAAaA,EAUrBnW,EAAQkZ,YARR,SAAqB9J,GACnB,OAAe,OAARA,GACe,kBAARA,GACQ,iBAARA,GACQ,iBAARA,GACQ,iBAARA,QACQ,IAARA,GAIhBpP,EAAQmZ,SAAW,EAAnB,KAYA,IAAIC,EAAS,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MACxD,MAAO,MAAO,OAG5B,SAASC,IACP,IAAIb,EAAI,IAAIlT,KACRgU,EAAO,CAACZ,EAAIF,EAAEe,YACNb,EAAIF,EAAEgB,cACNd,EAAIF,EAAEiB,eAAepW,KAAK,KACtC,MAAO,CAACmV,EAAEkB,UAAWN,EAAOZ,EAAEmB,YAAaL,GAAMjW,KAAK,KAqCxD,SAAS5B,EAAeE,EAAKiY,GAC3B,OAAOrY,OAAOC,UAAUC,eAAejB,KAAKmB,EAAKiY,GAjCnD5Z,EAAQ6Z,IAAM,WACZnF,QAAQmF,IAAI,UAAWR,IAAarZ,EAAQ2T,OAAOtS,MAAMrB,EAASgB,aAiBpEhB,EAAQ8Z,SAAW,EAAnB,MAEA9Z,EAAQ0V,QAAU,SAASqE,EAAQC,GAEjC,IAAKA,IAAQ7F,EAAS6F,GAAM,OAAOD,EAInC,IAFA,IAAInQ,EAAOrI,OAAOqI,KAAKoQ,GACnBhY,EAAI4H,EAAKzI,OACNa,KACL+X,EAAOnQ,EAAK5H,IAAMgY,EAAIpQ,EAAK5H,IAE7B,OAAO+X,GAOT,IAAIE,EAA6C,oBAAXjV,OAAyBA,OAAO,8BAA2BxB,EA0DjG,SAAS0W,EAAsBC,EAAQC,GAKrC,IAAKD,EAAQ,CACX,IAAIE,EAAY,IAAI1U,MAAM,2CAC1B0U,EAAUF,OAASA,EACnBA,EAASE,EAEX,OAAOD,EAAGD,GAlEZna,EAAQsa,UAAY,SAAmBC,GACrC,GAAwB,mBAAbA,EACT,MAAM,IAAIzY,UAAU,oDAEtB,GAAImY,GAA4BM,EAASN,GAA2B,CAClE,IAAIrY,EACJ,GAAkB,mBADdA,EAAK2Y,EAASN,IAEhB,MAAM,IAAInY,UAAU,iEAKtB,OAHAP,OAAOgS,eAAe3R,EAAIqY,EAA0B,CAClDrZ,MAAOgB,EAAIqI,YAAY,EAAOO,UAAU,EAAOtJ,cAAc,IAExDU,EAGT,SAASA,IAQP,IAPA,IAAI4Y,EAAgBC,EAChBC,EAAU,IAAI/T,SAAQ,SAAUgU,EAASC,GAC3CJ,EAAiBG,EACjBF,EAAgBG,KAGdjY,EAAO,GACFX,EAAI,EAAGA,EAAIhB,UAAUG,OAAQa,IACpCW,EAAKQ,KAAKnC,UAAUgB,IAEtBW,EAAKQ,MAAK,SAAU0X,EAAKja,GACnBia,EACFJ,EAAcI,GAEdL,EAAe5Z,MAInB,IACE2Z,EAASlZ,MAAMoB,KAAME,GACrB,MAAOkY,GACPJ,EAAcI,GAGhB,OAAOH,EAQT,OALAnZ,OAAOuZ,eAAelZ,EAAIL,OAAOgD,eAAegW,IAE5CN,GAA0B1Y,OAAOgS,eAAe3R,EAAIqY,EAA0B,CAChFrZ,MAAOgB,EAAIqI,YAAY,EAAOO,UAAU,EAAOtJ,cAAc,IAExDK,OAAOwZ,iBACZnZ,EACA4R,EAA0B+G,KAI9Bva,EAAQsa,UAAUU,OAASf,EAiD3Bja,EAAQib,YAlCR,SAAqBV,GACnB,GAAwB,mBAAbA,EACT,MAAM,IAAIzY,UAAU,oDAMtB,SAASoZ,IAEP,IADA,IAAIvY,EAAO,GACFX,EAAI,EAAGA,EAAIhB,UAAUG,OAAQa,IACpCW,EAAKQ,KAAKnC,UAAUgB,IAGtB,IAAImZ,EAAUxY,EAAKiV,MACnB,GAAuB,mBAAZuD,EACT,MAAM,IAAIrZ,UAAU,8CAEtB,IAAIsZ,EAAO3Y,KACP2X,EAAK,WACP,OAAOe,EAAQ9Z,MAAM+Z,EAAMpa,YAI7BuZ,EAASlZ,MAAMoB,KAAME,GAClByO,MAAK,SAASgF,GAAO1J,EAAQoB,SAASsM,EAAGha,KAAK,KAAM,KAAMgW,OACrD,SAASiF,GAAO3O,EAAQoB,SAASoM,EAAsB9Z,KAAK,KAAMib,EAAKjB,OAMjF,OAHA7Y,OAAOuZ,eAAeI,EAAe3Z,OAAOgD,eAAegW,IAC3DhZ,OAAOwZ,iBAAiBG,EACA1H,EAA0B+G,IAC3CW,I,4BCtsBT,IAAI3P,EAAU,EAAQ,MAClBC,EAAuB,EAAQ,MAC/BZ,EAAY,EAAQ,MAEpBD,EAAYC,EAAU,6BACtBF,EAAiB,EAAQ,KAAR,GAEjBe,EAA0B,oBAAfC,WAA6B,EAAAD,EAASC,WACjDC,EAAcH,IAEdK,EAASjB,EAAU,0BACnBkB,EAAY,GACZC,EAAO,EAAQ,KACfxH,EAAiBhD,OAAOgD,eACxBmG,GAAkBqB,GAAQxH,GAC7BgH,EAAQI,GAAa,SAAUK,GAC9B,GAA6B,mBAAlBP,EAAEO,GAA4B,CACxC,IAAIC,EAAM,IAAIR,EAAEO,GAChB,GAAIhH,OAAOkF,eAAe+B,EAAK,CAC9B,IAAIC,EAAQ3H,EAAe0H,GACvBjC,EAAa+B,EAAKG,EAAOlH,OAAOkF,aACpC,IAAKF,EAAY,CAChB,IAAImC,EAAa5H,EAAe2H,GAChClC,EAAa+B,EAAKI,EAAYnH,OAAOkF,aAEtC4B,EAAUE,GAAchC,EAAW7F,SAMvC,IAeIwL,EAAe,EAAQ,MAE3B5P,EAAOC,QAAU,SAAyBY,GACzC,QAAK+O,EAAa/O,KACb8J,GAAoB1F,OAAOkF,eAAetJ,EAnB3B,SAA2BA,GAC/C,IAAI0a,GAAY,EAWhB,OAVA/P,EAAQO,GAAW,SAAUQ,EAAQN,GACpC,IAAKsP,EACJ,IACC,IAAIrb,EAAOqM,EAAO9L,KAAKI,GACnBX,IAAS+L,IACZsP,EAAYrb,GAEZ,MAAOY,QAGJya,EAQA/O,CAAe3L,GAD0CiL,EAAOlB,EAAU/J,GAAQ,GAAI,M,2BCpD9F,MAAM2a,EAAK,EAAQ,MACbC,EAAK,EAAQ,MACbC,EAAO,EAAQ,MACfC,EAAO,EAAQ,MACfC,EAAW,EAAQ,KAEnBC,EAAS,EAAQ,MAEjBC,EAAY,EAAQ,MAG1B,MAAMC,UAAuBnW,OA2K7B,SAASoW,EAAoBC,GACzB,MAAO,mBAAqBA,EAYhC,SAASC,EAAgBC,EAAqBC,EAAgBC,GAE1D,IAVgBC,EAUZC,EATuB,OADXD,EAUgBD,GATnBG,OAAO,GACTd,EAAKpY,KAAKkY,EAAGiB,UAAWH,EAASla,MAAM,IAE3Cka,EAOP,GAAIb,EAAGiB,WAAWH,GACd,OAAOA,EAEX,GAAIH,IAAmBV,EAAKiB,WAAWJ,KACnCA,EAAiBb,EAAKpY,KAAK8Y,EAAgBG,GACvCd,EAAGiB,WAAWH,IACd,OAAOA,EAGf,IAAIK,EAAaT,EAAsBA,EAAoB/X,IAAI4X,EAAoBK,IAAa,KAChG,OAAIO,GAAcnB,EAAGiB,WAAWE,GACrBA,EAEJ,KA8BX,SAASC,EAAgBC,EAAUC,GAC/B,MAAMC,EAAYF,EAASG,UAC3B,IAAK,IAAIC,EAAO,EAAGA,EAAOF,IAAaE,EAAM,CACzC,MAAMC,EAAYL,EAASM,OAAOF,GAAMG,KACxC,IAAKN,IAAmBI,EAAUG,WAAWP,GACzC,OAAOI,EAGf,OAAO,KAuBX,MAAMI,UAA4B3X,OAElC,MAAM4X,UAA6B7B,EAAK8B,kBACpCjT,YAAYsS,EAAUY,EAAOC,EAAQC,GAAW,EAAOb,EAAe,KAAMc,EAAW,QAASC,EAAgB,KAE5GC,QACArb,KAAKoa,SAAWA,EAChBpa,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EACdjb,KAAKkb,WAAaA,EAClBlb,KAAKqa,eAAiBA,EACtBra,KAAKmb,WAAaA,EAClBnb,KAAKob,gBAAkBA,EACvBpb,KAAKsb,GAAK,EACVtb,KAAKub,GAAK,EACVvb,KAAKwb,YAAc,IAAI1c,OACvBkB,KAAKyb,qBAAuB,KAC5Bzb,KAAK0b,aAAe1b,KAAK2b,mBAG7BC,QAGAD,mBACI,IAAIE,EAAc1B,EAAgBna,KAAKoa,SAAUpa,KAAKqa,gBAEtD,OADmBjB,EAAU0C,YAAYD,EAAa7b,KAAKgb,MAAOhb,KAAKib,QAA4C,GAAO,GAI9Hc,wBAAwBC,GACpB,IAAIC,EAAe,IAAInd,OACvBma,EAAKiD,sBAAsBF,EAAYhc,KAAKob,gBAAiBa,GAC7DhD,EAAKkD,sBAAsBH,EAAYhc,KAAKob,gBAAiBa,GAC7D,IAAIJ,EAAc1B,EAAgBna,KAAKoa,SAAUpa,KAAKqa,gBAClDqB,EAAetC,EAAU0C,YAAYD,EAAa7b,KAAKgb,MAAOhb,KAAKib,QAA4C,GAAO,GAK1H,OAJIjb,KAAKkb,aACLjC,EAAKmD,0BAA0BJ,EAAYhc,KAAKob,gBAAiBM,EAAc,kBAAmBO,GAClGhD,EAAKoD,2BAA2BL,EAAYhc,KAAKob,gBAAiBM,EAAcO,IAE7EA,EAGXF,mBACI,OAAO/b,KAAKkb,WAAalb,KAAK0b,aAAe,KAGjDY,eACI,IAAIC,EAAkB,GACtB,MAAMjC,EAAYta,KAAKoa,SAASG,UAChC,KAAOva,KAAKub,GAAKjB,GAAW,CACxB,IAAI5E,EAAO1V,KAAKoa,SAASM,OAAO1a,KAAKub,IAAIZ,KAEzC,GADA3a,KAAKub,IAAM,EACPvb,KAAKub,IAAMjB,GAA4B,GAAf5E,EAAKhX,OAC7B,OAAO,KACX,IAAI8d,EAAcpD,EAAUqD,gCAAgCF,EAAiB7G,EAAM1V,KAAKqa,gBACxF,GAAoB,OAAhBmC,EACA,OAAOA,EAEf,OAAO,KAGXE,kBACI,MAAMpC,EAAYta,KAAKoa,SAASG,UAChC,KAAOva,KAAKub,GAAKjB,GAAW,CACxB,IAAI5E,EAAO1V,KAAKoa,SAASM,OAAO1a,KAAKub,IAAIZ,KAEzC,GADA3a,KAAKub,IAAM,EACPvb,KAAKub,IAAMjB,GAA4B,GAAf5E,EAAKhX,OAC7B,OAAO,KACX,GAA4B,OAAxBsB,KAAKqa,iBAA4B3E,EAAKkF,WAAW5a,KAAKqa,gBACtD,OAAO3E,EAEf,OAAO,KAGXiH,gBACI,IAAIjH,EAAuB,cAAf1V,KAAKib,OAA0Bjb,KAAKsc,eAAiBtc,KAAK0c,kBACtE,GAAa,OAAThH,EACA,OAAO,KACX,IAAKkH,EAAQC,GAAWzD,EAAU0C,YAAYpG,EAAM1V,KAAKgb,MAAOhb,KAAKib,QAA4C,GACjH,GAAI4B,GACkC,OAA9B7c,KAAKyb,uBACLzb,KAAKyb,qBAAuBzb,KAAKub,GACd,cAAfvb,KAAKib,QACL,MAAM,IAAIJ,EAAoB,yCAAyC7a,KAAKmb,8BAA8Bnb,KAAKsb,YAAYtb,KAAKub,MAG5I,IAAIuB,EAAaF,EAAOle,OAGxB,OAFKsB,KAAKwb,YAAYxc,eAAe8d,KACjC9c,KAAKwb,YAAYsB,GAAc9c,KAAKsb,IACjCsB,EAGXb,mBAMI,OALe,GAAX/b,KAAKsb,IAAWtb,KAAKkb,YACrBlb,KAAK2c,gBAET3c,KAAKsb,IAAM,EACEtb,KAAK2c,gBAItBI,eACI,IAAI3c,EAAS,GAKb,OAJkC,OAA9BJ,KAAKyb,sBACLrb,EAAOM,KAAK,yCAAyCV,KAAKmb,kCAAkCnb,KAAKyb,wBACjG3c,OAAOqI,KAAKnH,KAAKwb,aAAa9c,OAAS,GACvC0B,EAAOM,KA7HnB,SAA8Cya,EAAY6B,GACtD,IAAI7V,EAAOrI,OAAOqI,KAAK6V,GACnBC,EAAU,GACd,IAAK,IAAI1d,EAAI,EAAGA,EAAI4H,EAAKzI,OAAQa,IAAK,CAClC,IAAIyV,EAAM7N,EAAK5H,GACX2d,EAAYF,EAA0BhI,GAC1CiI,EAAQvc,KAAK,CAACwc,EAAWlI,IAE7BiI,EAAQE,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,MAvPlD,SAAgBC,EAAWC,EAAQ,MAC/B,IAAKD,EAID,MAHKC,IACDA,EAAU,mBAER,IAAIlE,EAAekE,GAmP7BC,CAAOP,EAAQve,OAAS,GACxB,IAAK+e,EAAUC,GAAgBT,EAAQ,IAClCU,EAAUC,GAAgBX,EAAQ,GACnCY,EAAW,wBAAwB1C,+BAEvC,OADA0C,GAAY,eAAeJ,QAAeC,oBAA+BC,QAAeC,WACjFC,EA+GaC,CAAqC9d,KAAKmb,WAAYnb,KAAKwb,cACpEpb,GAKf,MAAM2d,UAAqB9E,EAAK+E,iBAC5BlW,YAAYkT,EAAOC,GASf,GARAI,QACArb,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EACdjb,KAAKie,WAAa,KAClBje,KAAKke,gBAAiB,EACtBle,KAAKme,wBAAyB,EAC9Bne,KAAKoe,aAAe,GAEN,UAAVnD,EACAjb,KAAKqe,iBAAmBre,KAAKse,iBAC1B,GAAc,UAAVrD,EACPjb,KAAKqe,iBAAmBre,KAAKue,iBAC1B,GAAc,cAAVtD,EACPjb,KAAKqe,iBAAmBre,KAAKwe,qBAC1B,GAAc,cAAVvD,EACPjb,KAAKqe,iBAAmBre,KAAKye,cAC1B,IAAc,cAAVxD,EAGP,MAAM,IAAIJ,EAAoB,6BAF9B7a,KAAKqe,iBAAmBre,KAAKse,aAMrCI,WAAWC,GACQ,OAAXA,IACA3e,KAAKie,WAAaU,EAAOjgB,OACzBsB,KAAK4e,MAAMD,IAInBJ,YAAYM,GACR,IAAI7D,EAAQhb,KAAKgb,MAEjB,OADoB6D,EAAO3J,KAAI,SAAS4J,GAAK,OAAO1F,EAAU2F,YAAYra,OAAOoa,GAAI9D,MAChEpa,KAAKZ,KAAKgb,OAInCwD,gBAAgBK,GACZ,IAAI7D,EAAQhb,KAAKgb,MAEjB,OADoB6D,EAAO3J,KAAI,SAAS4J,GAAK,OAAO1F,EAAU4F,gBAAgBta,OAAOoa,GAAI9D,MACpEpa,KAAKZ,KAAKgb,OAInCyD,UAAUI,GACN,GAAIA,EAAOngB,OAAS,EAChB,MAAM,IAAImc,EAAoB,mFAElC,OAAOgE,EAAO,GAIlBP,YAAYO,GACR,IAAII,EAAMJ,EAAOje,KAAKZ,KAAKgb,OAI3B,OAH4C,GAAxC6D,EAAOje,KAAK,IAAI0T,QAAQtU,KAAKgb,SAC7Bhb,KAAKme,wBAAyB,GAE3Bc,EAIXC,iBAAiBC,GACb,IAAK,IAAI5f,EAAI,EAAGA,EAAI4f,EAAWzgB,OAAQa,IACd,MAAjB4f,EAAW5f,IACXS,KAAKke,gBAAiB,EACtBiB,EAAW5f,GAAK,IACTI,MAAMkV,QAAQsK,EAAW5f,MAChCS,KAAKkf,iBAAiBC,EAAW5f,IACjC4f,EAAW5f,GAAK4f,EAAW5f,GAAGqB,KAAKZ,KAAKof,kBAMpDR,MAAMC,GACF,GAAwB,OAApB7e,KAAKie,YAAuBY,EAAOngB,QAAUsB,KAAKie,WAClD,MAAM,IAAIpD,EAAoB,2EAA2E7a,KAAKie,iBAAiBY,EAAOngB,UAG1I,OAFAsB,KAAKkf,iBAAiBL,GACtB7e,KAAKoe,aAAa1d,KAAKV,KAAKqe,iBAAiBQ,KACtC,EAGX9C,gBAGAgB,eACI,IAAI3c,EAAS,GAKb,OAJIJ,KAAKke,gBACL9d,EAAOM,KAAK,wDACZV,KAAKme,wBACL/d,EAAOM,KAAK,wCACTN,GAIf,MAAMif,EACFvX,eAEAwX,yBAAyBC,GACrB,MAAM,IAAI1E,EAAoB,uEAGlCkC,eACI,MAAO,IAcf,MAAMyC,UAAoCvG,EAAKwG,kBAC3C3X,YAAY2R,EAAqBiG,EAAgB1E,EAAOC,EAAQ0E,EAAUzE,GAAW,EAAOb,EAAe,KAAMuF,EAAQ,MACrHvE,QACArb,KAAKyZ,oBAAsBA,EAC3BzZ,KAAK0f,eAAiBA,EACtB1f,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EACdjb,KAAK2f,SAAWA,EAChB3f,KAAKkb,WAAaA,EAClBlb,KAAKqa,eAAiBA,EACtBra,KAAK6f,OAAS,KACd7f,KAAK8f,gBAAkB,KAEvB9f,KAAK4f,QAAUA,EACf5f,KAAK+f,gBAAkB,KACvB/f,KAAKka,WAAa,KAGtBoF,yBAAyB3F,GAErB,GADA3Z,KAAKka,WAAaV,EAAgBxZ,KAAKyZ,oBAAqBzZ,KAAK0f,eAAgB/F,GACzD,OAApB3Z,KAAKka,WACL,MAAM,IAAIW,EAAoB,8BAA8BlB,MAQhE,OANI3Z,KAAK4f,SAAW5f,KAAK4f,QAAmB,UACxC5f,KAAK+f,gBAAkB/f,KAAKka,WAE5Bla,KAAK6f,OAAS9G,EAAGiH,iBAAiBhgB,KAAKka,YAE3Cla,KAAK8f,gBAAkB,IAAI5G,EAAS+G,kBAAkBjgB,KAAK6f,OAAQ7f,KAAK+f,gBAAiB/f,KAAK2f,SAAU3f,KAAKgb,MAAOhb,KAAKib,OAAQjb,KAAKkb,WAAYlb,KAAKqa,eAAgBV,EAAU,KAC1K3Z,KAAK8f,gBAGhB/C,aAAamD,GACLlgB,KAAK8f,iBAAmB9f,KAAKkb,YAC7BgF,EAAgBxf,KAAK,iCAAiCsY,EAAKmH,SAASngB,KAAKka,yDAsCrF5c,EAAOC,QAAQ+b,oBAAsBA,EACrChc,EAAOC,QAAQic,gBAAkBA,EACjClc,EAAOC,QAAQ6iB,YA1WfrE,eAA2B7B,EAAYyF,GACnB,WAAZA,IACAA,EAAW,UACf,IACIU,EADW,EAAQ,MACKC,gBAAgB,CAAE5R,MAAOqK,EAAGiH,iBAAiB9F,EAAY,CAACyF,SAAUA,MAC5FY,GAAS,EACTC,EAAkB,KAClBC,EAAiB,KACjBC,EAAiB,IAAIxc,SAAQ,SAASgU,EAASC,GAC/CqI,EAAkBtI,EAClBuI,EAAiBtI,KAYrB,OAVAkI,EAAazU,GAAG,QAAQ8J,IACf6K,IACDA,GAAS,EACTF,EAAaM,QACbH,EAAgB9K,OAGxB2K,EAAazU,GAAG,SAASuG,IACrBsO,EAAetO,MAEZuO,GAqVXpjB,EAAOC,QAAQqjB,eArFf7E,eAA8BC,EAAY6E,EAAgBC,EAAaC,EAAcC,EAAcC,EAAef,EAAiBgB,EAAc7G,EAAe,MAC5J,IACI8G,EAAuB,IAAI9B,EAC3B+B,EAAiB,IAAItG,EAAqB+F,EAAgBC,EAAaC,EAAcG,EAAc7G,GACnGgH,EAAgB,IAAItD,EAAaiD,EAAcC,GAEnD,aADMhI,EAAKqI,MAAMtF,EAAYoF,EAAgBC,EAAenB,EAAiBiB,EAJxD,IAKdE,EAAcjD,cAgFzB9gB,EAAOC,QAAQgkB,gBApCfxF,eAA+BtC,EAAqBuC,EAAYwF,EAAYV,EAAaC,EAAcU,EAAaT,EAAcC,EAAeS,EAAcxB,EAAiBgB,GAAa,EAAO7G,EAAe,KAAMsH,EAAe,GAAI/B,EAAQ,MAChP,IAAIgC,EAAe,KACf7B,EAAkB,KAClBH,GAAWA,EAAmB,WAAK4B,EACnCzB,EAAkByB,EAElBI,EAA8B,OAAfJ,EAAsBvX,EAAQ4X,MAAQ9I,EAAGiH,iBAAiBwB,GAE7E,IAAKM,EAAeC,GAA0C,OAAhBN,EAAuB,CAACxX,EAAQ+X,QAAQ,GAAS,CAACjJ,EAAGkJ,kBAAkBR,IAAc,GACnI,GAAmB,KAAfX,GAAsC,UAAhBC,EACtB,MAAM,IAAIlG,EAAoB,+DAGlC,GAFoB,WAAhB6G,IACAA,EAAe,WACdxI,EAASgJ,SAASlG,IAA+B,UAAhB0F,EAClC,MAAM,IAAI7G,EAAoB,wFAClC,KAAM3B,EAASgJ,SAASpB,IAAiB5H,EAASgJ,SAASlB,IAAkC,UAAhBU,GACzE,MAAM,IAAI7G,EAAoB,wFAElC,IAAIsH,EAA2BnJ,EAAKpY,KAAKkY,EAAGiB,UAAW,wBACjC,IAAlB4H,GAAwB5I,EAAGiB,WAAWmI,KACtCR,EAAiBzI,EAASkJ,oBAAoBD,IAElD,IAAIzC,EAAiB8B,EAAaxI,EAAKqJ,QAAQb,GAAc,KACzDL,EAAuB,IAAI3B,EAA4B/F,EAAqBiG,EAAgBoB,EAAaC,EAAcW,EAAcR,EAAc7G,EAAgBuF,GACnKwB,EAAiB,IAAIlI,EAAS+G,kBAAkB2B,EAAc7B,EAAiB2B,EAAcZ,EAAaC,EAAcG,EAAc7G,GACtIgH,EAAgB,IAAInI,EAASoJ,UAAUR,EAAeC,EAAwBL,EAAcV,EAAcC,SAExGhI,EAAKqI,MAAMtF,EAAYoF,EAAgBC,EAAenB,EAAiBiB,EAAsBQ,GACnGR,EAAqBpE,aAAamD,IAStC5iB,EAAOC,QAAQ4c,gBAAkBA,EACjC7c,EAAOC,QAAQglB,uCA5af,SAAgDnI,EAAUoI,EAAsBC,EAAgBpI,EAAe,MAC3G,IAAIC,EAAYF,EAASG,UACrBmI,EAAe,KAPvB,IAAkBlZ,EASd,IAAK,IAAIgR,EADYiI,EAAe/jB,QARtB8K,EAQwCiZ,EAP/CjZ,EAAIA,EAAI9K,OAAS,IAO8C,GAAK,EAC3C8b,EAAOF,GAAamI,EAAe/jB,OAAS8jB,IAAwBhI,EAAM,CACtG,IAAIC,EAAYL,EAASM,OAAOF,GAAMG,KACtC,GAAIH,EAAO,GAAKF,GAA0B,IAAbG,EACzB,MACJ,GAAIJ,GAAkBI,EAAUG,WAAWP,GACvC,SACJ,IAAIsI,EAAalI,EAAUxU,MAAM,MAC7B2c,EAA8BD,GAAcA,EAAWjkB,OAAS,GAAK,EACzE,GAAqB,OAAjBgkB,GAA0BE,EAEvB,GAAqB,OAAjBF,GAAyBE,EAChCF,EAAelI,MACZ,KAAKoI,EACR,SAEAH,EAAe/hB,KAAK,CAACgiB,EAAclI,EAAO,IAC1CkI,EAAe,UAPfD,EAAe/hB,KAAK,CAAC8Z,EAAMA,EAAO,IAUrB,OAAjBkI,GACAD,EAAe/hB,KAAK,CAACgiB,EAAcpI,KAqZ3Chd,EAAOC,QAAQslB,2BA9iBf,WAcI,MAbsB,waAYpBpd,QAAQ,IAAIlB,OAAO,OAAQ,MAAO,KAkiBxCjH,EAAOC,QAAQulB,+BA7hBf,WAcI,MAbsB,+YAYpBrd,QAAQ,IAAIlB,OAAO,OAAQ,MAAO,KAihBxCjH,EAAOC,QAAQwlB,cArff,SAAuBC,EAAYhI,EAAOC,EAAQgI,GAC9C,IAAIC,EAAe,GACf5I,EAAY0I,EAAWzI,UACvB4I,GAAW,EACf,MAAMC,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIjJ,EAAiB+I,EAASA,EAAO1hB,IAAI,kBAAoB,GAC7D,IAAK,IAAI8Y,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIN,GAAkBI,EAAUG,WAAWP,GAAiB,CACxD6I,EAAaxiB,KAAK+Z,GAClB,SAEJ,IAAIoE,EAASzF,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GAAM,GACnE,IAAK,IAAI1b,EAAI,EAAGA,EAAIsf,EAAOngB,OAAS,KAC5Ba,GAAK0jB,EAAavkB,QADaa,IAAK,CAGxC,IAAIgkB,EAAW1E,EAAOtf,GAAGikB,OACrBC,EAAYR,EAAa1jB,GAAKgkB,EAAS7kB,OACvC+kB,GAAa,IACbF,GAAY,IAAIG,OAAOD,EAAY,IAEnC5E,EAAOtf,IAAMgkB,IACb1E,EAAOtf,GAAKgkB,EACZJ,GAAW,GAGnBD,EAAaxiB,KAAKme,EAAOje,KAAKoa,IAElC,OAAKmI,EAEED,EAAatiB,KAAK,MADd,MAydftD,EAAOC,QAAQomB,eApdf,SAAwBX,EAAYhI,EAAOC,GACvC,IAAIiI,EAAe,GACf5I,EAAY0I,EAAWzI,UACvB4I,GAAW,EACf,MAAMC,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIjJ,EAAiB+I,EAASA,EAAO1hB,IAAI,kBAAoB,GAC7D,IAAK,IAAI8Y,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIN,GAAkBI,EAAUG,WAAWP,GAAiB,CACxD6I,EAAaxiB,KAAK+Z,GAClB,SAEJ,IAAKoE,EAAQhC,GAAWzD,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GACxE,GAAI4B,EACA,MAAO,CAAC,KAAMrC,EAAO,GAEzB,IAAK,IAAIjb,EAAI,EAAGA,EAAIsf,EAAOngB,OAAQa,IAAK,CACpC,IAAIgkB,EAAW1E,EAAOtf,GAAGikB,OACrB3E,EAAOtf,GAAGb,QAAU6kB,EAAS7kB,SAC7BmgB,EAAOtf,GAAKgkB,EACZJ,GAAW,GAGnBD,EAAaxiB,KAAKme,EAAOje,KAAKoa,IAElC,OAAKmI,EAEE,CAACD,EAAatiB,KAAK,MAAO,MADtB,CAAC,KAAM,OA2btBtD,EAAOC,QAAQqmB,kBA9gBf,SAA2BZ,EAAYhI,EAAOC,GAC1C,IAAI7a,EAAS,GACTka,EAAY0I,EAAWzI,UAC3B,MAAM6I,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIjJ,EAAiB+I,EAASA,EAAO1hB,IAAI,kBAAoB,GAC7D,IAAK,IAAI8Y,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIN,GAAkBI,EAAUG,WAAWP,GACvC,SACJ,IAAKwE,EAAQhC,GAAWzD,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GACxE,GAAI4B,EACA,MAAO,CAAC,KAAMrC,EAAO,GAEzB,IAAK,IAAIjb,EAAI,EAAGA,EAAIsf,EAAOngB,OAAQa,IAC3Ba,EAAO1B,QAAUa,GACjBa,EAAOM,KAAK,GAChBN,EAAOb,GAAKgB,KAAKC,IAAIJ,EAAOb,GAAKsf,EAAOtf,GAAGikB,OAAQ9kB,QAG3D,MAAO,CAAC0B,EAAQ,Q,SC/EpB,IACIyjB,EAAY,IAAItf,OAAO,0BACvBuf,EAAiC,IAAIvf,OAAO,8BAWhD,SAASwf,EAAmBC,EAAKC,EAAKC,EAAiCC,EAA4BC,EAAMhkB,GACrG,IAAIyc,GAAU,EACd,IAAIwH,EAAUL,EAAIM,UAAUF,GAExBG,GADMJ,EAA6BL,EAAiCD,GACpDW,KAAKH,GACzB,GAAkB,OAAdE,EAAoB,CACpB,IAAIE,EAAYF,EAAU,GAAG7lB,OAC7B,GAAI0lB,EAAOK,GAAaT,EAAItlB,QAAUslB,EAAII,EAAOK,IAAcR,EAM3D,OALIC,EACA9jB,EAAOM,KAAK6jB,EAAU,IAEtBnkB,EAAOM,KAAK6jB,EAAU,GAAG9e,QAAQ,MAAO,MAErC,CAAC2e,EAAOK,EAAY,GAAG,GAElC5H,GAAU,EAEd,IAAI6H,EAAOV,EAAI1P,QAAQ2P,EAAKG,IACf,GAATM,IACAA,EAAOV,EAAItlB,QACf,IAAIimB,EAAQX,EAAIM,UAAUF,EAAMM,GAGhC,OAFA7H,EAAUA,IAAkC,GAAvB8H,EAAMrQ,QAAQ,KACnClU,EAAOM,KAAKikB,GACL,CAACD,EAAO,EAAG7H,GAItB,SAAS+H,EAAiBZ,EAAKC,EAAKC,GAAgC,GAEhE,IAAyB,GAArBF,EAAI1P,QAAQ,KACZ,MAAO,CAAC0P,EAAIvO,MAAMwO,IAAM,GAC5B,IAAI7jB,EAAS,GACTgkB,EAAO,EACPvH,GAAU,EACd,IAAIsH,EAAoC,KAAPF,EACjC,KAAOG,EAAOJ,EAAItlB,QAAQ,CACtB,IAAImmB,EAAoBd,EAAmBC,EAAKC,EAAKC,EAAiCC,EAA4BC,EAAMhkB,GACxHgkB,EAAOS,EAAkB,GACzBhI,EAAUA,GAAWgI,EAAkB,GAI3C,OAFIb,EAAIlK,OAAOkK,EAAItlB,OAAS,IAAMulB,GAC9B7jB,EAAOM,KAAK,IACT,CAACN,EAAQyc,GAsBpB,SAASiI,EAAcH,GACnB,IACIJ,EADM,IAAIhgB,OAAO,+BACDigB,KAAKG,GACzB,OAAkB,OAAdJ,EACOA,EAAU,GAAG9e,QAAQ,MAAO,KAEhCkf,EASX,SAASI,EAA+Bf,EAAKgB,GAAqB,GAC9D,IAAIC,EAAOD,EAAuB,IAAIzgB,OAAO,YAAa,KAAO,IAAIA,OAAO,QAAS,KACrF,IAAInE,EAAS,GACTmkB,EAAY,KAChB,KAAuC,QAAhCA,EAAYU,EAAKT,KAAKR,KACzB5jB,EAAOM,KAAK6jB,EAAU,IAE1B,GAAIS,EACA,IAAK,IAAIzlB,EAAI,EAAGA,EAAIa,EAAO1B,OAAS,EAAGa,IACnCa,EAAOb,GAAKa,EAAOb,GAAGG,MAAM,GAAI,GAGxC,OAAOU,EAsCX9C,EAAOC,QAAQqnB,iBAAmBA,EAClCtnB,EAAOC,QAAQwnB,+BAAiCA,EAChDznB,EAAOC,QAAQue,YApCf,SAAqBkI,EAAKC,EAAKhJ,EAAQiJ,GACnC,MAAe,WAAXjJ,EACO,CAAC+I,EAAIvO,MAAMwO,IAAM,GACb,eAAXhJ,EACO,CAAC8J,EAA+Bf,EAAKE,IAAkC,GACnE,eAAXjJ,EACO,CAAC,CAAC+I,IAAM,GACZY,EAAiBZ,EAAKC,EAAKC,IA8BtC5mB,EAAOC,QAAQwhB,YAtFf,SAAqBiF,EAAKhJ,GACtB,OAA2B,GAAvBgJ,EAAI1P,QAAQ0G,KAAqC,GAArBgJ,EAAI1P,QAAQ,KAEjC,IADO0P,EAAIve,QAAQ,KAAM,SAG7Bue,GAkFX1mB,EAAOC,QAAQyhB,gBA9Ef,SAAyBgF,EAAKhJ,GAC1B,OAA2B,GAAvBgJ,EAAI1P,QAAQ0G,KAAqC,GAArBgJ,EAAI1P,QAAQ,OAAoC,GAAtB0P,EAAI1P,QAAQ,QAAqC,GAAtB0P,EAAI1P,QAAQ,MAEtF,IADO0P,EAAIve,QAAQ,KAAM,SAG7Bue,GA0EX1mB,EAAOC,QAAQunB,cAAgBA,EAC/BxnB,EAAOC,QAAQ2nB,eA7Df,SAAwBrG,GACpB,OAAOA,EAAO3J,IAAI4P,IA6DtBxnB,EAAOC,QAAQ4nB,YA7If,SAAqBxK,GACjB,OAAOA,EAAKlF,MAAM,eA6ItBnY,EAAOC,QAAQkf,gCA/Bf,SAAyC2I,EAA0BC,EAAchL,EAAe,MAG5F,GAAuB,OAAnBA,GAA8D,GAAnC+K,EAAyB1mB,QAAe2mB,EAAazK,WAAWP,GAC3F,OAAO,KACX,IAAIsI,EAAa0C,EAAapf,MAAM,MAChC2c,EAA8BD,GAAcA,EAAWjkB,OAAS,GAAK,EACzE,GAAuC,GAAnC0mB,EAAyB1mB,SAAgBkkB,EACzC,OAAOyC,EACJ,GAAuC,GAAnCD,EAAyB1mB,QAAekkB,EAC/CwC,EAAyB1kB,KAAK2kB,OAC3B,IAAKzC,EAEL,CACHwC,EAAyB1kB,KAAK2kB,GAC9B,IAAIC,EAAgBF,EAAyBxkB,KAAK,MAElD,OADAwkB,EAAyB7f,OAAO,EAAG6f,EAAyB1mB,QACrD4mB,EALPF,EAAyB1kB,KAAK2kB,GAOlC,OAAO,O,0CC1IV,SAAS9nB,SAOV,MAAMgoB,yBAAyBriB,OAC/B,MAAMsiB,yBAAyBtiB,OAC/B,MAAMmW,uBAAuBnW,OAC7B,MAAM2X,4BAA4B3X,OAGlC,MAAMuiB,8BAA8BviB,MAChC4E,YAAY4d,KAAYC,GACpBtK,SAASsK,GACT3lB,KAAK0lB,QAAUA,GAKvB,SAASlI,OAAOF,EAAWC,EAAQ,MAC/B,IAAKD,EAID,MAHKC,IACDA,EAAU,mBAER,IAAIlE,eAAekE,GAKjC,SAASqI,YAAY5B,EAAK6B,EAAQC,GAC9B,OAAO9B,EAAIvO,MAAMoQ,GAAQjlB,KAAKklB,GAIlC,MAAMC,YACFje,YAAYkU,EAAYoF,EAAgBC,EAAeM,GACnD3hB,KAAKgc,WAAaA,EAClBhc,KAAKohB,eAAiBA,EACtBphB,KAAKgmB,OAAS3E,EACdrhB,KAAK2hB,eAAiBA,EAEtB3hB,KAAKimB,YAAc,KACnBjmB,KAAKkmB,UAAY,KAEjBlmB,KAAKmmB,iBAAmB,IAAIriB,IAE5B9D,KAAKomB,oBAAsB,KAE3BpmB,KAAKqmB,kBAAoB,EACzBrmB,KAAKsmB,2BAA6B,KAClCtmB,KAAKumB,uBAAyB,GAE9BvmB,KAAKwmB,cAAgB,KACrBxmB,KAAKymB,SAAW,KAChBzmB,KAAK0mB,wBAA0B,KAE/B1mB,KAAK2mB,iBAAmB,KAExB3mB,KAAK4mB,kBAAoB,KAEzB5mB,KAAK6mB,mBAAqB,KAE1B7mB,KAAK8mB,oBAAsB,MAInC,IAAIC,cAAgB,KAGpB,MAAMC,8BAAgC,iGAChCC,aAAe,SAGrB,SAASC,wBAAwBC,EAAiBC,GAC9C,MAA2B,KAAnBD,GAA6C,KAAnBC,GAA+C,KAAnBD,GAA6C,KAAnBC,GAA+C,KAAnBD,GAA6C,KAAnBC,EAIlJ,SAASC,oCAAoCT,GACzC,IAAIU,EAAa,GACbC,EAAW,EACXC,EAAgB,GACpB,IAAK,IAAIjoB,EAAI,EAAGA,EAAIqnB,EAAkBloB,OAAQa,IAAK,CAC/C,IAAIkoB,EAAWb,EAAkBrnB,GACjC,GAAgB,KAAZkoB,GAA2C,GAAxBD,EAAc9oB,OACjC4oB,EAAW5mB,KAAKkmB,EAAkBtC,UAAUiD,EAAUhoB,IACtDgoB,EAAWhoB,EAAI,OACZ,IAA0C,GAAtC,CAAC,IAAK,IAAK,KAAK+U,QAAQmT,GAC/BD,EAAc9mB,KAAK+mB,QAChB,IAA0C,GAAtC,CAAC,IAAK,IAAK,KAAKnT,QAAQmT,GAAiB,CAChD,IAAID,EAAc9oB,SAAUwoB,wBAAwBM,EAAcA,EAAc9oB,OAAS,GAAI+oB,GAGzF,MAAM,IAAIlC,iBAAiB,iGAAiGkC,MAF5HD,EAAcrS,OAM1B,GAAIqS,EAAc9oB,OACd,MAAM,IAAI6mB,iBAAiB,iGAAiGiC,EAAc,OAI9I,OAFAF,EAAW5mB,KAAKkmB,EAAkBtC,UAAUiD,EAAUX,EAAkBloB,SACxE4oB,EAAaA,EAAWpS,KAAIwS,GAAQA,EAAKlE,SAClC8D,EAIX,SAASK,eAAeC,GAEpB,OAAKA,GAAcA,EAAWlpB,OAAS,EAC5B,KACU,KAAjBkpB,EAAW,IAAkD,KAArCA,EAAWA,EAAWlpB,OAAS,GAChDkpB,EAAWtD,UAAU,EAAGsD,EAAWlpB,OAAS,GAAG+G,QAAQ,OAAQ,KAAKA,QAAQ,QAAS,MACpE,KAAjBmiB,EAAW,IAAkD,KAArCA,EAAWA,EAAWlpB,OAAS,GACvDkpB,EAAWtD,UAAU,EAAGsD,EAAWlpB,OAAS,GAAG+G,QAAQ,OAAQ,KAAKA,QAAQ,QAAS,MAErF,KAKf,SAASoiB,2BAA2BC,EAAWC,GAE3CD,EAAYA,EAAUtE,OACtB,IAAIwE,EAAmB,uBACnBC,EAAmB,2BAA2BzD,KAAKsD,GACnDI,EAAkB,qCAAqC1D,KAAKsD,GAC5DK,EAAsB,uBAAuB3D,KAAKsD,GAClDM,EAAsB,gDAAgD5D,KAAKsD,GAC/E,GAAyB,OAArBG,EAA2B,CAC3B,GAAIH,GAAaE,EACb,MAAO,CAAC7M,WAAY,KAAMkN,aAAc,KAAMC,YAAa,KAAMC,SAAS,GAC9E,GAAIT,EAAUlN,WAAW,0BACrB,OAAO,KACX,IAAI3U,EAAQ,mBAAmBue,KAAKsD,GACpC,OAAc,OAAV7hB,EACO,CAACkV,WAAYlV,EAAM,GAAIoiB,aAAcpkB,SAASgC,EAAM,IAAM,EAAGqiB,YAAa,KAAMC,SAAS,GAG7F,CAACpN,WAAY,KAAMkN,aAAc,KAAMC,YAAaR,EAAWS,SAAS,GAC5E,GAAwB,OAApBL,EAA0B,CACjC,IAAI/M,EAAa+M,EAAgB,GAC7BI,EAAcJ,EAAgB,GAClC,OAAII,GAAeN,EACR,CAAC7M,WAAYA,EAAYkN,aAAc,KAAMC,YAAa,KAAMC,SAAS,GAE7E,CAACpN,WAAY,KAAMkN,aAAc,KAAMC,YAAaA,EAAaC,SAAS,GAC9E,GAA2B,MAAvBJ,EAGP,MAAO,CAAChN,WAFSgN,EAAoB,GAELE,aADbpkB,SAASkkB,EAAoB,IAAM,EACMG,YAAa,KAAMC,SAAS,GACrF,GAA2B,MAAvBH,EAA6B,CACnBA,EAAoB,GAArC,IACII,EAA6BJ,EAAoB,GACrD,GAAII,EAA6BT,EAAgBrpB,OAAQ,CACrD,IACI+pB,EAAuBd,eADFI,EAAgBS,IAEzC,GAAIC,MAAAA,EACA,MAAO,CAACtN,WAAY,KAAMkN,aAAc,KAAMC,YAAaG,EAAsBF,SAAS,IAItG,OAAO,KAIX,SAASG,8CAA8C9B,EAAmBmB,GAUtE,OAFiBV,oCAAoCT,GACvB1R,KAAIyT,GAAMd,2BAA2Bc,EAAIZ,KAK3E,SAASa,eAAexL,EAAGC,GACvB,IAAK,IAAI9d,EAAI,EAAGA,EAAI6d,EAAE1e,OAAQa,IAC1B,GAAI6d,EAAE7d,KAAO8d,EAAE9d,GACX,OAAO6d,EAAE7d,GAAK8d,EAAE9d,IAAM,EAAI,EAKtC,SAASspB,SAASjM,EAAQzI,GACtB,OAAOA,EAAMyI,EAAOle,OAASke,EAAOzI,GAAO,KAI/C,SAAS2U,cAAclM,EAAQzI,GAC3B,GAAIA,EAAMyI,EAAOle,OACb,OAAOke,EAAOzI,GAElB,MAAM,IAAIsR,sBAAsBtR,GAIpC,SAAS4U,SAASnM,EAAQzI,EAAKhW,GAC3B,KAAIgW,EAAMyI,EAAOle,QAGb,MAAM,IAAI+mB,sBAAsBtR,GAFhCyI,EAAOzI,GAAOhW,EAOtB,SAAS6qB,cAAcrO,GAEnB,OAAOA,EAAKlV,QAAQ,sBAAuB,QAI/C,SAASwjB,cAAcC,GACnB,IAAIC,EAAI,EACJ5pB,EAAI,EACJ6pB,EAAY,GAChB,KAAO7pB,EAAI2pB,EAAQxqB,QACU,KAArBwqB,EAAQpP,OAAOva,IAAkC,KAArB2pB,EAAQpP,OAAOva,KAC3C6pB,GAAaJ,cAAcE,EAAQ5E,UAAU6E,EAAG5pB,IAChD4pB,EAAI5pB,EAAI,EACiB,KAArB2pB,EAAQpP,OAAOva,GACf6pB,GAAa,IAEbA,GAAa,MAGrB7pB,GAAK,EAGT,OADA6pB,GAAaJ,cAAcE,EAAQ5E,UAAU6E,EAAG5pB,IACzC,IAAM6pB,EAAY,IAI7B,SAASC,KAAK1O,EAAMuO,GAChB,IAAII,EAAUvC,cAAcZ,iBAAiBzkB,IAAIwnB,GAKjD,YAJgBnoB,IAAZuoB,IACAA,EAAU,IAAI/kB,OAAO0kB,cAAcC,IACnCnC,cAAcZ,iBAAiB3Q,IAAI0T,EAASI,IAEzCA,EAAQ3gB,KAAKgS,GAExB,MAAM4O,KAAOF,KAGb,MAAMG,qBACF1hB,YAAY2hB,EAAWtrB,GACnB6B,KAAKypB,UAAYA,EACjBzpB,KAAK7B,MAAQA,EAGjBc,WACI,MAAM,IAAIsmB,iBAAiByB,gCAKnC,MAAM0C,cAGN,SAASC,OAAOC,GACZ,GAAkC,OAA9B7C,cAAcd,YAEd,MAAM,IAAIV,iBAAiB,wCAG/B,OADAwB,cAAcd,YAAc2D,EACrB,IAAIF,aAEf,MAAMG,OAASF,OACTG,OAASH,OACTI,OAASJ,OAGf,SAASK,aAAa9V,GAElB,IAAI9T,EAAS2D,OAAOmQ,GACpB,GAAItQ,MAAMxD,GACN,MAAM,IAAIolB,iBAAiB,4BAA4BtR,gIAE3D,OAAO9T,EAIX,MAAM6pB,cACFniB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAKd,GAEpBlU,KAAKkqB,MAAM1U,IAAIR,EAAKzU,KAAK8pB,IAAID,EAAUlW,IAI/CoW,UAAUtV,GACN,OAAOhV,KAAKkqB,MAAMxoB,IAAIsT,IAM9B,MAAMuV,cACFziB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAKd,GAEpBlU,KAAKkqB,MAAM1U,IAAIR,EAAKzU,KAAKC,IAAI4pB,EAAUlW,IAI/CoW,UAAUtV,GACN,OAAOhV,KAAKkqB,MAAMxoB,IAAIsT,IAK9B,MAAMwV,cACF1iB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAKd,GAEpBlU,KAAKkqB,MAAM1U,IAAIR,EAAKoV,EAAWlW,GAIvCoW,UAAUtV,GACN,OAAOhV,KAAKkqB,MAAMxoB,IAAIsT,IAK9B,MAAMyV,cACF3iB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAC9B,QAAiBjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAACd,EAAK,QACvB,CACH,IAAIwW,EAAUN,EAAS,GACnBO,EAAUP,EAAS,GACvBpqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAAC0V,EAAUxW,EAAKyW,EAAU,KAItDL,UAAUtV,GACN,IAAIoV,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAI9B,OAHcoV,EAAS,GACTA,EAAS,IAO/B,MAAMQ,mBACF9iB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAC9B,QAAiBjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAACd,EAAKA,EAAMA,EAAK,QAClC,CACH,IAAIwW,EAAUN,EAAS,GACnBS,EAAaT,EAAS,GACtBO,EAAUP,EAAS,GACvBpqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAAC0V,EAAUxW,EAAK2W,EAAa3W,EAAMA,EAAKyW,EAAU,KAI9EL,UAAUtV,GACN,IAAIoV,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAC1B0V,EAAUN,EAAS,GACnBS,EAAaT,EAAS,GACtBO,EAAUP,EAAS,GACnBU,EAAUJ,EAAUC,EAExB,OADeE,EAAaF,EAAUG,EAAUA,GAMxD,MAAMC,iBACFjjB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACXA,EAAM8V,aAAa9V,GACnB,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAACd,IAErBkW,EAAS1pB,KAAKwT,GAItBoW,UAAUtV,GACN,IAAIoV,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAC9BoV,EAASjN,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAIC,KAC1C,IAAI2N,EAAIzqB,KAAK0qB,MAAMb,EAAS1rB,OAAS,GACrC,OAAI0rB,EAAS1rB,OAAS,EACX0rB,EAASY,IAERZ,EAASY,EAAI,GAAKZ,EAASY,IAAM,GAMrD,MAAME,gBACFpjB,cACI9H,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACX,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAK,GAEpBhV,KAAKkqB,MAAM1U,IAAIR,EAAKoV,EAAW,GAIvCE,UAAUtV,GACN,OAAOhV,KAAKkqB,MAAMxoB,IAAIsT,IAK9B,MAAMmW,mBACFrjB,YAAYsjB,EAAU,MAClBprB,KAAKorB,UAAYA,EACjBprB,KAAKkqB,MAAQ,IAAIpmB,IAGrBqmB,UAAUnV,EAAKd,GACX,IAAIkW,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,QACbjU,IAAbqpB,EACApqB,KAAKkqB,MAAM1U,IAAIR,EAAK,CAACd,IAErBkW,EAAS1pB,KAAKwT,GAItBoW,UAAUtV,GACN,IAAIoV,EAAWpqB,KAAKkqB,MAAMxoB,IAAIsT,GAC9B,OAAuB,OAAnBhV,KAAKorB,UACEhB,EACJpqB,KAAKorB,UAAUhB,IAK9B,MAAMiB,mBACFvjB,YAAYwjB,GACRtrB,KAAKsrB,aAAeA,EACpBtrB,KAAKurB,aAAe,IAAIznB,IAG5BqmB,UAAUnV,EAAK7W,GACX,IAAIqtB,EAAYxrB,KAAKurB,aAAa7pB,IAAIsT,GACtC,QAAkBjU,IAAdyqB,EACAxrB,KAAKurB,aAAa/V,IAAIR,EAAK7W,QACxB,GAAIqtB,GAAartB,EACpB,MAAM,IAAIqnB,iBAAiB,sEAAsExlB,KAAKsrB,aAAe,YAAYE,WAAmBrtB,MAI5JmsB,UAAUtV,GACN,OAAOhV,KAAKurB,aAAa7pB,IAAIsT,IAKrC,SAASyW,gBAAgBC,EAAgBxX,EAAKkX,EAAU,MACpDrE,cAAcV,kBAAoB,EAClC,IAAIpH,EAAM,IAAIuK,qBAAqBzC,cAAcR,uBAAuB7nB,OAAQwV,GAMhF,OALkB,OAAdkX,EACArE,cAAcR,uBAAuB7lB,KAAK,IAAIgrB,GAE9C3E,cAAcR,uBAAuB7lB,KAAK,IAAIgrB,EAAeN,IAE1DnM,EAIX,SAAS0M,IAAIzX,GACT,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBxB,cAAe/V,GAAOA,EAEvF,MAAMmW,IAAMsB,IACNC,IAAMD,IAGZ,SAASE,IAAI3X,GACT,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBlB,cAAerW,GAAOA,EAEvF,MAAM1T,IAAMqrB,IACNC,IAAMD,IAEZ,SAASE,MAAM7X,GACX,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBP,gBAAiB,GAAK,EAEvF,MAAMc,MAAQD,MACRE,MAAQF,MAEd,SAASG,IAAIhY,GACT,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBjB,cAAetW,GAAOA,EAEvF,MAAMiY,IAAMD,IACNE,IAAMF,IAEZ,SAASG,IAAInY,GACT,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBhB,cAAevW,GAAOA,EAEvF,MAAMoY,IAAMD,IACNE,IAAMF,IAEZ,SAASG,SAAStY,GACd,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBb,mBAAoB1W,GAAOA,EAE5F,MAAMuY,SAAWD,SACXE,SAAWF,SAEjB,SAASG,OAAOzY,GACZ,OAAO6S,cAAcV,kBAAoB,EAAIoF,gBAAgBV,iBAAkB7W,GAAOA,EAE1F,MAAM0Y,OAASD,OACTE,OAASF,OAEf,SAASG,UAAU5Y,EAAKkX,EAAU,MAC9B,OAAOrE,cAAcV,kBAAoB,EAAIoF,gBAAgBN,mBAAoBjX,EAAKkX,GAAalX,EAEvG,MAAM6Y,UAAYD,UACZE,KAAOF,UAGb,SAASG,WAAWC,EAAS/uB,GACzB,IAAIgvB,EAAaD,EAAQE,KAEzB,OADAF,EAAQ3V,IAAIpZ,GACLgvB,GAAcD,EAAQE,KAIjC,MAAMC,UACFvlB,YAAYwlB,EAAWpH,GACnBlmB,KAAKstB,UAAYA,EACjBttB,KAAKutB,GAAK,EACVvtB,KAAKkmB,UAAYA,EAGrBnK,YAAYa,GACR,QAAuB,OAAnB5c,KAAKkmB,WAAsBlmB,KAAKutB,IAAMvtB,KAAKkmB,kBAEzClmB,KAAKstB,UAAU1O,MAAMhC,GAC3B5c,KAAKutB,IAAM,EACJ,IAGXxR,qBACU/b,KAAKstB,UAAUE,UAK7B,MAAMC,WACF3lB,YAAYwlB,GACRttB,KAAKstB,UAAYA,EACjBttB,KAAK0S,KAAO,IAAIlO,IAGpBuX,YAAYa,GACR,OAAKqQ,WAAWjtB,KAAK0S,KAAM7O,KAAK0N,UAAUqL,aAE/B5c,KAAKstB,UAAU1O,MAAMhC,GAKpCb,qBACU/b,KAAKstB,UAAUE,UAK7B,MAAME,gBACF5lB,YAAYwlB,GACRttB,KAAKstB,UAAYA,EACjBttB,KAAK2tB,QAAU,IAAI7pB,IAGvBiY,YAAYa,GACR,IAAI5H,EAAMnR,KAAK0N,UAAUqL,GACrBgR,EAAU5tB,KAAK2tB,QAAQjsB,IAAIsT,GAM/B,OALI4Y,EACAA,EAAQ,IAAM,EAEd5tB,KAAK2tB,QAAQnY,IAAIR,EAAK,CAAC,EAAG4H,KAEvB,EAGXb,eACI,IAAK,IAAK/G,EAAK7W,KAAU6B,KAAK2tB,QAAS,CACnC,IAAK3B,EAAOpP,GAAUze,EAEtB,GADAye,EAAOiR,QAAQ7B,UACJhsB,KAAKstB,UAAU1O,MAAMhC,GAC5B,YAEF5c,KAAKstB,UAAUE,UAK7B,MAAMM,aACFhmB,YAAYwlB,EAAWS,GACnB/tB,KAAKstB,UAAYA,EACjBttB,KAAK+tB,aAAeA,EACpB/tB,KAAKguB,iBAAmB,GAG5BjS,YAAYkS,GAER,OADAjuB,KAAKguB,iBAAiBttB,KAAKutB,IACpB,EAGXlS,eACI,IAAIiS,EAAmBhuB,KAAKguB,iBAC5BA,EAAiB7Q,KAAKyL,gBAClB5oB,KAAK+tB,cACLC,EAAiBE,UACrB,IAAK,IAAI3uB,EAAI,EAAGA,EAAIyuB,EAAiBtvB,OAAQa,IAAK,CAC9C,IAAI4uB,EAAQH,EAAiBzuB,GAC7B,UAAWS,KAAKstB,UAAU1O,MAAMuP,EAAMA,EAAMzvB,OAAS,IACjD,YAEFsB,KAAKstB,UAAUE,UAK7B,MAAMY,gBACFtmB,YAAYwlB,GACRttB,KAAKstB,UAAYA,EACjBttB,KAAKquB,YAAc,GACnBruB,KAAKsuB,iBAAmB,IAAI9pB,IAGhCuX,eACI,IAAIwS,EAAW5uB,MAAM6uB,KAAKxuB,KAAKsuB,kBAC/BC,EAASpR,OACT,IAAK,IAAI5d,EAAI,EAAGA,EAAIgvB,EAAS7vB,OAAQa,IAAK,CACtC,IAAIyV,EAAMuZ,EAAShvB,GACf4f,EAAa,GACjB,IAAK,IAAIsP,KAAMzuB,KAAKquB,YAChBlP,EAAWze,KAAK+tB,EAAGnE,UAAUtV,IAEjC,UAAWhV,KAAKstB,UAAU1O,MAAMO,GAC5B,YAEFnf,KAAKstB,UAAUE,UAK7B,MAAMkB,YACF5mB,YAAY2e,GACRzmB,KAAKymB,SAAWA,EAGpBkI,QAAQC,GACJ,OAAO5uB,KAAKymB,SAASoI,iBAAiBD,IAK9C,MAAME,WACFhnB,YAAY2e,GACRzmB,KAAKymB,SAAWA,EAChBzmB,KAAK+uB,YAAc,CAAC,CAAC,KAAMtI,EAASuI,eAAgBrvB,MAAM8mB,EAASuI,gBAAgBniB,KAAK,QAG5F8hB,QAAQC,GACJ,IAAIxuB,EAASJ,KAAKymB,SAASoI,iBAAiBD,GAC5C,OAAqB,GAAjBxuB,EAAO1B,OACAsB,KAAK+uB,YAET3uB,GAKf,MAAM6uB,iBACFnnB,YAAY2e,GACRzmB,KAAKymB,SAAWA,EAGpBkI,QAAQC,GACJ,IAAIxuB,EAASJ,KAAKymB,SAASoI,iBAAiBD,GAC5C,GAAqB,GAAjBxuB,EAAO1B,OACP,MAAM,IAAI8mB,iBAAiB,qFAAuFoJ,EAAU,KAEhI,OAAOxuB,GAKf,SAAS8uB,cAAclL,EAAKmL,GACxB,IAAI/uB,EAAS,GACb,IAAK,IAAIb,EAAI,EAAGA,EAAIykB,EAAItlB,OAAQa,KACK,GAA7B4vB,EAAc7a,QAAQ/U,IACtBa,EAAOM,KAAKsjB,EAAIzkB,IAExB,OAAOa,EAIX2b,eAAeqT,cAAcC,EAAU/T,EAAI6D,GACvC,GAA0C,OAAtC4H,cAAcX,oBAA8B,CAC5C,IAAIkJ,EAAaD,EAAShvB,OAAO,CAACib,EAAI6D,IACtC,UAAW4H,cAAcf,OAAOpH,MAAM0Q,GAClC,OAAO,OAEX,UAAWvI,cAAcf,OAAOpH,MAAMO,GAClC,OAAO,EAEf,OAAO,EAIX,SAASoQ,kBAAkBva,EAAKwa,GAI5B,GAHY,OAARxa,IACAA,EAAMnR,KAAK0N,UAAUyD,IAEe,IAApC+R,cAAcV,kBAAyB,CACvC,KAAMU,cAAcf,kBAAkBqH,WAClC,MAAM,IAAI9H,iBAAiB,qFAE/BwB,cAAcf,OAAS,IAAIoI,gBAAgBrH,cAAcf,QACzD,IAAIyJ,EAAwB,EAC5B,IAAK,IAAIlwB,EAAI,EAAGA,EAAIiwB,EAAmB9wB,OAAQa,KACvCmwB,EAAcF,EAAmBjwB,cACViqB,sBACvBzC,cAAcf,OAAOqI,YAAY3tB,KAAKqmB,cAAcR,uBAAuBmJ,EAAYjG,YACvF1C,cAAcf,OAAOqI,YAAYtH,cAAcf,OAAOqI,YAAY3vB,OAAS,GAAGyrB,UAAUnV,EAAK0a,EAAYvxB,OACzGsxB,GAAyB,IAEzB1I,cAAcf,OAAOqI,YAAY3tB,KAAK,IAAI2qB,mBAAmBtE,cAAcf,OAAOqI,YAAY3vB,SAC9FqoB,cAAcf,OAAOqI,YAAYtH,cAAcf,OAAOqI,YAAY3vB,OAAS,GAAGyrB,UAAUnV,EAAK0a,IAGrG,GAAID,GAAyB1I,cAAcR,uBAAuB7nB,OAC9D,MAAM,IAAI6mB,iBAAiByB,+BAE/BD,cAAcV,kBAAoB,OAElC,IAAS9mB,EAAI,EAAGA,EAAIiwB,EAAmB9wB,OAAQa,IAAK,CAChD,IAAImwB,EAAcF,EAAmBjwB,GACrCwnB,cAAcf,OAAOqI,YAAY9uB,GAAG4qB,UAAUnV,EAAK0a,GAG3D3I,cAAcf,OAAOsI,iBAAiB/W,IAAIvC,GAI9C+G,eAAe4T,gBAAgBN,EAAU/T,EAAIsU,GACzC,IAAIzQ,EAAayQ,EAAclwB,QAC3BmwB,EAAaD,EAAcE,WAAU5b,GAAOA,aAAewV,eAC/D,IAAK,IAAInqB,EAAI,EAAGA,EAAIwnB,cAAcd,YAAYvnB,OAAQa,IAElD,GADA4f,EAAW0Q,GAAc9I,cAAcd,YAAY1mB,UACxC6vB,cAAcC,EAAU/T,EAAI6D,EAAWzf,SAC9C,OAAO,EAEf,OAAO,EAIX,MAAMqwB,sBAAwB,2nBAqBxBC,sBAAwB,4CAMxBC,oBAAsB,uRAYtBC,oBAAsB,onBAoBtBC,sBAAwB,+NAYxBC,eAAiB,+vBA6BvB,SAASC,iBAAiBC,EAAaC,EAAmBC,GACtD,OAAO5K,YAAY0K,EAAaC,EAAmBC,GAIvD,SAASC,WAAWH,EAAaC,EAAmBG,GAChD,IAAIC,EAAeL,EAAY7a,MAAM,MACjCmb,EAAcF,EAAWjb,MAAM,MACnC,IAAK,IAAIlW,EAAI,EAAGA,EAAIoxB,EAAajyB,OAAQa,IAAK,CAC1C,IAAIsxB,EAAMF,EAAapxB,GAAG+U,QAAQic,GAClC,IAAY,GAARM,EACA,SACJrT,OAAOqT,EAAM,GAAK,GAClB,IAAIC,EAA0BH,EAAapxB,GAAG+kB,UAAU,EAAGuM,GAG3D,OAFAD,EAAcA,EAAY1b,KAAI5V,GAAKwxB,EAA0BxxB,IAC1CqxB,EAAajxB,MAAM,EAAGH,GAAGc,OAAOuwB,GAAavwB,OAAOswB,EAAajxB,MAAMH,EAAI,IAC1EqB,KAAK,MAAQ,KAErC4c,QAAO,GAIX,SAASuT,wBAAwBhK,GAC7B,IAAIiK,EAAsD,OAApCjK,EAAcH,kBAChCqK,EAA2C,OAA3BlK,EAAcN,SAC9BE,EAAsD,OAAnCI,EAAcJ,iBAA4B,OAASI,EAAcJ,iBACpFL,EAA0E,OAA7CS,EAAcT,2BAAsC,OAASS,EAAcT,2BACxGF,EAA4D,OAAtCW,EAAcX,oBAA+B,OAASW,EAAcX,oBAC1F8K,EAAUT,WAAWL,eAAgB,qBAAsBrJ,EAAcpF,gBAwB7E,OAvBIqP,GACIC,GACAC,EAAUT,WAAWA,WAAWS,EAAS,WAAYjB,qBAAsB,WAAYF,uBACvFmB,EAAUb,iBAAiBa,EAAS,oCAAqCnK,EAAcL,0BAEvFwK,EAAUT,WAAWA,WAAWS,EAAS,WAAYlB,uBAAwB,WAAYD,uBAE7FmB,EAAUT,WAAWS,EAAS,gCAAiCnK,EAAcD,qBAC7EoK,EAAUb,iBAAiBa,EAAS,8BAA+BnK,EAAcH,mBACjFsK,EAAUb,iBAAiBa,EAAS,6BAA8BvK,GAClEuK,EAAUb,iBAAiBa,EAAS,uCAAwC5K,GAC5E4K,EAAUb,iBAAiBa,EAAS,gCAAiC9K,KAEjE6K,GACAC,EAAUT,WAAWS,EAAS,WAAYhB,qBAC1CgB,EAAUb,iBAAiBa,EAAS,oCAAqCnK,EAAcL,0BAEvFwK,EAAUT,WAAWS,EAAS,WAAYf,uBAE9Ce,EAAUT,WAAWS,EAAS,gCAAiCnK,EAAcD,qBAC7EoK,EAAUT,WAAWS,EAAS,+BAAgCnK,EAAcF,oBAC5EqK,EAAUb,iBAAiBa,EAAS,6BAA8BvK,IAE/D,iBAAmBuK,EAAU,OAIxCnV,eAAeoV,gBAAgBpK,eAC3B,IAAIqK,eAAiBL,wBAAwBhK,eAC7C,IACI,IAAIsK,kBAAoBluB,KAAKiuB,sBACvBC,kBACR,MAAOjzB,GACL,GAAIA,aAAa6C,YAAa,CAG1B,IAAIqwB,EAAmBvK,cAAc/K,WAAWuV,cAChD,IAA6C,GAAzCD,EAAiBhd,QAAQ,YACzB,MAAM,IAAIrT,YAAY7C,EAAEmf,QAAU,4CACtC,IAA2C,GAAvC+T,EAAiBhd,QAAQ,UACzB,MAAM,IAAIrT,YAAY7C,EAAEmf,QAAU,iHACtC,IAA2C,GAAvC+T,EAAiBhd,QAAQ,UACzB,MAAM,IAAIrT,YAAY7C,EAAEmf,QAAU,kGACtC,GAAInf,GAAKA,EAAEmf,UAAgF,GAArE7Y,OAAOtG,EAAEmf,SAASgU,cAAcjd,QAAQ,yBAAgC,CAC1F,IAA0C,GAAtCgd,EAAiBhd,QAAQ,SACzB,MAAM,IAAIrT,YAAY7C,EAAEmf,QAAU,4HACtC,IAAyC,GAArC+T,EAAiBhd,QAAQ,QACzB,MAAM,IAAIrT,YAAY7C,EAAEmf,QAAU,2HAG9C,GAAInf,GAAKA,EAAEmf,UAAiF,GAAtEnf,EAAEmf,QAAQjJ,QAAQ,gDACpC,MAAM,IAAIiR,iBAAiByB,+BAC/B,MAAM5oB,GAKd,MAAMozB,SAAW,WACXC,OAAS,SACTC,OAAS,SACTC,KAAO,OACPC,WAAa,aACbC,UAAY,YACZC,gBAAkB,kBAClBC,iBAAmB,mBACnBC,SAAW,WACXC,MAAQ,QACRC,MAAQ,QACRC,OAAS,SACTC,KAAO,OAGb,SAASC,wBAAwBC,GAC7B,MAAO,6BAA6BA,iDAIxC,SAASC,gBAAgBC,EAAQ7X,GAC7B,IAAIva,EAAS,GACb,IAAImkB,EAAY,KAChB,KAA0C,QAAnCA,EAAYiO,EAAOhO,KAAK7J,KAC3Bva,EAAOM,KAAK6jB,GAEhB,OAAOnkB,EAIX,SAASqyB,UAAUzO,GACf,OAAOA,EAAIve,QAAQ,WAAY,IAInC,SAASitB,eAAeC,GAEpB,OADAA,EAAQA,EAAMnP,QACJ5I,WAAW,MACV,GACJ+X,EAIX,SAASC,wBAAwBC,EAAoB9K,GACjD,IAAK,IAAIxoB,EAAI,EAAGA,EAAIwoB,EAAgBrpB,OAAQa,IACxCszB,EAAqBjN,YAAYiN,EAAoB,yBAAyBtzB,OAAQwoB,EAAgBxoB,IAE1G,OAAOszB,EAIX,SAAS3W,sBAAsBF,EAAY8W,EAAQC,GAC/CvV,OAAiB,KAAVsV,GAA2B,KAAVA,GACxB,IACIE,EAAUT,gBADJ,IAAIhuB,OAAO,sBAAsBuuB,wCAA8C,KACtD9W,GACnC,IAAK,IAAIzc,EAAI,EAAGA,EAAIyzB,EAAQt0B,OAAQa,IAAK,CACrC,IAAI0zB,EAAYhvB,SAAS+uB,EAAQzzB,GAAG,IACpCwzB,EAAkBD,EAASpuB,OAAOuuB,IAAc,CAACC,YAAY,EAAMC,MAAOF,EAAY,IAK9F,SAAS9W,sBAAsBH,EAAY8W,EAAQC,GAC/CvV,OAAiB,KAAVsV,GAA2B,KAAVA,GACxB,IACIE,EAAUT,gBADJ,IAAIhuB,OAAO,sBAAsBuuB,uBAA6B,KACrC9W,GACnC,IAAK,IAAIzc,EAAI,EAAGA,EAAIyzB,EAAQt0B,OAAQa,IAAK,CACrC,IAAI0zB,EAAYhvB,SAAS+uB,EAAQzzB,GAAG,IACpCwzB,EAAkB,GAAGD,KAAUG,MAAgB,CAACC,YAAY,EAAMC,MAAOF,EAAY,IAK7F,SAASG,6BAA6B9K,EAAa+K,GAK/C,OADA/K,GADAA,GADAA,GADAA,EAAcA,EAAY7iB,QAAQ,MAAO,SACfA,QAAQ,MAAO,QACfA,QAAQ,MAAO,QACfA,QAAQ,MAAO,OACtB,MAAf4tB,EACO/K,EAAY7iB,QAAQ,KAAM,OAClB,MAAf4tB,EACO/K,EAAY7iB,QAAQ,KAAM,QACrC+X,OAAsB,MAAf6V,GACA/K,EAAY7iB,QAAQ,KAAM,QAIrC,SAAS6tB,uCAAuCtX,EAAYsM,GACxD,IACIiL,EAA2BhB,gBADrB,IAAIhuB,OAAO,iCAAkC,KACH+jB,GACpD,IAAK,IAAIkL,KAAsBD,EAC3B,IAA+C,GAA3CvX,EAAW1H,QAAQkf,GACnB,OAAO,EAEf,OAAO,EAIX,SAASnX,2BAA2BL,EAAY8W,EAAQW,EAAcV,GAIlEvV,OAAkB,MAAXsV,GAA6B,MAAXA,GACzB,IAAIY,EAAgB,IAAInvB,OAAO,sBAAsBuuB,QACrD,IAAyC,GAArC9W,EAAW6J,OAAO6N,GAEtB,IAAK,IAAIn0B,EAAI,EAAGA,EAAIk0B,EAAa/0B,OAAQa,IAAK,CAC1C,IAAI+oB,EAAcmL,EAAal0B,GAC/B,GAAI+zB,uCAAuCtX,EAAYsM,GAAc,CACjE,IAAIqL,EAAsBP,6BAA6B9K,EAAa,KACpEyK,EAAkB,GAAGD,MAAWa,OAA2B,CAACT,YAAY,EAAMC,MAAO5zB,GACrFo0B,EAAsBP,6BAA6B9K,EAAa,KAChEyK,EAAkB,GAAGD,MAAWa,OAA2B,CAACT,YAAY,EAAOC,MAAO5zB,GACtFo0B,EAAsBP,6BAA6B9K,EAAa,KAChEyK,EAAkB,GAAGD,OAAYa,QAA4B,CAACT,YAAY,EAAOC,MAAO5zB,KAMpG,SAAS6c,0BAA0BJ,EAAY8W,EAAQW,EAAcG,EAAqBb,GAGtFvV,OAAkB,MAAXsV,GAA6B,MAAXA,GACzB,IAEIe,EADUtB,gBADJ,IAAIhuB,OAAO,sBAAsBuuB,+BAAqC,KAC7C9W,GACG9G,KAAI4J,GAAKA,EAAE,KACjD,IAAK,IAAIwJ,KAAeuL,EAAyB,CAC7C,IAAIC,EAAiBL,EAAanf,QAAQgU,GAC1C,IAAuB,GAAnBwL,EAGA,MAAM,IAAIvO,iBAAiB,0BAA0B+C,SAA6B,KAAVwK,EAAgB,QAAU,UAAUc,KAF5Gb,EAAkB,GAAGD,KAAUxK,KAAiB,CAAC4K,YAAY,EAAMC,MAAOW,IAQtF,SAASC,uBAAuB/X,EAAYyX,EAAcV,GACtD,IAAK,IAAIxzB,EAAI,EAAGA,EAAIk0B,EAAa/0B,OAAQa,IAAK,CAC1C,IAAI+oB,EAAcmL,EAAal0B,GAC/B,GAAsD,OAAjD,2BAA2BilB,KAAK8D,GACjC,MAAM,IAAIzN,oBAAoB,8BAA8ByN,2BACxB,GAApCtM,EAAW1H,QAAQgU,KACnByK,EAAkBzK,GAAe,CAAC4K,YAAY,EAAMC,MAAO5zB,KAKvE,SAASy0B,8BAA8BhY,EAAYiY,EAAoBC,GACnE,IAAIC,EAAwB,IAAI3vB,IAAI0vB,GACpC,IAAK,IAAI5L,KAAe2L,EACpB,GAAIE,EAAsBC,IAAI9L,KAAoD,GAApCtM,EAAW1H,QAAQgU,GAC7D,MAAM,IAAI/C,iBAAiB8M,wBAAwB/J,IAK/D,SAAS+L,sBAAsBrQ,GAC3BA,EAAMyO,UAAUzO,GAChB,MAAMsQ,EAA4B,2GAClC,IACIruB,EADM,oBACMue,KAAKR,GACrB,GAAc,OAAV/d,EACA,MAAM,IAAIsf,iBAAiB+O,GAC/B,IAAI3a,EAAW1T,EAAM,GACrB+d,EAAMA,EAAIrO,OAAO1P,EAAM,GAAGvH,QAE1B,IAAI61B,EAAiB,GAGrB,IAFA,IAAIC,EAAW,2BACXC,EAAU,mBACD,CAET,GADAxuB,EAAQuuB,EAAShQ,KAAKR,GACR,OAAV/d,EACA,MAAM,IAAIsf,iBAAiB+O,GAG/B,GAFAC,EAAe7zB,KAAK,CAACuF,EAAM,GAAIA,EAAM,OACrC+d,EAAMA,EAAIrO,OAAO1P,EAAM,GAAGvH,SACjBA,OACL,MAEJ,GADAuH,EAAQwuB,EAAQjQ,KAAKR,GACP,OAAV/d,EACA,MAAM,IAAIsf,iBAAiB+O,GAC/BtQ,EAAMA,EAAIrO,OAAO1P,EAAM,GAAGvH,QAE9B,MAAO,CAACib,EAAU4a,GAItB,SAASG,uBAAuBC,EAAqBC,EAAoBL,EAAgBxM,GACrF,IAAI8M,EAAgB,GAChBC,EAAc,GAClB,MAAMC,EAAwB,2FAC9B,IAAK,IAAIC,KAAiBT,EAAgB,CACtC,IAAKU,EAAYC,GAAcF,EAG/B,GAFAC,EAAarC,wBAAwBqC,EAAYlN,GACjDmN,EAAatC,wBAAwBsC,EAAYnN,GAC7C4M,EAAoB31B,eAAei2B,IAAeL,EAAmB51B,eAAei2B,GACpF,MAAM,IAAI1P,iBAAiB8M,wBAAwB4C,IACvD,GAAIN,EAAoB31B,eAAek2B,IAAeN,EAAmB51B,eAAek2B,GACpF,MAAM,IAAI3P,iBAAiB8M,wBAAwB6C,IACnDP,EAAoB31B,eAAek2B,MAClCD,EAAYC,GAAc,CAACA,EAAYD,IAE5C,IAAKE,EAAeC,GAAiB,CAAC,KAAM,MAC5C,IAAkD,GAA9C,CAAC,KAAM,OAAQ,OAAO9gB,QAAQ2gB,GAC9BE,GAAiB,MACd,KAAIR,EAAoB31B,eAAei2B,GAG1C,MAAM,IAAI1P,iBAAiB,qEAAqE0P,OAAgBF,KAFhHI,EAAgBR,EAAoBM,GAAY9B,MAKpD,IAA4C,GAAxC,CAAC,OAAQ,OAAO7e,QAAQ4gB,GACxBE,GAAiB,MACd,KAAIR,EAAmB51B,eAAek2B,GAGzC,MAAM,IAAI3P,iBAAiB,oEAAoE2P,OAAgBH,KAF/GK,EAAgBR,EAAmBM,GAAY/B,MAKnD,IAAIzM,GAA4C,GAAlByO,EAAsB,KAAO,2BAA2BA,KACtFL,EAAYp0B,KAAK00B,GACjBP,EAAcn0B,KAAKgmB,GAEvB,MAAO,CAACmO,EAAeC,GAI3B,SAASO,0BAA0BrZ,EAAYZ,GAC3CoC,OAA0B,KAAnBpC,GAA6C,KAAnBA,GACjC,IAAIhb,EAAS,GACbA,EAAOM,KAAK,GAAG0a,qBACf,IAAIka,EAA8B,KAAnBla,EAAyB,KAAO,MAC3Cma,EAAW,GAAGna,OAKlB,OAJqC,GAAjCY,EAAW1H,QAAQihB,IACnBn1B,EAAOM,KAAK,GAAG60B,OAAcD,MACV,KAAnBla,IAAwD,GAA9BY,EAAW1H,QAAQ,QAC7ClU,EAAOM,KAAK,aACTN,EAIX,SAASo1B,yBAAyBxZ,EAAYyZ,EAAeb,EAAoBc,GAC7E,IAAIC,EAAaN,0BAA0BrZ,EAAY,KACnD4Z,EAAsB,kBAC1B,IAAK,MAAOtD,EAAeuD,KAAa/2B,OAAOme,QAAQwY,GACnD,GAAII,EAAS3C,WAAY,CACrB,IAAI4C,EAA+BF,EAAoBpR,KAAK8N,GAAiB,OAAS,GACtFqD,EAAWj1B,KAAK,GAAGo1B,IAA+BxD,0BAAsCuD,EAAS1C,WAGzG,GAAIyB,EAAoB,CACpBe,EAAaA,EAAWt1B,OAAOg1B,0BAA0BrZ,EAAY,MACrE,IAAK,MAAOsW,EAAeuD,KAAa/2B,OAAOme,QAAQ2X,GACnD,GAAIiB,EAAS3C,WAAY,CACrB,IAAI4C,EAA+BF,EAAoBpR,KAAK8N,GAAiB,OAAS,GACtFqD,EAAWj1B,KAAK,GAAGo1B,IAA+BxD,qDAAiEuD,EAAS1C,YAIxI,IAAK,IAAI5zB,EAAI,EAAGA,EAAIo2B,EAAWj3B,OAAQa,IACnCo2B,EAAWp2B,GAAKm2B,EAASC,EAAWp2B,GAExC,OAAOo2B,EAAW/0B,KAAK,MAI3B,SAASm1B,mBAAmBC,GAGxB,OAAOvD,UADMuD,EAAqBvwB,QADxB,wCACqC,gBAKnD,SAASwwB,kBAAkBC,GACvB,IACIlD,EAAUT,gBADC,sCACyB2D,GACpC3O,EAAW,EACXnnB,EAAS,GACb,IAAK,IAAI6F,KAAS+sB,EAAS,CACvB,IACImD,EAAyB,aAAe,CAAC,IAAK,cAAe,MAAO,WAAY,MAAO,YADrElwB,EAAM,IAC8F,aACtHshB,EAAWthB,EAAMktB,QACjB/yB,GAAU81B,EAAgB5R,UAAUiD,EAAUthB,EAAMktB,QACxD/yB,GAAU+1B,EACV5O,EAAWthB,EAAMktB,MAAQltB,EAAM,GAAGvH,OAAS,EAG/C,OADA0B,GAAU81B,EAAgB5R,UAAUiD,GAC7BnnB,EAIX,SAASg2B,qCAAqCF,GAC1C,IACIlD,EAAUT,gBADC,gDACyB2D,GACpC3O,EAAW,EACXnnB,EAAS,GACb,IAAK,IAAI6F,KAAS+sB,EAAS,CACvB,IACImD,EAAyB,CAAC,IAAK,uBAAwB,MAAO,yBAA0B,MAAO,0BAD7ElwB,EAAM,IAExBshB,EAAWthB,EAAMktB,QACjB/yB,GAAU81B,EAAgB5R,UAAUiD,EAAUthB,EAAMktB,QACxD/yB,GAAU+1B,EACV5O,EAAWthB,EAAMktB,MAAQltB,EAAM,GAAGvH,OAGtC,OADA0B,GAAU81B,EAAgB5R,UAAUiD,GAC7BnnB,EAIX,SAASi2B,4BAA4BC,EAAmB3B,EAAqB5M,EAAiB2N,GAC1F,IACIa,EAAyB,wFADN9D,UAAU6D,EAAkB7gB,MAAM,KAAK,mDAG1D+gB,EAAyB,8CACzB3P,EAAqB,GACrBgK,EAAM,EACV,OAAa,CACT,IAAI5qB,EAAQuwB,EAAuBhS,KAAK8R,GACxC,GAAiC,GAA7BzP,EAAmBnoB,SAA0B,OAAVuH,GAAiC,GAAfA,EAAMktB,OAC3D,MAAM,IAAI5N,iBAAiBgR,GAE/B,GAAc,OAAVtwB,EAAgB,CAChB4gB,EAAmBA,EAAmBnoB,OAAS,IAAM+zB,UAAU6D,EAAkB3gB,OAAOkb,IAAQ,KAChG,MAEAhK,EAAmBnoB,SACnBmoB,EAAmBA,EAAmBnoB,OAAS,IAAM+zB,UAAU6D,EAAkBhS,UAAUuM,EAAK5qB,EAAMktB,QAAU,MACpH,IAAIsD,EAAe7D,wBAAwBH,UAAUxsB,EAAM,IAAK8hB,GAChE,IAAK4M,EAAoB31B,eAAey3B,GACpC,MAAM,IAAIlR,iBAAiB,6DAA6DkR,MAC5F,IAAIC,EAAY/B,EAAoB8B,GAActD,MAC9CwD,EAAiB9P,EAAmBnoB,OAASg3B,EAAS,GAC1D7O,EAAmBnmB,KAAK,GAAGi2B,wBAAqCD,OAChE7F,EAAM5qB,EAAMktB,MAAQltB,EAAM,GAAGvH,OAEjC,OAAOk0B,wBAAwB/L,EAAmBjmB,KAAK,MAAOmnB,GAIlE,SAAS6O,4BAA4BhQ,GACjC,IAAIiQ,EAA2Bd,mBAAmBnP,GAC9CkQ,EAAarE,UAAUwD,kBAAkBY,IACzCE,EAAwBtE,UAAU2D,qCAAqCS,IAC3E,IAAKC,EAAWp4B,OACZ,MAAM,IAAI6mB,iBAAiB,gCAC/B,MAAO,CAAC,cAAcuR,MAAgBC,GAI1C,SAASC,yBAAyBd,GAO9B,IALA,IAAIe,EAAM,wEACN1S,EAAY,KACZ2S,EAAe,GACfnP,EAAkB,GAClBoP,EAAa,EACiC,QAA3C5S,EAAY0S,EAAIzS,KAAK0R,KAA4B,CACpD,IAAIkB,EAAarP,EAAgBrpB,OAC7B24B,EAAiB9S,EAAU,GAC/BwD,EAAgBrnB,KAAK22B,GACrB,IAAIC,EAAc/S,EAAU4O,MAC5B+D,EAAax2B,KAAKw1B,EAAgB5R,UAAU6S,EAAYG,IACxDJ,EAAax2B,KAAK,yBAAyB02B,QAC3CD,EAAaF,EAAIM,UAErBL,EAAax2B,KAAKw1B,EAAgB5R,UAAU6S,IAC5C,IAAIK,EAAoBN,EAAat2B,KAAK,IAE1C,MAAO,CADP42B,EAAoBA,EAAkB/xB,QAAQ,MAAO,KAC1BsiB,GAI/B,SAAS0P,kBAAkBvB,GACvB,IAAIwB,EAAmB,GACvBA,EAAiBh3B,KAAK,CAACqxB,iBAAkBD,gBAAiBD,UAAWD,WAAYD,OACjF+F,EAAiBh3B,KAAK,CAACgxB,SACvBgG,EAAiBh3B,KAAK,CAACsxB,WACvB0F,EAAiBh3B,KAAK,CAACuxB,QACvByF,EAAiBh3B,KAAK,CAAC+wB,SACvBiG,EAAiBh3B,KAAK,CAAC8wB,WACvBkG,EAAiBh3B,KAAK,CAACwxB,QACvBwF,EAAiBh3B,KAAK,CAACyxB,SAEvB,IADA,IAAI/xB,EAAS,GACJu3B,EAAK,EAAGA,EAAKD,EAAiBh5B,OAAQi5B,IAC3C,IAAK,IAAIC,EAAK,EAAGA,EAAKF,EAAiBC,GAAIj5B,OAAQk5B,IAAM,CACrD,IAAIC,EAAYH,EAAiBC,GAAIC,GAEjC5E,EAAUT,gBADH,IAAIhuB,OAAO,UAAYqhB,YAAYiS,EAAW,IAAK,MAAQ,QAAS,MAC3C3B,GACpC,GAAKlD,EAAQt0B,OAAb,CAEA,GAAIs0B,EAAQt0B,OAAS,EACjB,MAAM,IAAI6mB,iBAAiB,kBAAkBsS,uBACjDra,OAAyB,GAAlBwV,EAAQt0B,QACf,IAAIuH,EAAQ+sB,EAAQ,GAChB8E,EAAY7xB,EAAM,GACtB7F,EAAOM,KAAK,CAACuF,EAAMktB,MAAOltB,EAAMktB,MAAQ2E,EAAUp5B,OAAQm5B,IAC1D,OAIR,OADAz3B,EAAO+c,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,MACtCjd,EAIX,SAAS23B,iBAAiB7B,GACtBA,EAAkBzD,UAAUyD,GAC5B,IAAI91B,EAAS,GACb,IAAI43B,EAAa,iDAAiDxT,KAAK0R,GACpD,OAAf8B,IACA9B,EAAkB8B,EAAW,GAC7B53B,EAAOgyB,MAAQ4F,EAAW,IAG9B,IADA,IAAIC,EAAqBR,kBAAkBvB,GAClC32B,EAAI,EAAGA,EAAI04B,EAAmBv5B,OAAQa,IAAK,CAChD,IAAI24B,EAAkBD,EAAmB14B,GAAG,GACxC44B,EAAaF,EAAmB14B,GAAG,GACnCs4B,EAAYI,EAAmB14B,GAAG,GAClC64B,EAAW74B,EAAI,EAAI04B,EAAmBv5B,OAASu5B,EAAmB14B,EAAI,GAAG,GAAK22B,EAAgBx3B,OAClG8e,OAAO0a,EAAkBC,GACzB3a,OAAO2a,GAAcC,GACrB,IAAI1Q,EAAOwO,EAAgB5R,UAAU6T,EAAYC,GAC7CC,EAAmB,GAMvB,IAL4F,GAAxF,CAACtG,iBAAkBD,gBAAiBD,UAAWD,WAAYD,MAAMrd,QAAQujB,KACzEQ,EAA+B,aAAIR,EACnCA,EAAYlG,MAGZkG,GAAapG,OAAQ,CACrB,GAAuB,GAAnByG,EACA,MAAM,IAAI3S,iBAAiB,wDAC/BmC,EAAOA,EAAKjiB,QAAQ,UAAW,IAGnC,GAAIoyB,GAAa7F,SAAU,CAEvB,IAAIsG,GADJ5Q,EAAOA,EAAKjiB,QAAQ,WAAY,KACZA,QAAQ,YAAa,IACrC6yB,GAAY5Q,GACZA,EAAO4Q,EACPD,EAA0B,SAAI,GAE9BA,EAA0B,SAAI,EAItC,GAAIR,GAAanG,OAAQ,CACrB,GAAuB,GAAnBwG,EACA,MAAM,IAAI3S,iBAAiB,wDAC/B,IAAItf,EAAQ,qBAAqBue,KAAKkD,GACxB,OAAVzhB,IACAoyB,EAAsB,IAAIp0B,SAASgC,EAAM,IACzCyhB,EAAOA,EAAK/R,OAAO1P,EAAMktB,MAAQltB,EAAM,GAAGvH,SAE9CuH,EAAQ,0BAA0Bue,KAAKkD,GACzB,OAAVzhB,IACAoyB,EAA2B,UAAI,EAC3BpyB,EAAM,KACNoyB,EAAiC,gBAAI,GAEzC3Q,EAAOA,EAAK/R,OAAO1P,EAAMktB,MAAQltB,EAAM,GAAGvH,SAGlD25B,EAAuB,KAAI5F,UAAU/K,GACrCtnB,EAAOy3B,GAAaQ,EAExB,IAAKj4B,EAAOpB,eAAe0yB,UAAYtxB,EAAOpB,eAAeyyB,QACzD,MAAM,IAAIlM,iBAAiB,wDAG/B,OADA/H,OAAOpd,EAAOpB,eAAe0yB,SAAWtxB,EAAOpB,eAAeyyB,SACvDrxB,EAIX,SAASm4B,SAASC,GACd,GAAIA,EAAWx5B,eAAekzB,OAAQ,CAElC,GAA4C,OADlC,WACF1N,KAAKgU,EAAWtG,OAAa,MACjC,MAAM,IAAI3M,iBAAiB,gDAG/B,OADathB,SAASu0B,EAAWtG,OAAa,MAGlD,IAAIuG,EAAgBD,EAAW9G,QAC/B,OAAI+G,GAAiBA,EAAcz5B,eAAe,OACvCy5B,EAAmB,IAEvB,KAIX,SAASC,4BAA4BC,EAAmBhE,EAAqB5M,EAAiB6Q,GAC1F,IAAIC,EAAYF,EAAkBljB,MAAM,KACxCojB,EAAYA,EAAU3jB,IAAIud,WAC1B,IAAIqG,EAAe,GACnB,IAAK,IAAIC,KAAYF,EAAW,CAE5B,GADAE,EAAWnG,wBAAwBmG,EAAUhR,IACxC4M,EAAoB31B,eAAe+5B,GACpC,MAAM,IAAIxT,iBAAiB,wCAAwCwT,MACvED,EAAap4B,KAAKi0B,EAAoBoE,GAAU5F,OAKpD,OAHA2F,EAAeA,EAAa3b,MAAK,CAACC,EAAGC,IAAMD,EAAIC,IAGxC,CAF8B,OAAjBub,EAAwB,KAAO1J,cAAc0J,EAAcE,GAExD,4BADLA,EAAal4B,KAAK,UAKxC,MAAMo4B,YACFlxB,YAAYgY,EAAiBmZ,GACzBj5B,KAAKgvB,eAAiB,EACtBhvB,KAAKk5B,SAAW,IAAIp1B,IACpB9D,KAAK8f,gBAAkBA,EACvB9f,KAAKm5B,GAAK,EACgB,GAAtBF,EAAYv6B,QACZsB,KAAKo5B,UAAYH,EAAY,GAC7Bj5B,KAAKi5B,YAAc,KACnBj5B,KAAKq5B,oBAAsBr5B,KAAKs5B,iBAEhCt5B,KAAKo5B,UAAY,KACjBp5B,KAAKi5B,YAAcA,EACnBj5B,KAAKq5B,oBAAsBr5B,KAAKu5B,eAIxCD,eAAeH,EAAIta,GACf,GAAI7e,KAAKo5B,WAAava,EAAOngB,OACzB,MAAM,IAAI8mB,iBAAiB,uBAAuBxlB,KAAKo5B,UAAY,eAAep5B,KAAKm5B,mBAC3F,OAA2B,IAApBn5B,KAAKo5B,UAAmBp5B,KAAKm5B,GAAKta,EAAO7e,KAAKo5B,WAGzDG,cAAcJ,EAAIta,GACd,IAAIze,EAAS,GACb,IAAK,IAAIo5B,KAAMx5B,KAAKi5B,YAAa,CAC7B,GAAIO,GAAM3a,EAAOngB,OACb,MAAM,IAAI8mB,iBAAiB,uBAAuBgU,EAAK,eAAex5B,KAAKm5B,mBAC/E/4B,EAAOM,MAAa,IAAR84B,EAAYx5B,KAAKm5B,GAAKta,EAAO2a,IAE7C,OAAO31B,KAAK0N,UAAUnR,GAG1B2b,cACI,OAAa,CACT,IAAI8C,QAAe7e,KAAK8f,gBAAgB2Z,aACxC,GAAe,OAAX5a,EACA,MACJ7e,KAAKm5B,IAAM,EACX,IAAIO,EAAK7a,EAAOngB,OAChBsB,KAAKgvB,eAAiBzuB,KAAKC,IAAIR,KAAKgvB,eAAgB0K,GACpD,IAAI1kB,EAAMhV,KAAKq5B,oBAAoBr5B,KAAKm5B,GAAIta,GACxC8a,EAAc35B,KAAKk5B,SAASx3B,IAAIsT,QAChBjU,IAAhB44B,EACA35B,KAAKk5B,SAAS1jB,IAAIR,EAAK,CAAC,CAAChV,KAAKm5B,GAAIO,EAAI7a,KAEtC8a,EAAYj5B,KAAK,CAACV,KAAKm5B,GAAIO,EAAI7a,KAK3CgQ,iBAAiB7Z,GACb,IAAI5U,EAASJ,KAAKk5B,SAASx3B,IAAIsT,GAC/B,YAAejU,IAAXX,EACO,GACJA,EAGX2c,eACI,OAAO/c,KAAK8f,gBAAgB/C,gBAKpC,SAAS6c,cAAc5d,GACnB,OAAOA,EAAWvG,MAAM,MAAMP,IAAIwd,gBAAgBmH,QAAOnkB,GAAQA,EAAKhX,SAAQkC,KAAK,KAAK6E,QAAQ,OAAQ,IAI5G,SAASq0B,4BAA4B9d,GAGjC,OAFAA,EAAayW,UAAUzW,EAAWvW,QAAQ,sBAAuB,MACpDgtB,UAAUzW,EAAWvW,QAAQ,uBAAwB,YAKtE,SAASs0B,qBAAqBnB,EAAcoB,EAAaC,GACrD,GAAqB,OAAjBrB,GAAyC,OAAhBoB,EACzB,OAAO,KACU,OAAjBpB,IACAA,EAAe,IACC,OAAhBoB,IACAA,EAAc,IAClB,IAAIE,EAAgB,GACpB,IAAK,IAAIC,KAAOF,EAEA,OAARE,EACAD,EAAcx5B,KAAK,OAASw5B,EAAcx7B,OAAS,IAC5Cy7B,EAAI5R,QACY,OAAnB4R,EAAIhf,WACJ+e,EAAgBA,EAAc75B,OAAOu4B,GAAcv4B,OAAO25B,GAChC,MAAnBG,EAAIhf,WACX+e,EAAgBA,EAAc75B,OAAOu4B,GACX,MAAnBuB,EAAIhf,aACX+e,EAAgBA,EAAc75B,OAAO25B,IAEd,OAApBG,EAAI7R,YACX4R,EAAcx5B,KAAKy5B,EAAI7R,aACK,OAArB6R,EAAI9R,aACW,KAAlB8R,EAAIhf,YAAqBgf,EAAI9R,aAAeuQ,EAAal6B,OACzDw7B,EAAcx5B,KAAKk4B,EAAauB,EAAI9R,eACX,KAAlB8R,EAAIhf,YAAqBgf,EAAI9R,aAAe2R,EAAYt7B,OAC/Dw7B,EAAcx5B,KAAKs5B,EAAYG,EAAI9R,eAEnC6R,EAAcx5B,KAAK,OAASw5B,EAAcx7B,OAAS,IAGvDw7B,EAAcx5B,KAAK,OAASw5B,EAAcx7B,OAAS,IAG3D,OAAOw7B,EAIX,SAASpc,qCAAqC3C,EAAY6B,GACtD,IAAI7V,EAAOrI,OAAOqI,KAAK6V,GACnBC,EAAU,GACd,IAAK,IAAI1d,EAAI,EAAGA,EAAI4H,EAAKzI,OAAQa,IAAK,CAClC,IAAIyV,EAAM7N,EAAK5H,GACX2d,EAAYF,EAA0BhI,GAC1CiI,EAAQvc,KAAK,CAACwc,EAAWlI,IAE7BiI,EAAQE,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,MAC9CG,OAAOP,EAAQve,OAAS,GACxB,IAAK+e,EAAUC,GAAgBT,EAAQ,IAClCU,EAAUC,GAAgBX,EAAQ,GACnCY,EAAW,wBAAwB1C,+BAEvC,OADA0C,GAAY,eAAeJ,QAAeC,oBAA+BC,QAAeC,WACjFC,EAIX,MAAM9C,kBACFjT,eACA8T,OACI,MAAM,IAAI1Y,MAAM,uCAEpB6Y,wBAAwBC,GACpB,MAAM,IAAI9Y,MAAM,uCAEpB6Y,mBACI,MAAM,IAAI7Y,MAAM,uCAEpBk3B,yBAGArd,eACI,MAAO,GAEXhB,mBACI,OAAO,MAKf,MAAMiC,iBACFlW,eAEAiU,YAAY8C,GACR,MAAM,IAAI3b,MAAM,uCAGpB6Y,gBAIAgB,eACI,MAAO,GAGX2B,eAMJ,MAAMe,kBACF3X,eAEAwX,yBAAyB3F,GACrB,MAAM,IAAIzW,MAAM,uCAGpB6Z,eACI,MAAO,IAKf,MAAMsd,sBAAsBtf,kBACxBjT,YAAYwyB,EAAO7G,EAAa,KAAM8G,GAAuB,EAAMnf,EAAgB,KAC/EC,QACArb,KAAKs6B,MAAQA,EACbt6B,KAAKyzB,aAAeA,EACpBzzB,KAAKu6B,uBAAyBA,EAC9Bv6B,KAAKob,gBAAkBA,EACvBpb,KAAKm5B,GAAK,EACVn5B,KAAKwb,YAAc,IAAI1c,OACvBkB,KAAKw6B,SAAU,EAInB5e,OACI5b,KAAKw6B,SAAU,EAInBze,wBAAwBC,GACpB,IAAIC,EAAe,IAAInd,OAGvB,GAFAod,sBAAsBF,EAAYhc,KAAKob,gBAAiBa,GACxDE,sBAAsBH,EAAYhc,KAAKob,gBAAiBa,GAC9B,OAAtBjc,KAAKyzB,aAAuB,CAC5B,GAAIzzB,KAAKs6B,MAAM57B,QAAUsB,KAAKyzB,aAAa/0B,QAAUsB,KAAKs6B,MAAM,GAAG57B,OAC/D,MAAM,IAAImc,oBAAoB,iEAC9B7a,KAAKu6B,wBACLle,2BAA2BL,EAAYhc,KAAKob,gBAAiBpb,KAAKyzB,aAAcxX,GAChFG,0BAA0BJ,EAAYhc,KAAKob,gBAAiBpb,KAAKyzB,aAAc,oBAAqBxX,IAEpG8X,uBAAuB/X,EAAYhc,KAAKyzB,aAAcxX,GAG9D,OAAOA,EAIXF,mBACI,GAAI/b,KAAKw6B,QACL,OAAO,KACX,GAAIx6B,KAAKm5B,IAAMn5B,KAAKs6B,MAAM57B,OACtB,OAAO,KACX,IAAIke,EAAS5c,KAAKs6B,MAAMt6B,KAAKm5B,IAC7Bn5B,KAAKm5B,IAAM,EACX,IAAIrc,EAAaF,EAAOle,OAGxB,OAFKsB,KAAKwb,YAAYxc,eAAe8d,KACjC9c,KAAKwb,YAAYsB,GAAc9c,KAAKm5B,IACjCvc,EAGXG,eACI,OAAIje,OAAOqI,KAAKnH,KAAKwb,aAAa9c,OAAS,EAChC,CAACof,qCAAqC,QAAS9d,KAAKwb,cACxD,GAGXO,mBACI,OAAO/b,KAAKyzB,cAKpB,MAAMgH,oBAAoBzc,iBACtBlW,YAAY4yB,GACRrf,QACArb,KAAKs6B,MAAQI,EACb16B,KAAK2e,OAAS,KAGlB5C,YAAY8C,GAER,OADA7e,KAAKs6B,MAAM55B,KAAKme,IACT,EAGXH,WAAWC,GACP3e,KAAK2e,OAASA,GAKtB,MAAMgc,4BAA4Blb,kBAC9B3X,YAAYwyB,EAAO7G,EAAa,KAAM8G,GAAuB,EAAM5gB,EAAS,KACxE0B,QACArb,KAAKs6B,MAAQA,EACbt6B,KAAK2Z,SAAWA,EAChB3Z,KAAKyzB,aAAeA,EACpBzzB,KAAKu6B,uBAAyBA,EAGlCjb,yBAAyB3F,GACrB,GAAIA,EAAS4X,gBAAkBvxB,KAAK2Z,SAChC,MAAM,IAAIkB,oBAAoB,+BAA+BlB,MACjE,OAAO,IAAI0gB,cAAcr6B,KAAKs6B,MAAOt6B,KAAKyzB,aAAczzB,KAAKu6B,uBAAwB,MAK7Fxe,eAAe6e,0BAA0B5e,EAAYoF,EAAgBD,EAAsB4F,GACvF/K,EAAa4d,cAAc5d,GAC3B,IAAKwb,EAAmBzP,GAAmBiP,yBAAyBhb,GAGhEwc,EAAaT,iBAFjBP,EAAoBsC,4BAA4BtC,IAG5CgB,EAAWx5B,eAAeozB,OAC1BhR,EAAegZ,sBAAsB5B,EAAWpG,OAEpD,IAAIuC,QAA4BvT,EAAeyZ,kBAAkB7e,GAEjE,GAAIwc,EAAWx5B,eAAegzB,WAAawG,EAAWx5B,eAAeyyB,QACjE,MAAM,IAAIlM,iBAAiB,iDAE/B,GAAIiT,EAAWx5B,eAAewyB,UAAW,CACrC,GAAIgH,EAAWx5B,eAAegzB,WAAawG,EAAWx5B,eAAeyyB,QACjE,MAAM,IAAIlM,iBAAiB,qFAC/BwB,EAAcT,2BAA6B,IAAMsM,wBAAwB4F,EAAWhH,UAAgB,KAAGzJ,GAAmB,IAG9H,IAAI6M,EAAqB,KACrBoF,EAAc,KAClB,GAAIxB,EAAWx5B,eAAe2yB,MAAO,CACjC,IAAKmJ,EAAcvG,GAAkBF,sBAAsBmE,EAAW7G,MAAY,MAClF,GAA6B,OAAzBxQ,EACA,MAAM,IAAIoE,iBAAiB,wDAC/B,IAAIwV,EAAuB5Z,EAAqB7B,yBAAyBwb,GACzE,IAAKC,EACD,MAAM,IAAIxV,iBAAiB,+BAA+BuV,MAC1DtC,EAAWx5B,eAAeozB,OAC1B2I,EAAqBX,sBAAsB5B,EAAWpG,OAE1DwC,QAA2BmG,EAAqBF,kBAAkB7e,GAClEge,QAAoBe,EAAqBC,aACzC,IAAKnG,EAAeC,GAAeJ,uBAAuBC,EAAqBC,EAAoBL,EAAgBxM,GAC/GkT,EAAgB,CAAC,KAAQvM,YAAa,aAAcA,YAAa,YAAaI,WAAY,kBAAmBA,WAAY,mBAAoBG,kBAAkBuJ,EAAW7G,MAAoB,cAClM5K,EAAcL,wBAAkD,GAAxBmO,EAAcn2B,OAAcm2B,EAAc,GAAK,mBAAqBA,EAAcj0B,KAAK,KAAO,KACtImmB,EAAcP,cAAgB,IAAIwS,YAAY+B,EAAsBjG,SAC9D/N,EAAcP,cAAc0U,QAClCnU,EAAcN,SAAW,IAAIwU,EAAclU,EAAcP,eAK7D,GAFAO,EAAcD,oBAAsB8L,wBAAwB4C,yBAAyBgC,EAAmB7C,EAAqBC,EAAoB,IAAIlR,OAAO,IAAKqE,GAE7JyQ,EAAWx5B,eAAeizB,OAAQ,CAClC,IAAItL,EAAmB6R,EAAWvG,OAAa,KAC/C,GAAI,eAAezN,KAAKmC,GACpB,MAAM,IAAIpB,iBAAiB,+FAC/BwB,EAAcJ,iBAAmBiM,wBAAwBjM,EAAkBoB,GAG/E,IAAI6Q,QAAqBxX,EAAe4Z,aACxC,GAAIxC,EAAWx5B,eAAeyyB,QAAS,CACnC,IAAI6E,EAAoBD,4BAA4BmC,EAAW/G,QAAc,KAAGkD,EAAqB5M,EAAiB,IAAIrE,OAAO,IACjIqD,EAAcF,mBAAqB+L,wBAAwB0D,EAAmBvO,GAC9EhB,EAAcf,OAAOtH,WAAWka,GAGpC,GAAIJ,EAAWx5B,eAAe0yB,QAAS,CAEnC,GADA3K,EAAcb,UAAYqS,SAASC,GAC/BA,EAAWx5B,eAAemzB,QAAS,CACnC,IAAK+H,EAAetT,GAAqB8R,4BAA4BF,EAAWrG,QAAc,KAAGwC,EAAqB5M,EAAiB6Q,GACvI7R,EAAcH,kBAAoBA,EAClCG,EAAcf,OAAOtH,WAAWwb,OAC7B,CACH,IAAKtT,EAAmBuU,GAA6BvE,4BAA4B4B,EAAW9G,QAAc,MAC1G3K,EAAcH,kBAAoBgM,wBAAwBhM,EAAmBmB,GAC7E,IACImS,EAAgBH,qBAAqBnB,EAAcoB,EADpCtR,8CAA8CyS,EAA2BpT,IAE5FhB,EAAcf,OAAOtH,WAAWwb,GAGpCnT,EAAcf,OAAS,IAAIqH,UAAUtG,EAAcf,OAAQe,EAAcb,WACrEsS,EAAW9G,QAAQ1yB,eAAe,kBAClC+nB,EAAcf,OAAS,IAAI0H,gBAAgB3G,EAAcf,QAClDwS,EAAW9G,QAAQ1yB,eAAe,cACzC+nB,EAAcf,OAAS,IAAIyH,WAAW1G,EAAcf,SAI5D,GAAIwS,EAAWx5B,eAAegzB,UAAW,CACrCjL,EAAcX,oBAAsBwM,wBAAwB4F,EAAWxG,UAAgB,KAAGjK,GAC1F,IAAIgG,EAAeyK,EAAWxG,UAAmB,QACjDjL,EAAcf,OAAS,IAAI8H,aAAa/G,EAAcf,OAAQ+H,IAKtEhS,eAAeuF,MAAMtF,EAAYoF,EAAgBC,EAAenB,EAAiBiB,EAAqB,KAAMQ,EAAe,IACvHoF,cAAgB,IAAIhB,YAAY/J,EAAYoF,EAAgBC,EAAeM,SACrEiZ,0BAA0B5e,EAAYoF,EAAgBD,EAAsB4F,qBAC5EoK,gBAAgBpK,qBAChBA,cAAcf,OAAOwH,SAC3BtN,EAAgBxf,QAAQ0gB,EAAerE,gBACnCgK,cAAcP,eACdtG,EAAgBxf,QAAQqmB,cAAcP,cAAczJ,gBACxDmD,EAAgBxf,QAAQ2gB,EAActE,gBAI1ChB,eAAeqf,YAAYpf,EAAYqf,EAAaC,EAAcpb,EAAiBqb,EAAW,KAAMtH,EAAmB,KAAMC,EAAkB,KAAMsH,EAAoB,KAAMjB,GAAuB,EAAM5Y,EAAe,IAClN4Y,GAAiD,OAAvBtG,GAAqD,OAAtBC,GAC1DF,8BAA8BhY,EAAYiY,EAAoBC,GAClE,IAAI9S,EAAiB,IAAIiZ,cAAcgB,EAAapH,EAAoBsG,GACpElZ,EAAgB,IAAIoZ,YAAYa,GAChCna,EAAsC,OAAfoa,EAAsB,KAAO,IAAIZ,oBAAoBY,EAAYrH,EAAmBqG,GAE/G,SADMjZ,MAAMtF,EAAYoF,EAAgBC,EAAenB,EAAiBiB,EAAsBQ,GAClE,OAAxB6Z,IACAhe,OAAqC,GAA9Bge,EAAoB98B,OAAa,6DACX,OAAzB2iB,EAAc1C,QACd,IAAK,IAAI2J,KAAejH,EAAc1C,OAClC6c,EAAoB96B,KAAK4nB,GAOzC,SAASmT,wBAAwBr9B,GAC7B,IAAIs9B,EAAsB,CACtB,iBAAoB,kBACpB,iBAAoB,gBACpB,YAAe,kBACf,oBAAuB,eAEvBC,EAAa,aAKjB,OAJIv9B,EAAE0J,aAAe1J,EAAE0J,YAAYtK,MAAQk+B,EAAoB18B,eAAeZ,EAAE0J,YAAYtK,QACxFm+B,EAAaD,EAAoBt9B,EAAE0J,YAAYtK,OAG5C,CAACm+B,EADQv9B,EAAEY,eAAe,WAAaZ,EAAEmf,QAAU7Y,OAAOtG,IAKrEb,QAAQ+jB,MAAQA,MAChB/jB,QAAQ69B,YAAcA,YACtB79B,QAAQwd,kBAAoBA,kBAC5Bxd,QAAQygB,iBAAmBA,iBAC3BzgB,QAAQkiB,kBAAoBA,kBAE5BliB,QAAQmO,QAAUub,aAClB1pB,QAAQ88B,cAAgBA,cACxB98B,QAAQk9B,YAAcA,YACtBl9B,QAAQo9B,oBAAsBA,oBAC9Bp9B,QAAQk+B,wBAA0BA,wBAKlCl+B,QAAQ2e,sBAAwBA,sBAChC3e,QAAQ4e,sBAAwBA,sBAChC5e,QAAQ8e,2BAA6BA,2BACrC9e,QAAQ6e,0BAA4BA,0BACpC7e,QAAQg1B,gBAAkBA,gBAC1Bh1B,QAAQm1B,eAAiBA,eACzBn1B,QAAQw6B,iBAAmBA,iBAC3Bx6B,QAAQy5B,yBAA2BA,yBACnCz5B,QAAQq1B,wBAA0BA,wBAClCr1B,QAAQ82B,sBAAwBA,sBAChC92B,QAAQm3B,uBAAyBA,uBACjCn3B,QAAQ84B,4BAA8BA,4BACtC94B,QAAQq5B,4BAA8BA,4BACtCr5B,QAAQm7B,4BAA8BA,4BACtCn7B,QAAQ0rB,cAAgBA,cACxB1rB,QAAQmrB,8CAAgDA,8CACxDnrB,QAAQw4B,mBAAqBA,mBAC7Bx4B,QAAQ64B,qCAAuCA,qCAC/C74B,QAAQw8B,qBAAuBA,sBA55D/B,CA85DoDx8B,U,4BC95DpD,MAAMwb,EAAK,EAAQ,MACbD,EAAK,EAAQ,MACbE,EAAO,EAAQ,MACf4iB,EAAO,EAAQ,MAEf3iB,EAAO,EAAQ,MACfG,EAAY,EAAQ,MAGpByiB,EAAqB,+EAG3B,MAAMhhB,UAA4B3X,OAClC,MAAMmW,UAAuBnW,OAM7B,SAASsa,EAAOF,EAAWC,EAAQ,MAC/B,IAAKD,EAID,MAHKC,IACDA,EAAU,mBAER,IAAIlE,EAAekE,GAkBjC,SAAS2E,EAAS5Q,GACd,MAAO,iBAAiB3I,KAAK2I,GAIjC,SAAS8Q,EAAoB0Z,GACzB,OAAO/iB,EAAGgjB,aAAaD,EAAuB,SAuElD,SAAStiB,EAAgBE,EAAgBC,GAErC,IAxCgBC,EAwCZC,EAvCuB,OADXD,EAwCgBD,GAvCnBG,OAAO,GACTd,EAAKpY,KAAKkY,EAAGiB,UAAWH,EAASla,MAAM,IAE3Cka,EAqCP,GAAIb,EAAGiB,WAAWH,GACd,OAAOA,EAEX,GAAIH,IAAmBV,EAAKiB,WAAWJ,KACnCA,EAAiBb,EAAKpY,KAAK8Y,EAAgBG,GACvCd,EAAGiB,WAAWH,IACd,OAAOA,EAIf,IAAImiB,EAxBR,SAA0BC,EAAYjnB,GAElC,IADA,IAAI2Y,EApBR,SAAwBsO,GACpB,IAAIC,EAAU,KACd,IACIA,EAAUnjB,EAAGgjB,aAAaE,EAAY,SACxC,MAAO79B,GACL,MAAO,GAIX,IAFA,IAAI+9B,EAAQD,EAAQzmB,MAAM,MACtBkY,EAAU,GACLpuB,EAAI,EAAGA,EAAI48B,EAAMz9B,OAAQa,IAC9B,GAAK48B,EAAM58B,GAAX,CAEA,IAAIqd,EAASuf,EAAM58B,GAAGkW,MAAM,MAC5BkY,EAAQjtB,KAAKkc,GAEjB,OAAO+Q,EAKOyO,CAAeH,GACpB18B,EAAI,EAAGA,EAAIouB,EAAQjvB,OAAQa,IAChC,GAAIouB,EAAQpuB,GAAGb,QAAUivB,EAAQpuB,GAAG,IAAMyV,EACtC,OAAO2Y,EAAQpuB,GAGvB,OAAO,KAiBW88B,CADcrjB,EAAKpY,KAAKkY,EAAGiB,UAAW,qBACMJ,GAC9D,OAAIqiB,GAAeA,EAAYt9B,OAAS,GAAKqa,EAAGiB,WAAWgiB,EAAY,IAC5DA,EAAY,GAEhB,KAIX,MAAMM,EAEFx0B,cACI9H,KAAKu8B,WAAa,GAClBv8B,KAAKw8B,WAAa,GAGtBC,QAAQ7f,GACJ5c,KAAKu8B,WAAW77B,KAAKkc,GAGzB8f,UACI,IAAK18B,KAAKw8B,WAAW99B,OAAQ,CACzB,IAAKsB,KAAKu8B,WAAW79B,OACjB,OAAO,KACXsB,KAAKw8B,WAAax8B,KAAKu8B,WACvBv8B,KAAKw8B,WAAWtO,UAChBluB,KAAKu8B,WAAa,GAEtB,OAAOv8B,KAAKw8B,WAAWrnB,OAK/B,MAAM8K,UAA0BhH,EAAK8B,kBAIjCjT,YAAY+X,EAAQ8c,EAAUhd,EAAU3E,EAAOC,EAAQC,GAAW,EAAOb,EAAe,KAAMc,EAAW,QAASC,EAAgB,KAC9HC,QACArb,KAAK6f,OAASA,EACd7f,KAAK28B,SAAWA,EAChBnf,EAAwB,OAAhBxd,KAAK6f,SAAuC,OAAlB7f,KAAK28B,WACvC38B,KAAK2f,SAAWA,EAChB3f,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EAEdjb,KAAKkb,WAAaA,EAClBlb,KAAK0b,aAAe,KACpB1b,KAAK48B,gCAAkC1hB,EACvClb,KAAK68B,yBAA0B,EAE/B78B,KAAKmb,WAAaA,EAClBnb,KAAKob,gBAAkBA,EACvBpb,KAAKqa,eAAqC,OAAnBA,GAA2BA,EAAe3b,OAAU2b,EAAiB,KAE5Fra,KAAK88B,QAAU,KACC,SAAZnd,GAAyC,OAAlB3f,KAAK28B,WAU5B38B,KAAK88B,QAAU,IAAIlB,EAAKmB,YAAYpd,EAAU,CAACqd,OAAO,EAAMnd,QAAQ,KAGxE7f,KAAKi9B,iBAAkB,EACvBj9B,KAAKk9B,SAAU,EAEfl9B,KAAKm9B,kBAAmB,EACxBn9B,KAAKyb,qBAAuB,KAE5Bzb,KAAKwb,YAAc,IAAI1c,OACvBkB,KAAKsb,GAAK,EACVtb,KAAKub,GAAK,EAEVvb,KAAKuc,gBAAkB,GAEvBvc,KAAKo9B,uBAAyB,GAC9Bp9B,KAAKq9B,qCAAsC,EAG3Cr9B,KAAKs9B,uBAAyB,KAE9Bt9B,KAAKu9B,sBAAwB,KAE7Bv9B,KAAKw9B,kBAAoB,KAEzBx9B,KAAKy9B,uBAAyB,IAAInB,EAElCt8B,KAAK09B,yBAAqC,cAAVziB,EAAyBjb,KAAK29B,gCAAkC39B,KAAK49B,oBAIzGxD,sBAAsByD,IAE8B,GAA5C,CAAC,SAAU,WAAWvpB,QAAQupB,KAC9B79B,KAAKkb,YAAa,EAClBlb,KAAK48B,gCAAiC,IAEU,GAAhD,CAAC,WAAY,aAAatoB,QAAQupB,KAClC79B,KAAKkb,YAAa,EAClBlb,KAAK48B,gCAAiC,GAK9CkB,2BAEI99B,KAAKu9B,sBAAwB,KAC7Bv9B,KAAKs9B,uBAAyB,KAGlCS,0BACI,GAAI/9B,KAAKw9B,mBAAqBx9B,KAAKu9B,sBAAuB,CACtD,IAAIplB,EAASnY,KAAKu9B,sBACdS,EAAYh+B,KAAKw9B,kBACrBx9B,KAAK89B,2BACL99B,KAAKw9B,kBAAoB,KACzBrlB,EAAO6lB,IAKfC,6BAA6BD,GACM,OAA3Bh+B,KAAKw9B,oBAELx9B,KAAKw9B,kBAAoBQ,GAC7Bh+B,KAAK+9B,0BAIThiB,6BACQ/b,KAAK68B,0BAET78B,KAAK0b,mBAAqB1b,KAAKy5B,aAC/Bz5B,KAAK68B,yBAA0B,EACL,OAAtB78B,KAAK0b,eAGL1b,KAAK6f,QACL7f,KAAK6f,OAAOqe,QAChBl+B,KAAK0b,aAAe1b,KAAK0b,aAAahc,UAI1Cqc,wBAAwBC,GACpB,IAAIC,EAAe,IAAInd,OASvB,OARAma,EAAKiD,sBAAsBF,EAAYhc,KAAKob,gBAAiBa,GAC7DhD,EAAKkD,sBAAsBH,EAAYhc,KAAKob,gBAAiBa,SAEvDjc,KAAKm+B,uBACPn+B,KAAKkb,YAAclb,KAAK0b,eACxBzC,EAAKmD,0BAA0BJ,EAAYhc,KAAKob,gBAAiBpb,KAAK0b,aAAc,kBAAmBO,GACvGhD,EAAKoD,2BAA2BL,EAAYhc,KAAKob,gBAAiBpb,KAAK0b,aAAcO,IAElFA,EAGXF,mBAEI,aADM/b,KAAKm+B,uBACJn+B,KAAKkb,WAAalb,KAAK0b,aAAe,KAIjD0iB,0BAEI,GADAp+B,KAAK+9B,0BAC+B,OAAhC/9B,KAAKs9B,uBACL,OAEJ,IAAI1gB,EAAS,KAQb,GAPI5c,KAAK48B,gCAAkC58B,KAAK68B,yBAC5C78B,KAAK48B,gCAAiC,EACtChgB,EAAS5c,KAAK0b,cAEdkB,EAAS5c,KAAKy9B,uBAAuBf,UAG1B,OAAX9f,IAAoB5c,KAAKi9B,gBACzB,OACJ,IAAI/kB,EAAUlY,KAAKs9B,uBACnBt9B,KAAK89B,2BACL5lB,EAAQ0E,GAIZb,mBACS/b,KAAKk9B,eACAl9B,KAAKq+B,QACXr+B,KAAK6f,QAAU7f,KAAK6f,OAAOye,YAC3Bt+B,KAAK6f,OAAO0e,SAEhB,IAAIC,EAAkBx+B,KAClBy+B,EAAyB,IAAIv6B,SAAQ,SAASgU,EAASC,GACvDqmB,EAAgBlB,uBAAyBplB,EACzCsmB,EAAgBjB,sBAAwBplB,KAG5C,OADAnY,KAAKo+B,0BACEK,EAIX1iB,sBAAsB2iB,EAAY,MAC9B,IAAI/Q,EAAU,GACd,OAAa,CACT,IAAI/Q,QAAe5c,KAAKy5B,aACxB,GAAe,OAAX7c,EACA,MAEJ,GADA+Q,EAAQjtB,KAAKkc,GACT8hB,GAAe/Q,EAAQjvB,QAAUggC,EAAa,CAC9C1+B,KAAK4b,OACL,OAGR,OAAO+R,EAIXiQ,oBAAoBloB,GAChB,GAA4B,OAAxB1V,KAAKqa,gBAA2B3E,EAAKkF,WAAW5a,KAAKqa,gBACrD,OACJra,KAAKsb,IAAM,EACX,IAAKsB,EAAQC,GAAWzD,EAAU0C,YAAYpG,EAAM1V,KAAKgb,MAAOhb,KAAKib,QAAQ,GACzE4B,GACkC,OAA9B7c,KAAKyb,uBACLzb,KAAKyb,qBAAuBzb,KAAKub,GACd,cAAfvb,KAAKib,QACLjb,KAAKi+B,6BAA6B,IAAIpjB,EAAoB,yCAAyC7a,KAAKmb,8BAA8Bnb,KAAKsb,YAAYtb,KAAKub,QAGxK,IAAIuB,EAAaF,EAAOle,OACnBsB,KAAKwb,YAAYxc,eAAe8d,KACjC9c,KAAKwb,YAAYsB,GAAc9c,KAAKsb,IACxCtb,KAAKy9B,uBAAuBhB,QAAQ7f,GACpC5c,KAAKo+B,0BAITT,gCAAgCjoB,GAC5B,IAAI8G,EAAcpD,EAAUqD,gCAAgCzc,KAAKuc,gBAAiB7G,EAAM1V,KAAKqa,gBACzE,OAAhBmC,GACAxc,KAAK49B,oBAAoBphB,GAIjCmiB,aAAajpB,GAET,GADA1V,KAAKub,IAAM,EACK,IAAZvb,KAAKub,GAAU,CACf,IAAIqjB,EA1UhB,SAAyBlpB,EAAMmpB,GAC3B,MAA+B,UAA3BA,GAAuCnpB,EAAKhX,QAAU,GAA4B,MAAvBgX,EAAKopB,WAAW,IAAsC,MAAvBppB,EAAKopB,WAAW,IAAsC,MAAvBppB,EAAKopB,WAAW,GAClIppB,EAAK4O,UAAU,GAEK,SAA3Bua,GAAsCnpB,EAAKhX,QAAU,GAA4B,QAAvBgX,EAAKopB,WAAW,GACnEppB,EAAK4O,UAAU,GAEnB5O,EAmUkBqpB,CAAgBrpB,EAAM1V,KAAK2f,UACxCif,GAAclpB,IACdA,EAAOkpB,EACP5+B,KAAKm9B,kBAAmB,GAGhCn9B,KAAK09B,yBAAyBhoB,GAIlCspB,0BAA0BC,GACtB,IAAIC,EAAiB,KACrB,GAAIl/B,KAAK88B,QACL,IACIoC,EAAiBl/B,KAAK88B,QAAQqC,OAAOF,GACvC,MAAO7gC,GAML,YALIA,aAAaiB,UACbW,KAAKi+B,6BAA6B,IAAIpjB,EAAoBghB,IAE1D77B,KAAKi+B,6BAA6B7/B,SAK1C8gC,EAAiBD,EAAWhgC,SAASe,KAAK2f,UAE9C,IACIyf,EADsBF,EAAexgC,QAA+B,MAArBwgC,EAAe,IACpBl/B,KAAKq9B,oCAAsC,EAAI,EAC7Fr9B,KAAKq9B,oCAAsC6B,EAAexgC,QAAuD,MAA7CwgC,EAAeA,EAAexgC,OAAS,GAC3G,IAAIy9B,EAAQ/iB,EAAU+L,YAAY+Z,GAClC/C,EAAM,GAAKn8B,KAAKo9B,uBAAyBjB,EAAM,GAC/C3e,EAA2B,GAApB4hB,GAA4C,GAAnBjD,EAAM,GAAGz9B,QACzCsB,KAAKo9B,uBAAyBjB,EAAMhnB,MACpC,IAAK,IAAI5V,EAAI6/B,EAAkB7/B,EAAI48B,EAAMz9B,OAAQa,IAC7CS,KAAK2+B,aAAaxC,EAAM58B,IAKhC8/B,kBAAkBJ,GACd,IAAIC,EAAiBD,EAAWhgC,SAASe,KAAK2f,UAC9C,GAAqB,SAAjB3f,KAAK2f,SAAqB,CAG1B,IAAI2f,EAAiBC,OAAO/Q,KAAK0Q,EAAgB,SACjD,GAAkD,GAA9CK,OAAOC,QAAQP,EAAYK,GAE3B,YADAt/B,KAAKi+B,6BAA6B,IAAIpjB,EAAoBghB,IAIlE,IAAIM,EAAQ/iB,EAAU+L,YAAY+Z,GAC9B/C,EAAMz9B,QAA4C,GAAlCy9B,EAAMA,EAAMz9B,OAAS,GAAGA,QACxCy9B,EAAMhnB,MACV,IAAK,IAAI5V,EAAI,EAAGA,EAAI48B,EAAMz9B,OAAQa,IAC9BS,KAAK2+B,aAAaxC,EAAM58B,IAExBS,KAAKuc,gBAAgB7d,OAAS,GAC9BsB,KAAK49B,oBAAoB59B,KAAKuc,gBAAgB3b,KAAK,OAEvDZ,KAAKi9B,iBAAkB,EACvBj9B,KAAKo+B,0BAITqB,0BAEI,GADAz/B,KAAKi9B,iBAAkB,EACnBj9B,KAAKo9B,uBAAuB1+B,OAAQ,CACpC,IAAIghC,EAAY1/B,KAAKo9B,uBACrBp9B,KAAKo9B,uBAAyB,GAC9Bp9B,KAAK2+B,aAAae,GAElB1/B,KAAKuc,gBAAgB7d,OAAS,GAC9BsB,KAAK49B,oBAAoB59B,KAAKuc,gBAAgB3b,KAAK,OAEvDZ,KAAKo+B,0BAITxiB,OACQ5b,KAAK6f,QACL7f,KAAK6f,OAAO8f,UAIpB5jB,cACI,IAAI/b,KAAKk9B,QAAT,CAGA,GADAl9B,KAAKk9B,SAAU,GACXl9B,KAAK6f,OAGF,CACH,IAAI2e,EAAkBx+B,KACtB,OAAO,IAAIkE,SAAQ,SAASgU,EAASC,GACjCY,EAAG6mB,SAASpB,EAAgB7B,UAAU,CAACvkB,EAAK6mB,KACpC7mB,EACAD,EAAOC,IAEPomB,EAAgBa,kBAAkBJ,GAClC/mB,WAVZlY,KAAK6f,OAAOjU,GAAG,QAASqzB,IAAiBj/B,KAAKg/B,0BAA0BC,MACxEj/B,KAAK6f,OAAOjU,GAAG,OAAO,KAAQ5L,KAAKy/B,8BAiB3C1iB,eACI,IAAI3c,EAAS,GAOb,OANkC,OAA9BJ,KAAKyb,sBACLrb,EAAOM,KAAK,yCAAyCV,KAAKmb,kCAAkCnb,KAAKyb,wBACjGzb,KAAKm9B,kBACL/8B,EAAOM,KAAK,wDAAwDV,KAAKmb,oBACzErc,OAAOqI,KAAKnH,KAAKwb,aAAa9c,OAAS,GACvC0B,EAAOM,KAjbnB,SAA8Cya,EAAY6B,GACtD,IAAI7V,EAAOrI,OAAOqI,KAAK6V,GACnBC,EAAU,GACd,IAAK,IAAI1d,EAAI,EAAGA,EAAI4H,EAAKzI,OAAQa,IAAK,CAClC,IAAIyV,EAAM7N,EAAK5H,GACX2d,EAAYF,EAA0BhI,GAC1CiI,EAAQvc,KAAK,CAACwc,EAAWlI,IAE7BiI,EAAQE,MAAK,SAASC,EAAGC,GAAK,OAAOD,EAAE,GAAKC,EAAE,MAC9CG,EAAOP,EAAQve,OAAS,GACxB,IAAK+e,EAAUC,GAAgBT,EAAQ,IAClCU,EAAUC,GAAgBX,EAAQ,GACnCY,EAAW,wBAAwB1C,+BAEvC,OADA0C,GAAY,eAAeJ,QAAeC,oBAA+BC,QAAeC,WACjFC,EAmaaC,CAAqC9d,KAAKmb,WAAYnb,KAAKwb,cACpEpb,GAKf,MAAMkiB,UAAkBrJ,EAAK+E,iBACzBlW,YAAY+X,EAAQggB,EAAwBlgB,EAAU3E,EAAOC,EAAQ6kB,EAAe,MAmBhF,GAlBAzkB,QACArb,KAAK6f,OAASA,EACd7f,KAAK2f,SAAWA,EACZA,GACA3f,KAAK6f,OAAOkgB,mBAAmBpgB,GACnC3f,KAAK6f,OAAOjU,GAAG,SAAUo0B,IAAgBhgC,KAAKigC,kBAAkBD,MAChEhgC,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EACdjb,KAAK8/B,eAAiBA,EACtB9/B,KAAKof,gBAA2B,KAATpE,EAAe,IAAM,IAE5Chb,KAAK6/B,uBAAyBA,EAE9B7/B,KAAKke,gBAAiB,EACtBle,KAAKme,wBAAyB,EAC9Bne,KAAKie,WAAa,KAClBje,KAAKkgC,YAAc,KAEL,UAAVjlB,EACAjb,KAAKqe,iBAAmBre,KAAKse,iBAC1B,GAAc,UAAVrD,EACPjb,KAAKqe,iBAAmBre,KAAKue,iBAC1B,GAAc,cAAVtD,EACPjb,KAAKqe,iBAAmBre,KAAKwe,qBAC1B,GAAc,cAAVvD,EACPjb,KAAKqe,iBAAmBre,KAAKye,cAC1B,IAAc,cAAVxD,EAGP,MAAM,IAAIJ,EAAoB,6BAF9B7a,KAAKqe,iBAAmBre,KAAKse,aAOrC2hB,kBAAkBD,GAEW,OAArBhgC,KAAKkgC,cACLlgC,KAAKkgC,YAAcF,GAG3BthB,WAAWC,GACQ,OAAXA,IACA3e,KAAKie,WAAaU,EAAOjgB,OACzBsB,KAAK4e,MAAMD,IAKnBJ,YAAYM,GACR,IAAI7D,EAAQhb,KAAKgb,MAEjB,OADoB6D,EAAO3J,KAAI,SAAS4J,GAAK,OAAO1F,EAAU2F,YAAYra,OAAOoa,GAAI9D,MAChEpa,KAAKZ,KAAKgb,OAInCwD,gBAAgBK,GACZ,IAAI7D,EAAQhb,KAAKgb,MAEjB,OADoB6D,EAAO3J,KAAI,SAAS4J,GAAK,OAAO1F,EAAU4F,gBAAgBta,OAAOoa,GAAI9D,MACpEpa,KAAKZ,KAAKgb,OAInCyD,UAAUI,GACN,GAAIA,EAAOngB,OAAS,EAChB,MAAM,IAAImc,EAAoB,mFAElC,OAAOgE,EAAO,GAIlBP,YAAYO,GACR,IAAII,EAAMJ,EAAOje,KAAKZ,KAAKgb,OAI3B,OAH4C,GAAxC6D,EAAOje,KAAK,IAAI0T,QAAQtU,KAAKgb,SAC7Bhb,KAAKme,wBAAyB,GAE3Bc,EAIXC,iBAAiBC,GACb,IAAK,IAAI5f,EAAI,EAAGA,EAAI4f,EAAWzgB,OAAQa,IACd,MAAjB4f,EAAW5f,IACXS,KAAKke,gBAAiB,EACtBiB,EAAW5f,GAAK,IACTI,MAAMkV,QAAQsK,EAAW5f,MAChCS,KAAKkf,iBAAiBC,EAAW5f,IACjC4f,EAAW5f,GAAK4f,EAAW5f,GAAGqB,KAAKZ,KAAKof,kBAMpDrD,YAAY8C,GACR,GAAwB,OAApB7e,KAAKie,YAAuBY,EAAOngB,QAAUsB,KAAKie,WAClD,MAAM,IAAIpD,EAAoB,2EAA2E7a,KAAKie,iBAAiBY,EAAOngB,UAC1IsB,KAAKkf,iBAAiBL,GACtB7e,KAAK6f,OAAOjB,MAAM5e,KAAKqe,iBAAiBQ,IACxC7e,KAAK6f,OAAOjB,MAAM5e,KAAK8/B,gBACvB,IAAIK,EAAengC,KAAKkgC,YACxB,OAAO,IAAIh8B,SAAQ,SAASgU,EAASC,GACZ,OAAjBgoB,EACAhoB,EAAOgoB,GAEPjoB,GAAQ,MAMpBkoB,WAAW9F,GACP,IAAK,IAAI/6B,EAAI,EAAGA,EAAI+6B,EAAM57B,OAAQa,IAC9BS,KAAK4e,MAAM0b,EAAM/6B,IAKzBwc,eACI,IAAI8jB,EAAyB7/B,KAAK6/B,uBAC9B/d,EAAgB9hB,KAAK6f,OACrBwgB,EAAkBrgC,KAAK2f,SACvBwgB,EAAengC,KAAKkgC,YAWxB,OAVqB,IAAIh8B,SAAQ,SAASgU,EAASC,GAC1B,OAAjBgoB,GACAhoB,EAAOgoB,GAEPN,EACA/d,EAAcwe,IAAI,GAAID,GAAiB,KAAQnoB,OAE/C5N,YAAW,KAAQ4N,MAAc,MAO7C6E,eACI,IAAI3c,EAAS,GAKb,OAJIJ,KAAKke,gBACL9d,EAAOM,KAAK,wDACZV,KAAKme,wBACL/d,EAAOM,KAAK,wCACTN,GAMf,MAAMmgC,UAA8BtnB,EAAKwG,kBACrC3X,YAAY4X,EAAgB1E,EAAOC,EAAQ0E,EAAUzE,GAAW,EAAOb,EAAe,KAAMuF,EAAQ,MAChGvE,QACArb,KAAK0f,eAAiBA,EACtB1f,KAAKgb,MAAQA,EACbhb,KAAKib,OAASA,EACdjb,KAAK2f,SAAWA,EAChB3f,KAAKkb,WAAaA,EAClBlb,KAAKqa,eAAiBA,EACtBra,KAAK6f,OAAS,KACd7f,KAAK8f,gBAAkB,KAEvB9f,KAAK4f,QAAUA,EACf5f,KAAK+f,gBAAkB,KACvB/f,KAAKka,WAAa,KAGtBoF,yBAAyB3F,GAErB,GADA3Z,KAAKka,WAAaV,EAAgBxZ,KAAK0f,eAAgB/F,GAC/B,OAApB3Z,KAAKka,WACL,MAAM,IAAIW,EAAoB,8BAA8BlB,MAQhE,OANI3Z,KAAK4f,SAAW5f,KAAK4f,QAAmB,UACxC5f,KAAK+f,gBAAkB/f,KAAKka,WAE5Bla,KAAK6f,OAAS9G,EAAGiH,iBAAiBhgB,KAAKka,YAE3Cla,KAAK8f,gBAAkB,IAAIG,EAAkBjgB,KAAK6f,OAAQ7f,KAAK+f,gBAAiB/f,KAAK2f,SAAU3f,KAAKgb,MAAOhb,KAAKib,OAAQjb,KAAKkb,WAAYlb,KAAKqa,eAAgBV,EAAU,KACjK3Z,KAAK8f,gBAGhB/C,aAAamD,GACLlgB,KAAK8f,iBAAmB9f,KAAKkb,YAC7BgF,EAAgBxf,KAAK,iCAAiCsY,EAAKmH,SAASngB,KAAKka,yDAsCrF5c,EAAOC,QAAQ2kB,SAAWA,EAC1B5kB,EAAOC,QAAQ0iB,kBAAoBA,EACnC3iB,EAAOC,QAAQ+kB,UAAYA,EAC3BhlB,EAAOC,QAAQgjC,sBAAwBA,EACvCjjC,EAAOC,QAAQijC,2BAzrBf,SAAoCC,GAEhC,GAAmB,eADnBA,EAAcA,EAAYlP,eAEtB,MAAO,CAAC,GAAI,cAChB,GAAmB,OAAfkP,EACA,MAAO,CAAC,IAAK,UACjB,GAAmB,OAAfA,EACA,MAAO,CAAC,KAAM,UAClB,MAAM,IAAI5lB,EAAoB,yBAAyB4lB,OAkrB3DnjC,EAAOC,QAAQ6kB,oBAAsBA,EACrC9kB,EAAOC,QAAQmjC,UAtCf3kB,eAAyBC,EAAYwF,EAAYV,EAAaC,EAAcU,EAAaT,EAAcC,EAAeS,EAAcxB,EAAiBgB,GAAa,EAAO7G,EAAe,KAAMsH,EAAe,GAAI/B,EAAQ,MACrN,IAAIgC,EAAe,KACf7B,EAAkB,KAClBH,GAAWA,EAAmB,WAAK4B,EACnCzB,EAAkByB,EAElBI,EAA8B,OAAfJ,EAAsBvX,EAAQ4X,MAAQ9I,EAAGiH,iBAAiBwB,GAE7E,IAAKM,EAAeC,GAA0C,OAAhBN,EAAuB,CAACxX,EAAQ+X,QAAQ,GAAS,CAACjJ,EAAGkJ,kBAAkBR,IAAc,GACnI,GAAmB,KAAfX,GAAsC,UAAhBC,EACtB,MAAM,IAAIlG,EAAoB,+DAGlC,GAFoB,WAAhB6G,IACAA,EAAe,WACdQ,EAASlG,IAA+B,UAAhB0F,EACzB,MAAM,IAAI7G,EAAoB,wFAClC,KAAMqH,EAASpB,IAAiBoB,EAASlB,IAAkC,UAAhBU,GACvD,MAAM,IAAI7G,EAAoB,wFAElC,IAAIsH,EAA2BnJ,EAAKpY,KAAKkY,EAAGiB,UAAW,wBACjC,IAAlB4H,GAAwB5I,EAAGiB,WAAWmI,KACtCR,EAAiBS,EAAoBD,IAEzC,IAAIzC,EAAiB8B,EAAaxI,EAAKqJ,QAAQb,GAAc,KACzDL,EAAuB,IAAIof,EAAsB7gB,EAAgBoB,EAAaC,EAAcW,EAAcR,EAAc7G,EAAgBuF,GACxIwB,EAAiB,IAAInB,EAAkB2B,EAAc7B,EAAiB2B,EAAcZ,EAAaC,EAAcG,EAAc7G,GAC7HgH,EAAgB,IAAIiB,EAAUR,EAAeC,EAAwBL,EAAcV,EAAcC,SAE/FhI,EAAKqI,MAAMtF,EAAYoF,EAAgBC,EAAenB,EAAiBiB,EAAsBQ,GACnGR,EAAqBpE,aAAamD,IAWtC5iB,EAAOC,QAAQ++B,YAAcA,EAC7Bh/B,EAAOC,QAAQk+B,wBAA0BxiB,EAAKwiB,yB,sBC1tB9Cn+B,EAAOC,QAAUojC,QAAQ,W,4HCEzB,IAAIC,EAAgB,CACnB,gBACA,iBACA,eACA,eACA,aACA,aACA,YACA,cACA,cACA,aACA,qBAGG53B,EAA0B,oBAAfC,WAA6B,EAAAD,EAASC,WAErD3L,EAAOC,QAAU,WAEhB,IADA,IAAIsjC,EAAM,GACDthC,EAAI,EAAGA,EAAIqhC,EAAcliC,OAAQa,IACN,mBAAxByJ,EAAE43B,EAAcrhC,MAC1BshC,EAAIA,EAAIniC,QAAUkiC,EAAcrhC,IAGlC,OAAOshC,I,2BCvBR,IAEI7iC,EAFe,EAAQ,IAEfb,CAAa,qCAAqC,GAC9D,GAAIa,EACH,IACCA,EAAM,GAAI,UACT,MAAOI,GAERJ,EAAQ,KAIVV,EAAOC,QAAUS,ICbb8iC,yBAA2B,GAG/B,SAASC,oBAAoBC,GAE5B,IAAIC,EAAeH,yBAAyBE,GAC5C,QAAqBjgC,IAAjBkgC,EACH,OAAOA,EAAa1jC,QAGrB,IAAID,EAASwjC,yBAAyBE,GAAY,CAGjDzjC,QAAS,IAOV,OAHA2jC,oBAAoBF,GAAU1jC,EAAQA,EAAOC,QAASwjC,qBAG/CzjC,EAAOC,QCrBfwjC,oBAAoB/3B,EAAI,WACvB,GAA0B,iBAAfC,WAAyB,OAAOA,WAC3C,IACC,OAAOjJ,MAAQ,IAAIW,SAAS,cAAb,GACd,MAAOvC,GACR,GAAsB,iBAAX+iC,OAAqB,OAAOA,QALjB,G,2DCAxB,MAAMhoB,EAAS,oBAAQ,MAEjBH,EAAO,oBAAQ,MACfD,EAAK,oBAAQ,MACbD,EAAK,oBAAQ,MACbsoB,EAAgB,oBAAQ,MAIxBhoB,EAAY,oBAAQ,MAE1B,IAAIF,EAAW,KAQXmoB,EAAgB,KACpB,SAASC,IAGL,OAFsB,OAAlBD,IACAA,EAAgB,oBAAQ,KACrBA,EAIX,MAAME,OAA6BxgC,IAAf+X,EAAGiB,QACjBynB,EAAsB,IAEtBC,EAAqB,sBAE3B,IAAIC,EAA2B,KAE/B,IAAIC,EAAe,IAAI79B,IACnB89B,EAAgB,IAAIp9B,IACpBq9B,EAAyB,IAAIr9B,IAC7Bs9B,EAAwB,IAAIh+B,IAC5Bi+B,EAAwB,IAAIj+B,IAE5Bk+B,EAAyB,KACzBC,EAAyB,KACzBC,EAAsB,KACtBC,EAAgC,KAChCC,EAAmB,KAEvB,IAAIC,EAAqB,KAEzB,IAAIC,EAAe,KAEfC,EAAoB,IAAIz+B,IAExB0+B,EAAuB,KAEvBC,EAAe,KAEfC,EAAgB,KAEhBC,EAAwB,KAExBC,EAA8B,KAC9BC,EAA2B,KAE/B,MAAMC,EAAc,CAChB,IAAO,CAAC,IAAK,UACb,IAAO,CAAC,KAAM,UACd,kBAAmB,CAAC,IAAK,UACzB,aAAc,CAAC,IAAK,UACpB,cAAe,CAAC,IAAK,UACrB,cAAe,CAAC,IAAK,UACrB,cAAe,CAAC,IAAK,UACrB,qBAAsB,CAAC,IAAK,UAC5B,eAAgB,CAAC,IAAK,UACtB,YAAa,CAAC,IAAK,UACnB,mBAAoB,CAAC,IAAK,cAC1B,eAAgB,CAAC,IAAK,WAK1B,IAAIC,EAAoB,CACpB,iBAAkB,KAClB,2CAA4C,KAC5C,kBAAmB,KACnB,gBAAiB,KACjB,mBAAoB,KACpB,yBAA0B,KAC1B,2BAA4B,MAIhC,SAASC,EAAuBC,GAC5B,IAAIC,EAAgB/pB,EAAOgoB,OACtB+B,GAGLA,EAAcC,iBAAiBF,GAInC,SAASG,EAAMC,GACX,OAAO,IAAIn/B,SAAQgU,GAAW5N,WAAW4N,EAASmrB,KAItD,SAASC,EAA6BC,GAClC,IAAK,IAAIC,KAAeV,EACpB,GAAKA,EAAY9jC,eAAewkC,IAE5BV,EAAYU,GAAa,IAAMD,EAC/B,OAAOC,EAEf,OAAO,KAIX,SAASC,EAAsBzuB,EAAK0uB,GAChC,GAAIjB,EAAc,CACd,IAAItkC,EAAQskC,EAAa/gC,IAAIsT,GAC7B,GAAI7W,MAAAA,EACA,OAAOA,EAEf,OAAOulC,EAIX3nB,eAAe4nB,EAAqB3uB,EAAK7W,GACrC,SAAIskC,IAAgBztB,UACVytB,EAAamB,OAAO5uB,EAAK7W,GACxB,IAMf,SAAS0lC,EAAoBzpB,EAAU0pB,EAAcC,GACjD,IAAI3jC,EAAS,GACb,IAAK,IAAIb,EAAIukC,EAAcvkC,EAAIwkC,GAAcxkC,EAAI6a,EAASG,UAAWhb,IACjEa,EAAOM,KAAK0Z,EAASM,OAAOnb,GAAGob,MAEnC,OAAOva,EAAOQ,KAAK,MAIvB,SAASojC,EAAoC1B,EAAc2B,GACvD,IAAI7pB,EAAWkoB,EAAazhB,eACxB7F,EAAQsnB,EAAatnB,MACrBC,EAASqnB,EAAarnB,OAE1BqnB,EAAa4B,uBAAyB3jC,KAAKC,IAAI8hC,EAAa4B,uBAAwB,GAEpF,IAAIC,EAAkB,GACtB,GAAI7B,EAAa8B,oBAAqB,CAClC,IAAI5hB,EAAuB8f,EAAa4B,uBAAyB1C,EACjEF,IAAmB/e,uCAAuCnI,EAAUoI,EAAsB8f,EAAa+B,gBACvG/B,EAAa4B,uBAAyB3jC,KAAKC,IAAI,EAAGD,KAAK8pB,IAAIiY,EAAa4B,uBAAwB5B,EAAa+B,eAAe3lC,OAAS8iC,IACrI,IAAK,IAAIrI,EAAKmJ,EAAa4B,uBAAwB/K,EAAKmJ,EAAa+B,eAAe3lC,QAAUylC,EAAgBzlC,OAAS8iC,EAAqBrI,IAAM,CAC9I,IAAK2K,EAAcC,GAAczB,EAAa+B,eAAelL,GACzDmL,EAAcT,EAAoBzpB,EAAU0pB,EAAcC,IACzDQ,EAAY1nB,GAAWzD,EAAU0C,YAAYwoB,EAAatpB,EAAOC,GAAQ,GAC9E,GAAI4B,EAEA,YADAonB,EAAYO,uBAAyB,8CAA8CrL,EAAK,0BAA0B2K,EAAe,KAGrIK,EAAgBzjC,KAAK6jC,QAEtB,CACH,IAAI7F,EAActkB,EAASG,UAC+B,IAAtDH,EAASM,OAAOna,KAAKC,IAAIk+B,EAAc,EAAG,IAAI/jB,OAC9C+jB,GAAe,GACnB4D,EAAa4B,uBAAyB3jC,KAAKC,IAAI,EAAGD,KAAK8pB,IAAIiY,EAAa4B,uBAAwBxF,EAAc8C,IAC9G,IAAK,IAAIrI,EAAKmJ,EAAa4B,uBAAwB/K,EAAKuF,GAAeyF,EAAgBzlC,OAAS8iC,EAAqBrI,IAAM,CACvH,IAAI1e,EAAYL,EAASM,OAAOye,GAAIxe,KAChC4pB,EAAanrB,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GAAO,GACxEkpB,EAAgBzjC,KAAK6jC,IAI7B,IAAK,IAAIE,EAAI,EAAGA,EAAIN,EAAgBzlC,OAAQ+lC,IAAK,CAC7C,IAAIF,EAAaJ,EAAgBM,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAW7lC,OAAQgmC,IAC/BH,EAAWG,GAAGhmC,OAxJG,MAyJjB6lC,EAAWG,GAAKH,EAAWG,GAAG/uB,OAAO,EAzJpB,KAyJmD,+BAIhFsuB,EAAYE,gBAAkBA,EAC9BF,EAAYU,wBAA0BrC,EAAa4B,uBAIvD,SAASU,EAAgBrrB,GACrB,MAAO,eAAiBA,EAI5B,SAASsrB,EAAoBtrB,GACzB,MAAO,uBAAyBA,EAIpC,SAASurB,EAAsBvrB,GAC3B,MAAO,qBAAuBA,EAIlC,SAASwrB,EAAyB3qB,EAAUY,EAAOC,GAC/C,MAAMmI,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIjJ,EAAiB+I,EAASA,EAAO1hB,IAAI,kBAAoB,GACzDma,EAAcylB,IAAmBnnB,gBAAgBC,EAAUC,GAC/D,OAAOjB,EAAU0C,YAAYD,EAAab,EAAOC,GAA4C,GAAO,GAIxG,SAAS+f,EAAW5gB,EAAUY,EAAOC,GACjC,IAAI1B,EAAYa,EAAS4qB,SACzB,GAAIzrB,EAAW,CACX,IAAI0rB,EAAaxB,EAAsBmB,EAAgBrrB,GAAY,MACnE,GAAI0rB,EACA,OAAOphC,KAAKqhC,MAAMD,GAG1B,OAAOF,EAAyB3qB,EAAUY,EAAOC,GAIrD,SAASkqB,EAA2BtmB,EAAQumB,GACxC,IAAKvmB,EAAOngB,OACR,OAAO,KAGX,IAFA,IAAI2mC,EAAU,EACVC,EAAOzmB,EAAOwmB,GAAS3mC,OAAS,EAC7B0mC,EAAYE,GAAQD,EAAU,EAAIxmB,EAAOngB,QAE5C4mC,EAAOA,EAAOzmB,EADdwmB,GAAW,GACmB3mC,OAAS,EAE3C,OAAO2mC,EA8GX,SAASE,IACL,IAAIrC,EAAgB/pB,EAAOgoB,OAC3B,OAAK+B,GAEeA,EAAcsC,kBADvB,KAQf,SAASC,EAAeC,EAAc,MAGlC,OAFKA,IACDA,EAAgBH,KACfG,GAEYA,EAActrB,UADpB,KAmEf,SAASurB,IACL,IAAIC,EAAc,CAAC5D,EAAwBC,EAAwBE,EAA+BC,EAAkBF,GACpH,IAAK,IAAI3iC,EAAI,EAAGA,EAAIqmC,EAAYlnC,OAAQa,IAChCqmC,EAAYrmC,IACZqmC,EAAYrmC,GAAGsmC,OAmB3B,SAASC,EAA2B9iB,EAAW,MACtCA,IACDA,EAAayiB,KACjBpD,EAAqBrf,EACrB,IAAIzJ,EAAYyJ,EAAaA,EAAWgiB,SAAW,KACnD,GAAKhiB,GAAezJ,GAIpB,IAAIA,EAAUwsB,SAAS,QAAvB,CAGAJ,IACA,IAAInC,EAAcxgB,EAAWgjB,WACxBlD,EAAY9jC,eAAewkC,KAhGpC,SAAqCjqB,EAAWiqB,GAC5C,IAAIyC,EAAiB,GAAG1sB,KAAaiqB,IACrC,GAAK7B,EAAavN,IAAI6R,GAAtB,CAEA,IAAIC,EAAcvE,EAAajgC,IAAIukC,GAC9BjE,IACDA,EAAyB7oB,EAAOgoB,OAAOgF,oBAAoBhtB,EAAOitB,mBAAmBC,OACzFrE,EAAuBrnB,KAAO,UACV,OAAhBurB,EACAlE,EAAuBsE,MAAQ,UACT,iBAAfJ,EACPlE,EAAuBsE,MAAQ,WACmB,GAA3CJ,EAAY5xB,QAAQ,mBAC3B0tB,EAAuBsE,MAAQ,UAE/BtE,EAAuBsE,MAAQ,UAEnCtE,EAAuBuE,QAAUL,EAAc,qBAC/ClE,EAAuBwE,QAAU,sBACjCxE,EAAuByE,QA+EvBC,CAA4BntB,EAAWiqB,GAhDlCvB,IACDA,EAAyB9oB,EAAOgoB,OAAOgF,oBAAoBhtB,EAAOitB,mBAAmBC,OACzFpE,EAAuBtnB,KAAO,QAC9BsnB,EAAuBsE,QAAU,mCACjCtE,EAAuBuE,QAAU,mBACjCvE,EAAuBwE,OAhC3B,SAAkCltB,GACzB2oB,IACDA,EAAsB/oB,EAAOgoB,OAAOgF,oBAAoBhtB,EAAOitB,mBAAmBC,OAClFzE,EAAcxN,IAAI7a,IAClB2oB,EAAoBvnB,KAAO,SAC3BunB,EAAoBqE,QAAU,4DAC9BrE,EAAoBsE,QAAU,uBAE9BtE,EAAoBvnB,KAAO,QAC3BunB,EAAoBqE,QAAU,4DAC9BrE,EAAoBsE,QAAU,qBAElCtE,EAAoBuE,OAiEpBE,CAAyBptB,GA5DpB4oB,IACDA,EAAgChpB,EAAOgoB,OAAOgF,oBAAoBhtB,EAAOitB,mBAAmBC,OAChGlE,EAA8BxnB,KAAO,cACrCwnB,EAA8BoE,QAAU,iDACxCpE,EAA8BqE,QAAU,kCACxCrE,EAA8BsE,OAuBlC,SAAyCltB,GACrC,IAAIqtB,EAAoB7E,EAAsBrgC,IAAI6X,EAAUgY,eAC5D,IAAKqV,IAAuE,GAAlDA,EAAkBtyB,QAAQmtB,GAChD,OACJ,IAAIoF,EAAkB7tB,EAAKmH,SAASymB,GAC/BxE,IACDA,EAAmBjpB,EAAOgoB,OAAOgF,oBAAoBhtB,EAAOitB,mBAAmBC,OACnFjE,EAAiBznB,KAAO,YACxBynB,EAAiBmE,QAAU,yBAAyBM,IACpDzE,EAAiBoE,QAAU,uBAC3BpE,EAAiBqE,OAwBjBK,CAAgCvtB,UAd5BosB,IAkBR,SAASoB,EAAS/jB,EAAYgkB,GAG1B,GAFKhkB,IACDA,EAAayiB,MACZziB,EACD,OAAO,KACX,IAAIzJ,EAAYyJ,EAAWgiB,SAC3B,IAAKzrB,EACD,OAAO,KACX,IAAIiqB,EAAcxgB,EAAWgjB,WAC7B,IAAKlD,EAAY9jC,eAAewkC,GAC5B,OAAO,KACX,IAAIyC,EAAiB,GAAG1sB,KAAaiqB,IACrC,IAAKwD,EAAc,CACf,GAAIrF,EAAavN,IAAI6R,GACjB,OAAO,KACX,MAAM7iB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,GAAIF,IAAiD,IAAvCA,EAAO1hB,IAAI,wBACrB,OAAO,KAEf,MAAM0hB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAKF,EACD,OAAO,KACXue,EAAansB,IAAIywB,EAAgB,iBACjCH,EAA2B9iB,GAC3B,IAAKhI,EAAOC,GAAU6nB,EAAYU,GAClC,IAAI0C,EAhMR,SAA6BljB,EAAYhI,EAAOC,EAAQmI,GACpD,IAAI/I,EAAiB+I,EAAO1hB,IAAI,kBAC5BulC,EAAyB7jB,EAAO1hB,IAAI,mCACpCwlC,EAA4B,KAGhC,IAFA,IAAI5sB,EAAY0I,EAAWzI,UACvBuC,EAAa,KACRtC,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIH,EAAO,GAAKF,IAAcG,EAC1B,MACJ,IAAIJ,IAAkBI,EAAUG,WAAWP,GAA3C,CAEA,IAAI8sB,EAAe/tB,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GACnE,GAAIksB,EAAa,GACb,MAAO,gBAAkB3sB,EAAO,GAAK,+DAEzC,GAAIysB,GAAwD,OAA9BC,EAAoC,CAC9D,IAAIroB,EAASsoB,EAAa,GAC1B,IAAK,IAAI5nC,EAAI,EAAGA,EAAIsf,EAAOngB,OAAQa,KAC3Bsf,EAAOtf,GAAGb,QAAkC,KAAvBmgB,EAAOtf,GAAGua,OAAO,IAAoC,KAAvB+E,EAAOtf,GAAGG,OAAO,KACpEwnC,EAA4B1sB,GAOxC,GAHKsC,IACDA,EAAaqqB,EAAa,GAAGzoC,QAE7Boe,GAAcqqB,EAAa,GAAGzoC,OAC9B,MAAO,8DAAgEoe,EAAa,sBAAwBtC,EAAO,GAAK,QAAU2sB,EAAa,GAAGzoC,OAAS,YAGnK,OAAkC,OAA9BwoC,EACO,mDAAqDA,EAA4B,GAAK,yCAE1F,KA8JWE,CAAoBpkB,EAAYhI,EAAOC,EAAQmI,GAEjE,OADAue,EAAansB,IAAIywB,EAAgBC,GAC1BA,EAIXnqB,eAAesrB,IAEX,IAAInB,EAAca,EAAS,MAAM,GAIjC,aAFM3D,EAAM,KACZ0C,IACOI,EAIXnqB,eAAeurB,GAAsBC,GACjC,OAAIA,GAA4BA,EAAyBC,2BAG9C,CAACC,YAA8B,OAAjBhF,EAAuBiF,YAA+B,OAAlBrG,GAEzDkG,GAA4BA,EAAyBI,uBAC9C/E,EAEP2E,GAA4BA,EAAyBK,yBAC9C,CAAC,SAAY/E,GAEjB,KAmBX9mB,eAAe8rB,GAAwBC,EAAUC,GAE7C,IAAIvE,EAAcF,EADFhB,EAAathB,cAE7B,IAAIkiB,EAAgB/pB,EAAOgoB,OAC3B,GAAK+B,EAAL,CAEA,UACUA,EAAc8E,iBAAiBF,GACvC,MAAO31B,GAEL,YADA6wB,EAAuB,uCAGvBQ,GAAesE,EAAStE,aAAeA,IACvCvxB,QAAQmF,IAAI,iCAAmC0wB,EAAStE,YAAc,OAASA,SACzErqB,EAAO8uB,UAAUC,wBAAwBJ,EAAUtE,UA7BjEznB,eAA6BgsB,GAEzB,GADAlF,EAA2B,GACtBkF,GAAaA,EAASrpC,OAA3B,CAEA,IAAIwkC,EAAgB/pB,EAAOgoB,OAC3B,IAAK+B,EACD,OAAO,KACX,IAAK,IAAI3jC,EAAI,EAAGA,EAAIwoC,EAASrpC,OAAQa,IAEjC2jC,EAAciF,mBAAmB,iBAAmBJ,EAASxoC,IAEjEsjC,EAA2BkF,GAoBrBK,CAAcL,IAIxB,SAASM,GAAYC,EAAKpoC,EAAMqoC,EAAuBC,GACnD,IAAIhC,EAAUpF,EAAcqH,MAAMH,EAAKpoC,EAAM,CAAC,aAAe,IACzD8hB,EAAS,GACT0mB,EAAS,GACblC,EAAQxkB,OAAOpW,GAAG,QAAQ,SAAS+8B,GAC/B3mB,GAAU2mB,EAAK1pC,cAEnBunC,EAAQkC,OAAO98B,GAAG,QAAQ,SAAS+8B,GAC/BD,GAAUC,EAAK1pC,cAEnBunC,EAAQ56B,GAAG,SAAS,SAASg9B,GACpBL,EAAwC,mBACzCA,EAAwC,kBAAI,EAC5CC,EAAcI,EAAM5mB,EAAQ0mB,OAGpClC,EAAQ56B,GAAG,SAAS,SAASuG,GACzB,IAAI8wB,EAAY9wB,EAAQA,EAAM3U,KAAO,KAAO2U,EAAMoL,QAAU,GACvDgrB,EAAwC,mBACzCA,EAAwC,kBAAI,EAC5CC,EAAc,EAAG,GAAI,yLAA2LvF,OAM5NlnB,eAAe8sB,GAAsBC,EAAgBC,EAAgBC,EAAYhnB,EAAQ0mB,EAAQO,GAC7F,IAAIC,EAAclnB,EACd2Z,EAAa,KACbsH,EAAY,KACZ8E,EAAW,GACf,GAAIiB,IAAeE,GAAeR,EAC9B/M,EAAa,cACbsH,EAAYyF,GAAkB,mBAE9B,IACI,IAAIS,EAAStlC,KAAKqhC,MAAMgE,GACpBC,EAAOnqC,eAAe,gBACtB28B,EAAawN,EAAmB,YAChCA,EAAOnqC,eAAe,eACtBikC,EAAYkG,EAAkB,WAC9BA,EAAOnqC,eAAe,cACtB+oC,EAAWoB,EAAiB,UAClC,MAAO/qC,GACLu9B,EAAa,cACbsH,EAAY,8BAIpB,GADAgG,EAAuBtN,EAAYsH,GAC/BtH,GAAcsH,EACd,OAGJpB,EAAuBtqB,IAAIwxB,GAC3BhH,EAAsBvsB,IAAIuzB,EAAexX,cAAeuX,GACxD,IAAIM,QAAYjwB,EAAOkK,UAAUgmB,iBAAiBN,SAC5ClB,GAAwBuB,EAAKrB,GAsBvC,SAASuB,GAAuB/vB,GAC5B,OAAQA,IAAuD,GAA1CA,EAAUjF,QAAQmtB,GAA6BA,EAAqBloB,EAgF7F,SAASgwB,GAAYnvB,GACjB,IAAIopB,EAAcppB,EAAS4rB,WAC3B,OAAKlD,EAAY9jC,eAAewkC,GAEzBV,EAAYU,GADR,CAAC,aAAc,cAK9BznB,eAAeytB,KACX,IAAI9D,EAAgBH,IACpB,IAAKG,EACD,OACJ,IAAI1iB,EAAayiB,EAAeC,GAChC,IAAK1iB,EACD,OAEJ,IAAIymB,EAAUF,GAAYvmB,GACtBhI,EAAQyuB,EAAQ,GAChBxuB,EAASwuB,EAAQ,GACrB,GAAc,cAAVxuB,EAEA,YADA+nB,EAAuB,qDAG3B,IAAIzpB,EAAYyJ,EAAWgiB,SAC3B,IAAKzrB,EAED,YADAypB,EAAuB,oDAG3B,IAAI0G,EAAYhE,EAAcgE,UAC1BzE,EAAajiB,EAAWtI,OAAOgvB,EAAUrL,MAAM3oB,MAAMiF,KAErDgE,EAASvF,EAAU0C,YAAYmpB,EAAYjqB,EAAOC,GAAQ,GAAO,SAC/D0oB,EAAqBiB,EAAgBrrB,GAAY1V,KAAK0N,UAAUoN,IAI1E5C,eAAe4tB,KACX,IAAIjE,EAAgBH,IACpB,IAAKG,EACD,OACJ,IAAI1iB,EAAayiB,EAAeC,GAChC,IAAK1iB,EACD,OACJ,IAAI4mB,EAAuB5mB,EAAWgjB,WAClC0D,EAAYhE,EAAcgE,UAC9B,IAAKA,EAED,YADA1G,EAAuB,sBAG3B,GAAI0G,EAAUrL,MAAM3oB,MAAQg0B,EAAUpJ,IAAI5qB,MAAQg0B,EAAUrL,MAAMwL,UAAY,GAAKH,EAAUpJ,IAAIuJ,UAE7F,YADA7G,EAAuB,0DAG3B,IACIQ,EAAcF,EADFtgB,EAAWtI,OAAOgvB,EAAUrL,MAAM3oB,MAAMiF,KAAKb,OAAO4vB,EAAUrL,MAAMwL,YAEpF,IAAKrG,EAED,YADAR,EAAuB,uCAI3B,IAAIoG,QAAYjwB,EAAO8uB,UAAUC,wBAAwBllB,EAAYwgB,GACrE1B,EAAsBtsB,IAAI4zB,EAAIpE,SAAU4E,GACxC7C,EAASqC,GAAK,GACdtD,EAA2BsD,GAI/BrtB,eAAe+tB,KACX,IAAI9mB,EAAayiB,IACjB,IAAKziB,EACD,OACJ,IAAIzJ,EAAYyJ,EAAWgiB,SAC3BnD,EAAuBtqB,IAAIgC,GAC3B,IAAIqwB,EAAuB,YAI3B,GAHI9H,EAAsB1N,IAAI7a,KAC1BqwB,EAAuB9H,EAAsBpgC,IAAI6X,KAEhDqwB,GAAwBA,GAAwB5mB,EAAWgjB,WAE5D,YADAhD,EAAuB,uCAI3B,IAAIoG,QAAYjwB,EAAO8uB,UAAUC,wBAAwBllB,EAAY4mB,GACrE9H,EAAsBiI,OAAOxwB,GAC7BusB,EAA2BsD,GAI/BrtB,eAAeiuB,KACX,GAAIzI,EAEA,YADAyB,EAAuB,sDAG3B,IAAIhgB,EAAayiB,IACjB,IAAKziB,EACD,OACJ,IAAIzJ,EAAYyJ,EAAWgiB,SAC3B,IAAKzrB,EAED,YADAypB,EAAuB,6CAK3B,IAAI7nB,QAAmBhC,EAAOgoB,OAAO8I,aADf,CAAC,OADX,yEAC4B,MAAS,MAE5C9uB,GAELwoB,EAAqBrC,IAAmBhoB,oBAAoB6B,GAAa5B,GAI7EwC,eAAemuB,KACX,IAAIlnB,EAAayiB,IACbgE,EAAUF,GAAYvmB,GACtBhI,EAAQyuB,EAAQ,GAChBxuB,EAASwuB,EAAQ,GACjBlwB,EAAYyJ,EAAWgiB,SAC3B,IAAKzrB,EAED,YADAypB,EAAuB,sDAG3B,GAAc,cAAV/nB,EAEA,YADA+nB,EAAuB,wDAG3B,IAEImH,EAsjBR,SAAqBtrB,EAAQ7D,GAEzB,OADoB6D,EAAO3J,KAAI,SAAShB,GAAO,OATnD,SAAqByQ,EAAO3J,GACxB,OAA2B,GAAvB2J,EAAMrQ,QAAQ,OAAuC,GAAzBqQ,EAAMrQ,QAAQ0G,GACnC,IAAM2J,EAAMlf,QAAQ,KAAM,MAAQ,IAEtCkf,EAK+C5F,CAAY7K,EAAK8G,MAClDpa,KAAKoa,GAxjBLuD,CAFJyc,EAAWhY,EAAYhI,EAAOC,GAEFD,GACzCovB,EAAkB,CAAC,OAFX,0GAE4B,MAASD,GACjD,IAAIE,QAAuBlxB,EAAOgoB,OAAO8I,aAAaG,GACtD,IAAKC,EACD,OACJ,IAAIC,EAAalxB,EAAU0C,YAAYuuB,EAAgBrvB,EAAOC,GAAQ,GAAO,SACvE0oB,EAAqBiB,EAAgBrrB,GAAY1V,KAAK0N,UAAU+4B,IAI1EvuB,eAAewuB,GAAYC,GACvB,IAAI9E,EAAgBH,IACpB,IAAKG,IAAkBA,EAAcgE,UACjC,OACJ,IAAI1mB,EAAa0iB,EAActrB,SAC/B,IAAK4I,EACD,OACJ,IAAIymB,EAAUF,GAAYvmB,GACtBhI,EAAQyuB,EAAQ,GAChBxuB,EAASwuB,EAAQ,GACrB,MAAMrmB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAKF,EACD,OACJ,IAAI/I,EAAiB+I,EAAO1hB,IAAI,kBAE5B+oC,EAAW/E,EAAcgE,UAAUgB,OACnClwB,EAAOiwB,EAAS/0B,KAChBi1B,EAAOF,EAASZ,UAChBn0B,EAAOsN,EAAWtI,OAAOF,GAAMG,KAE/BwuB,EAAS/vB,EAAU0C,YAAYpG,EAAMsF,EAAOC,GAAQ,GAEpDgC,EAAUksB,EAAO,GACjByB,EAAkBzB,EAAO,GACzB9D,EAAUF,EAA2BloB,EAAS0tB,EAAO,GAErDE,EAAa,GACbvwB,EAAY0I,EAAWzI,UAC3B,GAAID,GAAa,IACb0oB,EAAuB,8EAD3B,CAIA,IAAK,IAAIxoB,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIH,EAAO,GAAKF,IAAcG,EAC1B,MACJ,GAAIJ,GAAkBI,EAAUG,WAAWP,GACvC,SACJ,IAAI8uB,EAAS/vB,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GACzDgC,EAAUksB,EAAO,GAErB,GADAyB,EAAkBA,GAAmBzB,EAAO,GACxC9D,GAAWpoB,EAAQve,OAEnB,YADAskC,EAAuB,QAAQxoB,EAAO,+BAA+B6qB,EAAU,KAGnF,IAAIyF,EAAkB7tB,EAAQvd,MAAM,EAAG2lC,GAASzkC,KAAK,IAAIlC,OAAS2mC,EAC9D0F,EAAiB9tB,EAAQvd,MAAM,EAAG2lC,EAAU,GAAGzkC,KAAK,IAAIlC,OAAS2mC,EACrE,GAAiB,aAAbmF,GAAsC,UAAVvvB,IAAqG,GAA/ER,EAAU6J,UAAUwmB,EAAkB,EAAGA,EAAkB,GAAGx2B,QAAQ,KAExH,YADA0uB,EAAuB,yDAAyDxoB,EAAO,sDAG3F,GAAiB,YAAbgwB,GAAqC,UAAVvvB,IAAmG,GAA7ER,EAAU6J,UAAUymB,EAAiB,EAAGA,EAAiB,GAAGz2B,QAAQ,KAErH,YADA0uB,EAAuB,yDAAyDxoB,EAAO,sDAG3F,GAAiB,aAAbgwB,GAA4BM,GAAmBC,EAE/C,YADA/H,EAAuB,gFAAgFqC,EAAU,aAAa7qB,EAAO,eAGzI,IAAIwwB,EAAkB,IAAI7xB,EAAO8xB,SAASzwB,EAAMswB,GAC5CI,EAAiB,IAAI/xB,EAAO8xB,SAASzwB,EAAMuwB,GAC9B,aAAbP,GACAK,EAAWnqC,KAAK,IAAIyY,EAAOgyB,UAAUH,EAAiBA,IAEzC,YAAbR,GACAK,EAAWnqC,KAAK,IAAIyY,EAAOgyB,UAAUD,EAAgBA,IAExC,aAAbV,GACAK,EAAWnqC,KAAK,IAAIyY,EAAOgyB,UAAUH,EAAiBE,IAG9DxF,EAAcmF,WAAaA,EACvBD,GACAzxB,EAAOgoB,OAAOgH,mBAAmB,+EAG/BhvB,EAAOgoB,OAAO6G,iBAAiBhlB,IAIzCjH,eAAeqvB,GAAa1F,EAAe2F,GACvC,IAAIroB,EAAayiB,EAAeC,GAChC,IAAK1iB,EACD,OACJ,IAAIwgB,EAAcxgB,EAAWgjB,WAC7B,IAAKlD,EAAY9jC,eAAewkC,GAC5B,OACJ,IAAKxoB,EAAOC,GAAU6nB,EAAYU,IAC7B8H,EAAmBC,GAAqBjK,IAAmB3d,eAAeX,EAAYhI,EAAOC,GAClG,GAAIswB,EAEA,YADAvI,EAAuB,wDAAwDuI,KAKnF,GAFA3J,EAAcmI,OAAO/mB,EAAWgiB,UAChCc,EAA2B9iB,GACD,OAAtBsoB,EAEA,YADAnyB,EAAOgoB,OAAOgH,mBAAmB,2CAGrC,IAAIqD,EAAgB,IAAIryB,EAAOsyB,MAAM,EAAG,EAAGzoB,EAAWzI,UAAgD,GAClGmxB,EAAa1oB,EAAW2oB,cAAcH,GAC1CH,EAAa5lC,QAAQimC,EAAYJ,GAIrCvvB,eAAe6vB,GAAYlG,EAAe2F,GACtC,IAAIroB,EAAayiB,EAAeC,GAChC,IAAK1iB,EACD,OACJ,IAAIwgB,EAAcxgB,EAAWgjB,WAC7B,IAAKlD,EAAY9jC,eAAewkC,GAC5B,OACJ,IAAKxoB,EAAOC,GAAU6nB,EAAYU,IAC7BvgB,EAAcsoB,GAAqBjK,IAAmB1d,kBAAkBZ,EAAYhI,EAAOC,GAChG,GAAIswB,EAEA,YADAvI,EAAuB,uDAAuDuI,KAGlF,IAAIM,EAAmBvK,IAAmBve,cAAcC,EAAYhI,EAAOC,EAAQgI,GAGnF,GAFA2e,EAAcrqB,IAAIyL,EAAWgiB,UAC7Bc,EAA2B9iB,GACF,OAArB6oB,EAEA,YADA1yB,EAAOgoB,OAAOgH,mBAAmB,sCAGrC,IAAIqD,EAAgB,IAAIryB,EAAOsyB,MAAM,EAAG,EAAGzoB,EAAWzI,UAAgD,GAClGmxB,EAAa1oB,EAAW2oB,cAAcH,GAC1CH,EAAa5lC,QAAQimC,EAAYG,GAerC9vB,eAAe+vB,KACX,GAAIvK,EAEA,YADAyB,EAAuB,sDAG3B,IAAI+I,EAAatG,IACjB,IAAKsG,EACD,OACJ,IAAIxyB,EAAYwyB,EAAW/G,SACvB4B,EAAoB7E,EAAsBrgC,IAAI6X,EAAUgY,eAC5D,IAAKqV,EACD,OACJ,IAAIoF,QAAmB7yB,EAAOkK,UAAUgmB,iBAAiBzC,GACrDqF,QAAsB9yB,EAAOgoB,OAAO6G,iBAAiBgE,SAxB7DjwB,eAA4BmwB,EAAkBxG,GAC1C,IAAIiD,EAAOuD,EAAiBC,UACxBnpB,EAAayiB,EAAeC,GAChC,IAAK1iB,EACD,OACJ,IAAIwoB,EAAgB,IAAIryB,EAAOsyB,MAAM,EAAG,EAAGzoB,EAAWzI,UAAgD,GAClGmxB,EAAa1oB,EAAW2oB,cAAcH,SACpC9F,EAAc0G,MAAKA,GAAQA,EAAK3mC,QAAQimC,EAAY/C,KAkBpD0D,CAAaN,EAAYE,GAiBnClwB,eAAeuwB,GAA2BC,EAAShvB,EAASgqB,EAAyB,MACjF,IAAIiF,EAAejvB,EAAkB,SAEjC0rB,EAAyBltB,eAAe4f,EAAYsH,GACpD,IAAIwJ,EAAa,CAAC,SAAY,eAC1B9Q,IACA8Q,EAAuB,WAAI9Q,GAC3BsH,IACAwJ,EAAsB,UAAIxJ,GAC9BL,EAA8B6J,QACxBF,EAAQG,YAAYD,IAG9B,GAAoB,aAAhBD,EAA6B,CAC7B,IAEIG,EAAW,CAAC,SAAY,YAAa,iBAFlBlJ,EAAsB,wBAAyB,MAES,SADhEA,EAAsB,gBAAiB,UAEtDO,EAAoC1B,EAAcqK,GAClD,IAAIC,EAAWtD,GAAuBhH,EAAauK,qBAC/CtK,EAAkBnO,IAAIwY,KACtBD,EAAqB,WAAIpK,EAAkB7gC,IAAIkrC,IACnD,IAAIE,EAAerJ,EAAsB,qBAAsB,IAC/DkJ,EAAwB,cAAIG,EAC5BH,EAAiB,OAAIrK,EAAarnB,OAClC0xB,EAA8B,oBAAIrK,EAAa8B,oBAC/CuI,EAAuB,aAAIrK,EAAaphB,aACxCyrB,EAAiB,OAAIrK,EAAa3jB,OAClCguB,EAAqB,WAAIpL,EACrBgG,IACAoF,EAAoC,0BAAIpF,EAAyBwF,aACjEJ,EAAiC,uBAAIpF,EAAyByF,WAC9DL,EAAwC,8BAAIpF,EAAyBrmB,eAAgB,EACrFyrB,EAA+C,qCAAIpF,EAAyBnD,sBAAuB,SAEjGmI,EAAQG,YAAYC,GAG9B,GAAoB,sBAAhBH,EACA,IACI,IAAI7yB,EAAW4D,EAAkB,SAC7BoC,EAAWpC,EAAkB,SAE7B0vB,EAAkB3K,EAAauK,oBAAsB7zB,EAAKqJ,QAAQigB,EAAauK,qBAAuB,KACtG3yB,EAAaonB,IAAmB9nB,gBAAgBipB,EAAcwK,EAAiBtzB,GACnF,IAAKO,EACD,OACJ,IAAI2B,QAAoBylB,IAAmBlhB,YAAYlG,EAAYyF,IAC9Dd,EAAQhC,GAAWzD,EAAU0C,YAAYD,EAAaymB,EAAatnB,MAAOsnB,EAAarnB,QAAQ,GAC/F4B,GACD0vB,EAAQG,YAAY,CAAC,SAAY,8BAA+B,OAAU7tB,IAEhF,MAAOzgB,GACL6T,QAAQE,MAAM,oCAAsCzN,OAAOtG,IAInE,GAAoB,gBAAhBouC,EAAgC,CAChC,IAAIQ,EAAazvB,EAAe,MAChC,IAAKyvB,EACD,OACA1K,EAAauK,qBACbtK,EAAkB/sB,IAAI8zB,GAAuBhH,EAAauK,qBAAsBG,GAGxF,GAAoB,0BAAhBR,EAA0C,CAC1ClK,EAAa8B,oBAAsB7mB,EAA6B,oBAC5D+kB,EAAauK,2BACPlJ,EAAqBkB,EAAoBvC,EAAauK,qBAAsBvK,EAAa8B,qBACnG,IAAI8I,EAAmB,CAAC,SAAY,YACpClJ,EAAoC1B,EAAc4K,SAC5CX,EAAQG,YAAYQ,GAS9B,GANoB,uBAAhBV,IACAlK,EAAaphB,aAAe3D,EAAsB,aAC9C+kB,EAAauK,2BACPlJ,EAAqBmB,EAAsBxC,EAAauK,qBAAsBvK,EAAaphB,eAGrF,YAAhBsrB,EAA4B,CAC5B,IAAIW,EAAkB5vB,EAAmB,UAClB,YAAnB4vB,EACA7K,EAAa4B,wBAA0B1C,EACb,WAAnB2L,EACP7K,EAAa4B,wBAA0B1C,EACb,SAAnB2L,EACP7K,EAAa4B,uBAAyB,EACZ,OAAnBiJ,IACP7K,EAAa4B,uBAAyB5B,EAAazhB,eAAetG,WAEtE,IAAI2yB,EAAmB,CAAC,SAAY,YACpClJ,EAAoC1B,EAAc4K,SAC5CX,EAAQG,YAAYQ,GAG9B,GAAoB,OAAhBV,EAAuB,CACvB,IAAIQ,EAAazvB,EAAe,MAC5B6vB,EAAmB7vB,EAA0B,iBAC7CoC,EAAWpC,EAAkB,SAC7B8vB,EAAiB9vB,EAAwB,eACzC6mB,EAAsB7mB,EAA6B,oBACnD2D,EAAe3D,EAAsB,mBAlHjDxB,eAAoCuF,GAChC,IAAIwrB,EAAerJ,EAAsB,qBAAsB,IAC3D6J,EAAYR,EAAax4B,QAAQgN,IACnB,GAAdgsB,EACAR,EAAavnC,OAAO+nC,EAAW,GACxBR,EAAapuC,QAAU,IAC9BouC,EAAavnC,OAAO,EAAG,GAE3BunC,EAAapsC,KAAK4gB,SACZqiB,EAAqB,qBAAsBmJ,GA0GvCS,CAAqBP,SAzdnCjxB,eAA8ByF,EAAYE,EAAc0rB,EAAkBJ,EAAYK,EAAgBjJ,EAAqBljB,EAAc+nB,GACrI1G,EAAkB/sB,IAAI8zB,GAAuB9nB,GAAawrB,GAC1D,IAAI1E,EAAM,SAEV,IAAIC,EAAwB,CAAC,kBAAoB,IAE5CznB,EAAaC,GAAgB,CAACuhB,EAAatnB,MAAOsnB,EAAarnB,QAChD,UAAhB8F,GAA4BqjB,IAC5BrjB,EAAe,cACnB,IAAKC,EAAcC,GAAiB,CAACH,EAAaC,GAC5B,OAAlBssB,KACCrsB,EAAcC,GAAiB,CAAC,IAAK,WACpB,OAAlBosB,KACCrsB,EAAcC,GAAiB,CAAC,KAAM,WAC3CqhB,EAAathB,aAAeA,EAE5B,IAAIS,EAAc8f,EAAa,KAAOvoB,EAAKpY,KA/B/C,SAA2B4sC,GACvB,MAAMpqB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,OAAKF,EAEgC,OAAjCA,EAAO1hB,IAAI,mBACJoX,EAAG20B,SAC8B,SAAjCrqB,EAAO1hB,IAAI,mBACXsX,EAAKqJ,QAAQmrB,GAGbpqB,EAAO1hB,IAAI,mBAPXoX,EAAG20B,SA4BkCC,CAAkBlsB,GArDtE,SAA4BA,EAAYR,GACpC,IAAI7F,EAAanC,EAAKmH,SAASqB,GAC3BmsB,EAAiB30B,EAAK40B,QAAQzyB,GAC9B0yB,EAAgB,CAAC,KAAM,OAAQ,IAAK,QACpCC,EAAgB,OAChBD,EAAc7uC,eAAegiB,GAC7B8sB,EAAgBD,EAAc7sB,GACvB2sB,EAAejvC,OAAS,IAC/BovC,EAAgBH,GAEpB,IAAII,EAAoB5yB,EAAa2yB,EAIrC,OAHIC,GAAqB5yB,IACrB4yB,GAAqB,QAElBA,EAuCwEC,CAAmBxsB,EAAYR,IAE9G,GAAIgsB,EAAWpyB,WAfK,SAqBhB,OALuC,GAAnCoyB,EAAW14B,QAAQ,cACnBg0B,EAAM,iBAGVD,GAAYC,EADD,CAACvF,EAAkB,0BAA2BiK,GAClCzE,GAAuB,SAASS,EAAYhnB,EAAQ0mB,GAAUG,GAAsBrnB,EAAYC,EAAaunB,EAAYhnB,EAAQ0mB,EAAQO,MAGpK,GAAwB,MAApBmE,EAA0B,CAC1B,IAAIrF,EAAW,GACXgE,EAAa,KACjB,IACI,GAAIxK,EAAY,CACZ,IACI0M,EAAiB,CAAC/R,eADGoF,IAAmB1gB,eAAeosB,EAAY1K,EAAazhB,eAAgBC,EAAaC,EAAcC,EAAcC,EAAe8mB,EAAU7mB,EAAc,OACxItgB,KAAK,MAAOstC,SAAU5K,EAA6BtiB,IAC/F+qB,QAAmB5yB,EAAOkK,UAAUgmB,iBAAiB4E,OAClD,CACH,IAAIE,EAAc,CAAC,WAAa,SAC1B7M,IAAmB/f,gBAAgBkhB,EAAcuK,EAAYxrB,EAAYV,EAAaC,EAAcU,EAAaT,EAAcC,EAAeS,EAAcqmB,EAAU7mB,EAAc,KAAM,GAAIitB,GACpMpM,EAAsBvsB,IAAIiM,EAAY8P,cAAe/P,GACrDqgB,EAAuBtqB,IAAIkK,GAC3BsqB,QAAmB5yB,EAAOkK,UAAUgmB,iBAAiB5nB,IAE3D,MAAOrjB,GACL,IAAKu9B,EAAYsH,IAprBR,OAAb/pB,IACAA,EAAW,oBAAQ,MAChBA,GAkrB6CuiB,wBAAwBr9B,GAEpE,YADA6qC,EAAuBtN,EAAYsH,GAGvCgG,EAAuB,KAAM,YACvBpB,GAAwBkE,EAAYhE,OACvC,CACH,GAAIxG,EAEA,YADA0H,EAAuB,cAAe,2FAG1C,IAAImF,EAAiB7O,OAAO/Q,KAAKwe,EAAY,SAAS/tC,SAAS,UAC3DiB,EAAO,CAAC6iC,EAAkB,4BAA6BqL,EAAgB5sB,EAAYV,EAAaC,EAAcU,EAAaT,EAAcC,EAAeS,GACxJR,GACAhhB,EAAKQ,KAAK,kBACd2nC,GAAYC,EAAKpoC,EAAMqoC,GAAuB,SAASS,EAAYhnB,EAAQ0mB,GAAUG,GAAsBrnB,EAAYC,EAAaunB,EAAYhnB,EAAQ0mB,EAAQO,OAia1JoF,CAAe/L,EAAauK,oBAAqBltB,EAAUytB,EAAkBJ,EAAYK,EAAgBjJ,EAAqBljB,EAAc+nB,GAGtJ,GAAoB,YAAhBuD,EAA4B,CAC5B,GAAIjL,EAEA,YADA0H,EAAuB,cAAe,mDAG1C,IACIqF,EAAgB,KAChBC,EAAkB,GACE,MAHDhxB,EAA0B,kBAI7C+wB,EAAgBt1B,EAAKpY,KAAKkY,EAAGiB,UAAW,wBACxCw0B,EAAkBjN,IAAmBze,+BAErCyrB,EAAgBt1B,EAAKpY,KAAKkY,EAAGiB,UAAW,wBACxCw0B,EAAkBjN,IAAmBxe,kCAEpC/J,EAAGiB,WAAWs0B,IACfv1B,EAAGy1B,cAAcF,EAAeC,GAEpC,IAAIE,QAAgBt1B,EAAOkK,UAAUgmB,iBAAiBiF,SAChDn1B,EAAOgoB,OAAO6G,iBAAiByG,GAGrB,uBAAhBjC,SACM7I,EAAqBpmB,EAAa,IAAGA,EAAe,OAmBlExB,eAAe2yB,GAAUnH,EAAyB,MAC9C,IAAIrE,EAAgB/pB,EAAOgoB,OAC3B,IAAK+B,EACD,OACJ,IAAIwC,EAAgBxC,EAAcsC,iBAClC,IAAKE,EACD,OACJ,IAAI1iB,EAAa0iB,EAActrB,SAC/B,IAAK4I,EACD,OACJ,IAAI2rB,EAAW3rB,EAAW4rB,IAC1B,IAAKD,EACD,OAEJ,GAAuB,QAAnBA,EAASE,QAAuC,YAAnBF,EAASE,SAAyBtN,EAC/D,OACJ,GAAuB,QAAnBoN,EAASE,QAAoB7rB,EAAW8rB,UAAYvN,EAEpD,YADAyB,EAAuB,gDAG3B,IAAIxhB,EAAa,KACjB,GAAuB,YAAnBmtB,EAASE,QAAyBtN,EAQlC/f,EAAawB,EAAWgiB,aARsB,CAE9C,IAAI2D,EAAO3lB,EAAWmpB,UAClB4C,EAAarqC,OAAOnE,KAAK0qB,MAAsB,IAAhB1qB,KAAKyuC,WACxCxtB,EAAaxI,EAAKpY,KAAKkY,EAAG20B,SAAU,uBAAyBsB,SAE7Dh2B,EAAGy1B,cAAchtB,EAAYmnB,GAKjC,IAAKnnB,EAED,YADAwhB,EAAuB,oCAG3B,MAAM5f,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIkgB,EAAcxgB,EAAWgjB,WACzBhrB,EAAQ,aACRC,EAAS,aACT6nB,EAAY9jC,eAAewkC,MAC1BxoB,EAAOC,GAAU6nB,EAAYU,IAElC,IAAIY,EAAsBX,EAAsBoB,EAAoBrjB,IAAa,GAC7EytB,IAA0B7rB,GAASA,EAAO1hB,IAAI,gCAC9Cwf,EAAeuiB,EAAsBqB,EAAsBtjB,GAAaytB,GACxEtwB,EAASomB,EAAyB/hB,EAAYhI,EAAOC,GACzDqnB,EAAe,CACX,eAAkBtf,EAClB,oBAAuBxB,EACvB,uBAA0B,EAC1B,MAASxG,EACT,OAAUC,EACV,eAAkB,GAClB,oBAAuBmpB,EACvB,aAAgBljB,EAChB,OAAUvC,GAGd+jB,EAAgBvpB,EAAOgoB,OAAO+N,mBAAmB,eAAgB,eAAgB/1B,EAAOg2B,WAAWC,OAAQ,CAACC,eAAe,IACtH7M,IAEGA,EADAjB,EACuBG,EAEA3oB,EAAGgjB,aAAagH,EAAkB,oBAAqB,SAGtF,IAAIuM,EAAc9M,EAClB8M,EAlFJ,SAA8BC,EAAYD,GACtC,IAAK,MAAME,IAiFwB,CAAC,2CAA4C,kBAAmB,iBAAkB,iBAjFhF,CACjC,IAAIC,EAAuB,KAEvBA,EADAlO,EACuBwB,EAAkByM,GAElB9M,EAAc6J,QAAQmD,aAAav2B,EAAOw2B,IAAIC,KAAK7M,EAAkByM,KAEhGF,EAAcA,EAAY7pC,QAAQ,QAAQ+pC,KAAe,QAAQC,MAErE,OAAOH,EAwEOO,CAAqB,EAAoGP,GACvI5M,EAAc6J,QAAQuD,KAAOR,EAC7B5M,EAAc6J,QAAQwD,qBAAoB,SAASxyB,GAAW+uB,GAA2B5J,EAAc6J,QAAShvB,EAASgqB,MAI7H,SAASyI,GAA6BhtB,EAAYhI,EAAOC,EAAQg1B,EAAiBC,GAC9E,IAAI51B,EAAY0I,EAAWzI,UAC3B,IAAIuC,EAAa,EACbqzB,EAAoB,EACxB,MAAM/sB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAI8sB,EAAmChtB,EAASA,EAAO1hB,IAAI,kBAAoB,GAC1E0uC,IACDA,EAAmC,KACvC,IAAK,IAAI51B,EAAO,EAAGA,EAAOF,EAAWE,IAAQ,CACzC,IAAIC,EAAYuI,EAAWtI,OAAOF,GAAMG,KACxC,GAAIH,EAAO,GAAKF,IAAcG,EAC1B,MACJ,GAAIA,EAAUG,WAAWw1B,GACrB,SACJ,IAAKvxB,EAAQhC,GAAWzD,EAAU0C,YAAYrB,EAAWO,EAAOC,GAAQ,GACxE,GAAI4B,EACA,OAAO,EAGX,GAFKC,IACDA,EAAa+B,EAAOngB,QACpBoe,EAAamzB,GAAmBnzB,GAAc+B,EAAOngB,OACrD,OAAO,EACXyxC,GAAqB,EAEzB,OAAOA,GAAqBD,EAAgBpzB,EAAa,EAI7D,SAASuzB,GAAmBrtB,EAAYstB,GACpC,MAAMltB,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAI4sB,EAAgB9sB,EAASA,EAAO1hB,IAAI,gCAAkC,GAC1E,GAAIshB,EAAWzI,UAAY21B,EACvB,OAAO,KAEX,IAAIK,EAAe,KACfC,EAA2B,EAC/B,IAAK,IAAIjxC,EAAI,EAAGA,EAAI+wC,EAAqB5xC,OAAQa,IAAK,CAClD,IAAIkxC,EAAanN,EAA6BgN,EAAqB/wC,IACnE,IAAKkxC,EACD,SACJ,IAAKz1B,EAAOC,GAAU6nB,EAAY2N,GAC9BC,EAA0BV,GAA6BhtB,EAAYhI,EAAOC,EAAQu1B,EAA2B,EAAGN,GAChHQ,EAA0BF,IAC1BA,EAA2BE,EAC3BH,EAAeE,GAGvB,OAAOF,EA0DXx0B,eAAe40B,GAAgBC,GAC3B,IAAKA,EACD,OACAjO,IACAA,EAAsBkO,UACtBlO,EAAwB,MAE5B,IAAI3f,EAAa4tB,EAAax2B,SAC9B,IAAK4I,EACD,OAEJ,IACI8tB,EAA0BT,GAAmBrtB,EAFlC7J,EAAOkK,UAAUC,iBAAiB,eACf5hB,IAAI,0BAEtC,IAAKovC,EACD,OACJ,IAAI1H,QAAYjwB,EAAO8uB,UAAUC,wBAAwBllB,EAAY8tB,GACrE/J,EAASqC,GAAK,GACdtD,EAA2BsD,GAiB/B,SAAS2H,GAAqBC,GAC1B,IAAIhuB,EAAayiB,EAAeuL,GAChCjK,EAAS/jB,GAAY,GACrB8iB,EAA2B9iB,GAI/BjH,eAAek1B,GAAgBjuB,SAvE/BjH,eAAsCiH,GAClC,IAAKA,EACD,OACJ,MAAMI,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAKF,IAAWA,EAAO1hB,IAAI,kCACvB,OACJ,IAAI4uC,EAAuBltB,EAAO1hB,IAAI,yBACtC,IAAIkoC,EAAuB5mB,EAAWgjB,WAClCzsB,EAAYyJ,EAAWgiB,SAC3B,IAAKzrB,GAAasoB,EAAuBzN,IAAI7a,GACzC,OAEJ,IAAI23B,EAAiB33B,EAAUwsB,SAAS,SAAmC,OAAxB6D,EACnD,GAA4B,aAAxBA,IAAwCsH,EACxC,OACJ,IAAIJ,EAA0BT,GAAmBrtB,EAAYstB,GAK7D,IAJKQ,GAA2BI,IAE5BJ,EA1CR,SAA4C9tB,EAAYstB,GACpD,IAAIC,EAAe,MACfY,EAAyB,EACzBxI,EAAO3lB,EAAWmpB,UACtB,IAAKxD,EACD,OAAO4H,EACX,IAAK,IAAIhxC,EAAI,EAAGA,EAAI+wC,EAAqB5xC,OAAQa,IAAK,CAClD,GAA+B,KAA3B+wC,EAAqB/wC,IAAwC,KAA3B+wC,EAAqB/wC,GACvD,SACJ,IAAIkxC,EAAanN,EAA6BgN,EAAqB/wC,IAC/D6xC,EAAY,EAChB,IAAK,IAAIC,EAAI,EAAGA,EAAI,KAASA,EAAI1I,EAAKjqC,OAAQ2yC,IACtC1I,EAAK0I,IAAMf,EAAqB/wC,KAChC6xC,GAAa,GAEjBA,EAAYD,IACZZ,EAAeE,EACfU,EAAyBC,GAGjC,OAAOb,EAsBuBe,CAAmCtuB,EAAYstB,KAExEQ,GAA2BA,GAA2BlH,EACvD,OAEJ,IAAIR,QAAYjwB,EAAO8uB,UAAUC,wBAAwBllB,EAAY8tB,GACrEhP,EAAsBtsB,IAAI+D,EAAWqwB,GACrC7C,EAASqC,GAAK,GACdtD,EAA2BsD,GA8CrBmI,CAAuBvuB,GArBjC,SAAiCA,GAC7B,MAAMI,EAASjK,EAAOkK,UAAUC,iBAAiB,eAC5CF,GAAWA,EAAO1hB,IAAI,mCAEtBshB,IAAc2f,IAEd3f,EAAWwuB,YAAsC,GAAxBxuB,EAAWzI,aAEzCooB,EAAwBxpB,EAAOkK,UAAUouB,wBAAwBd,KAcjEe,CAAwB1uB,GACxB+jB,EAAS/jB,GAAY,GACrB8iB,EAA2B9iB,GAkB/BjH,eAAe41B,GAAa/C,EAAKgD,GAC7B,GAAIrQ,EAEA,YADAyB,EAAuB,sDAG3B,IAAIzpB,EAAYq1B,EAAIiD,OACpB,IAAKt4B,IAAcR,EAAGiB,WAAWT,GAE7B,YADAJ,EAAOgoB,OAAOgC,iBAAiB,gBAInC,IAAI2O,EAAa,OACbC,EAAqBh5B,EAAGi5B,SAASz4B,GAAiB,KACtD,GAAIw4B,GAAsBD,EAAY,CAClC34B,EAAOgoB,OAAOgH,mBAAmB,sHACjC,IAAI8J,QAAsB94B,EAAOkK,UAAUgmB,iBAAiB9vB,GAE5D,kBADMJ,EAAOgoB,OAAO6G,iBAAiBiK,GAIzC,IAAIC,EAAgBl5B,EAAKmH,SAAS5G,GAClC,MAAM44B,EAAWn5B,EAAKpY,KAAKkY,EAAG20B,SAAU,mBAAmBmE,KAAgBM,KAE3En5B,EAAGq5B,KAAK74B,EAAW,KAAK,CAACnB,EAAKi6B,KAC1B,GAAIj6B,EAGA,OAFAnG,QAAQmF,IAAIgB,EAAImF,cAChBpE,EAAOgoB,OAAOgC,iBAAiB,0BAInC,IAAImP,EAAS/S,OAAOgT,MAAMT,GAC1B,IAAIU,EAAiC,QAAhBZ,EAAyB,EAAIrxC,KAAKC,IAAIuxC,EAAqBD,EAAY,GAC5F/4B,EAAG05B,KAAKJ,EAAIC,EAAQ,EAAGR,EAAYU,GAAgB,SAASp6B,EAAKs6B,GAC7D,GAAIt6B,EAGA,OAFAnG,QAAQmF,IAAIgB,EAAImF,cAChBpE,EAAOgoB,OAAOgC,iBAAiB,0BAInC,MAAMwP,EAAaL,EAAOrzC,WAE1B,IAAIi9B,EAAU,KAEVA,EADgB,QAAhB0V,EACUe,EAAWh9B,OAAO,EAAGg9B,EAAWC,YAAYD,EAAWE,SAAS,QAAU,OAAS,OAEnFF,EAAWh9B,OAAOg9B,EAAWr+B,QAAQ,MAAQ,GAE3DyE,EAAGy1B,cAAc2D,EAAUjW,GAC3B/iB,EAAOkK,UAAUgmB,iBAAiB8I,GAAUxjC,MAAKy6B,GAAOjwB,EAAOgoB,OAAO6G,iBAAiBoB,WAMnG,SAAS0J,GAAiCtP,EAAauP,GACnD,IAAIC,EAAiB75B,EAAO8uB,UAAUgL,sBAAsBzP,EAAa,CACrE0P,aAAY,CAAC94B,EAAUqwB,EAAU0I,IA/qCzC,SAAoB/4B,EAAUqwB,EAAUjH,EAAa4P,GAC7C/Q,GAAsBjoB,GACtB0rB,EAA2B1rB,GAE/B,MAAMgJ,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,GAAKF,GAEAA,EAAO1hB,IAAI,kBAAhB,CAIA,IAAI2xC,EApDR,SAAyBj5B,EAAUqwB,EAAUjH,EAAa8P,EAA6BC,GACnF,IAAKv4B,EAAOC,GAAU6nB,EAAYU,GAClC,IAAIhpB,EAAOiwB,EAAS/0B,KAChBi1B,EAAOF,EAASZ,UAChBn0B,EAAO0E,EAASM,OAAOF,GAAMG,KAEjC,MAAMyI,EAASjK,EAAOkK,UAAUC,iBAAiB,eACjD,IAAIjJ,EAAiB+I,EAASA,EAAO1hB,IAAI,kBAAoB,GAC7D,GAAI2Y,GAAkB3E,EAAKkF,WAAWP,GAClC,MAAO,UAEX,IAAI8uB,EAAS/vB,EAAU0C,YAAYpG,EAAMsF,EAAOC,GAAQ,GAEpDgC,EAAUksB,EAAO,GACjBtsB,EAAUssB,EAAO,GACjB9D,EAAUF,EAA2BloB,EAAS0tB,EAAO,GAEzD,GAAe,MAAXtF,EACA,OAAO,KACX,IAAIjlC,EAAS,SAAWilC,EAAU,GAE9B1mB,EAASqc,EAAW5gB,EAAUY,EAAOC,GACzC,GAAIq4B,GAA+BjO,EAAU1mB,EAAOjgB,OAAQ,CACxD,MAAM80C,EAAgB,GACtB,IAAIC,EAAe90B,EAAO0mB,GAAS7hB,OACnC,IAAIkwB,EAAqBD,EAAa99B,OAAO,EAAG69B,GAC5CE,GAAsBD,IACtBC,GAA0C,OAC9CtzC,GAAU,cAAgBszC,EAAqB,IASnD,OAPIH,IACI12B,EACAzc,GAAU,4CACHue,EAAOjgB,QAAUue,EAAQve,SAChC0B,GAAU,+CAA+Cue,EAAOjgB,sBAAsBue,EAAQve,WAG/F0B,EAeUuzC,CAAgBv5B,EAAUqwB,EAAUjH,EAFnBpgB,EAAO1hB,IAAI,+BACf0hB,EAAO1hB,IAAI,4BAEzC,GAAI2xC,IAAeD,EAAmBQ,wBAAyB,CAC3D,IAAIC,EAAM,KACV,IACIA,EAAM,IAAI16B,EAAO26B,eACjBD,EAAIE,gBAAgBV,EAAY,wBAClC,MAAOj1C,GACLy1C,EAAMR,EAEV,OAAO,IAAIl6B,EAAO66B,MAAMH,GAExB,OAAO,MA0pCII,CAAW75B,EAAUqwB,EAAUjH,EAAa2P,KAG3DJ,EAAQmB,cAAcxzC,KAAKsyC,GAkF/Bz1C,EAAQ42C,SA9ERp4B,eAAwBg3B,GAGpB,GAFAtQ,EAAesQ,EAAQqB,YAEnB7S,EAAY,CACZ,IAAI8S,EAAkBl7B,EAAOw2B,IAAI2E,SAASvB,EAAQwB,aAAc,oBAC5DC,QAAcr7B,EAAOkK,UAAUtK,GAAG6mB,SAASyU,GAE/C3S,GAA2B,IAAI3E,aAAcoC,OAAOqV,GAGxD,IAAK,IAAIhF,KAAczM,EACfA,EAAkB/jC,eAAewwC,KAE7BzM,EAAkByM,GADlBjO,EACgCpoB,EAAOw2B,IAAI2E,SAASvB,EAAQwB,aAAc/E,GAE1CuD,EAAQ0B,eAAejF,IAKnE,IAAK,IAAIhM,KAAeV,EAChBA,EAAY9jC,eAAewkC,IAC3BsP,GAAiCtP,EAAauP,GAItD,IAAI2B,EAAWv7B,EAAOw7B,SAASC,gBAAgB,sBAAuBvN,GAClEwN,EAAW17B,EAAOw7B,SAASC,gBAAgB,mBAAoBlG,IAC/DoG,EAAsB37B,EAAOw7B,SAASC,gBAAgB,4BAA6BpL,IACnFuL,EAAwB57B,EAAOw7B,SAASC,gBAAgB,+BAAgC1K,IACxF8K,EAA0B77B,EAAOw7B,SAASC,gBAAgB,+BAAgC5K,IAC1FiL,EAAyB97B,EAAOw7B,SAASC,gBAAgB,gCAAgC74B,uBAAyBwuB,GAAY,gBAC9H2K,EAAwB/7B,EAAOw7B,SAASC,gBAAgB,+BAA+B74B,uBAAyBwuB,GAAY,eAC5H4K,EAAyBh8B,EAAOw7B,SAASC,gBAAgB,gCAAgC74B,uBAAyBwuB,GAAY,gBAC9H6K,EAAoBj8B,EAAOw7B,SAASC,gBAAgB,+BAAgCjL,IACpF0L,EAAkBl8B,EAAOw7B,SAASC,gBAAgB,kCAAmC9K,IACrFwL,EAAkBn8B,EAAOw7B,SAASC,gBAAgB,0BAA0B74B,eAAe6yB,SAAa+C,GAAa/C,EAAK,WAC1H2G,EAAkBp8B,EAAOw7B,SAASC,gBAAgB,0BAA0B74B,eAAe6yB,SAAa+C,GAAa/C,EAAK,WAC1H4G,EAAYr8B,EAAOw7B,SAASc,0BAA0B,oBAAqB7J,IAC3E8J,EAAav8B,EAAOw7B,SAASc,0BAA0B,qBAAsBrK,IAC7EuK,EAAgBx8B,EAAOw7B,SAASC,gBAAgB,uBAAwB9I,IACxE8J,EAAoBz8B,EAAOw7B,SAASC,gBAAgB,2BAA4BtN,IAEhFuO,EAAiB18B,EAAOkK,UAAUyyB,sBAAsB7E,IACxD8E,EAAe58B,EAAOgoB,OAAO6U,4BAA4BjF,IAE7DgC,EAAQmB,cAAcxzC,KAAKg0C,GAC3B3B,EAAQmB,cAAcxzC,KAAKm0C,GAC3B9B,EAAQmB,cAAcxzC,KAAKq0C,GAC3BhC,EAAQmB,cAAcxzC,KAAKu0C,GAC3BlC,EAAQmB,cAAcxzC,KAAKw0C,GAC3BnC,EAAQmB,cAAcxzC,KAAKy0C,GAC3BpC,EAAQmB,cAAcxzC,KAAKm1C,GAC3B9C,EAAQmB,cAAcxzC,KAAKq1C,GAC3BhD,EAAQmB,cAAcxzC,KAAK00C,GAC3BrC,EAAQmB,cAAcxzC,KAAK20C,GAC3BtC,EAAQmB,cAAcxzC,KAAK40C,GAC3BvC,EAAQmB,cAAcxzC,KAAK60C,GAC3BxC,EAAQmB,cAAcxzC,KAAKs0C,GAC3BjC,EAAQmB,cAAcxzC,KAAK80C,GAC3BzC,EAAQmB,cAAcxzC,KAAKg1C,GAC3B3C,EAAQmB,cAAcxzC,KAAKi1C,GAC3B5C,EAAQmB,cAAcxzC,KAAKo0C,GAC3B/B,EAAQmB,cAAcxzC,KAAKk1C,SAIrBxS,EAAM,KAEZ6N,GADiBxL,MAWrBloC,EAAQ04C,WANR,c","sources":["webpack://rainbow-csv/./node_modules/call-bind/callBound.js","webpack://rainbow-csv/./node_modules/call-bind/index.js","webpack://rainbow-csv/./node_modules/foreach/index.js","webpack://rainbow-csv/./node_modules/function-bind/implementation.js","webpack://rainbow-csv/./node_modules/function-bind/index.js","webpack://rainbow-csv/./node_modules/get-intrinsic/index.js","webpack://rainbow-csv/./node_modules/has-symbols/index.js","webpack://rainbow-csv/./node_modules/has-symbols/shams.js","webpack://rainbow-csv/./node_modules/has-tostringtag/shams.js","webpack://rainbow-csv/./node_modules/has/src/index.js","webpack://rainbow-csv/./node_modules/inherits/inherits_browser.js","webpack://rainbow-csv/./node_modules/is-arguments/index.js","webpack://rainbow-csv/./node_modules/is-generator-function/index.js","webpack://rainbow-csv/./node_modules/is-typed-array/index.js","webpack://rainbow-csv/./node_modules/process/browser.js","webpack://rainbow-csv/./node_modules/util/support/isBufferBrowser.js","webpack://rainbow-csv/./node_modules/util/support/types.js","webpack://rainbow-csv/./node_modules/util/util.js","webpack://rainbow-csv/./node_modules/which-typed-array/index.js","webpack://rainbow-csv/./rainbow_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/csv_utils.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql.js","webpack://rainbow-csv/./rbql_core/rbql-js/rbql_csv.js","webpack://rainbow-csv/external commonjs \"vscode\"","webpack://rainbow-csv/./node_modules/available-typed-arrays/index.js","webpack://rainbow-csv/./node_modules/es-abstract/helpers/getOwnPropertyDescriptor.js","webpack://rainbow-csv/webpack/bootstrap","webpack://rainbow-csv/webpack/runtime/global","webpack://rainbow-csv/./extension.js"],"sourcesContent":["'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nvar $defineProperty = GetIntrinsic('%Object.defineProperty%', true);\nvar $max = GetIntrinsic('%Math.max%');\n\nif ($defineProperty) {\n\ttry {\n\t\t$defineProperty({}, 'a', { value: 1 });\n\t} catch (e) {\n\t\t// IE 8 has a broken defineProperty\n\t\t$defineProperty = null;\n\t}\n}\n\nmodule.exports = function callBind(originalFunction) {\n\tvar func = $reflectApply(bind, $call, arguments);\n\tif ($gOPD && $defineProperty) {\n\t\tvar desc = $gOPD(func, 'length');\n\t\tif (desc.configurable) {\n\t\t\t// original length, plus the receiver, minus any additional arguments (after the receiver)\n\t\t\t$defineProperty(\n\t\t\t\tfunc,\n\t\t\t\t'length',\n\t\t\t\t{ value: 1 + $max(0, originalFunction.length - (arguments.length - 1)) }\n\t\t\t);\n\t\t}\n\t}\n\treturn func;\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toString = Object.prototype.toString;\n\nmodule.exports = function forEach (obj, fn, ctx) {\n    if (toString.call(fn) !== '[object Function]') {\n        throw new TypeError('iterator must be a function');\n    }\n    var l = obj.length;\n    if (l === +l) {\n        for (var i = 0; i < l; i++) {\n            fn.call(ctx, obj[i], i, obj);\n        }\n    } else {\n        for (var k in obj) {\n            if (hasOwn.call(obj, k)) {\n                fn.call(ctx, obj[k], k, obj);\n            }\n        }\n    }\n};\n\n","'use strict';\n\n/* eslint no-invalid-this: 1 */\n\nvar ERROR_MESSAGE = 'Function.prototype.bind called on incompatible ';\nvar slice = Array.prototype.slice;\nvar toStr = Object.prototype.toString;\nvar funcType = '[object Function]';\n\nmodule.exports = function bind(that) {\n    var target = this;\n    if (typeof target !== 'function' || toStr.call(target) !== funcType) {\n        throw new TypeError(ERROR_MESSAGE + target);\n    }\n    var args = slice.call(arguments, 1);\n\n    var bound;\n    var binder = function () {\n        if (this instanceof bound) {\n            var result = target.apply(\n                this,\n                args.concat(slice.call(arguments))\n            );\n            if (Object(result) === result) {\n                return result;\n            }\n            return this;\n        } else {\n            return target.apply(\n                that,\n                args.concat(slice.call(arguments))\n            );\n        }\n    };\n\n    var boundLength = Math.max(0, target.length - args.length);\n    var boundArgs = [];\n    for (var i = 0; i < boundLength; i++) {\n        boundArgs.push('$' + i);\n    }\n\n    bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this,arguments); }')(binder);\n\n    if (target.prototype) {\n        var Empty = function Empty() {};\n        Empty.prototype = target.prototype;\n        bound.prototype = new Empty();\n        Empty.prototype = null;\n    }\n\n    return bound;\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = Function.prototype.bind || implementation;\n","'use strict';\n\nvar undefined;\n\nvar $SyntaxError = SyntaxError;\nvar $Function = Function;\nvar $TypeError = TypeError;\n\n// eslint-disable-next-line consistent-return\nvar getEvalledConstructor = function (expressionSyntax) {\n\ttry {\n\t\treturn $Function('\"use strict\"; return (' + expressionSyntax + ').constructor;')();\n\t} catch (e) {}\n};\n\nvar $gOPD = Object.getOwnPropertyDescriptor;\nif ($gOPD) {\n\ttry {\n\t\t$gOPD({}, '');\n\t} catch (e) {\n\t\t$gOPD = null; // this is IE 8, which has a broken gOPD\n\t}\n}\n\nvar throwTypeError = function () {\n\tthrow new $TypeError();\n};\nvar ThrowTypeError = $gOPD\n\t? (function () {\n\t\ttry {\n\t\t\t// eslint-disable-next-line no-unused-expressions, no-caller, no-restricted-properties\n\t\t\targuments.callee; // IE 8 does not throw here\n\t\t\treturn throwTypeError;\n\t\t} catch (calleeThrows) {\n\t\t\ttry {\n\t\t\t\t// IE 8 throws on Object.getOwnPropertyDescriptor(arguments, '')\n\t\t\t\treturn $gOPD(arguments, 'callee').get;\n\t\t\t} catch (gOPDthrows) {\n\t\t\t\treturn throwTypeError;\n\t\t\t}\n\t\t}\n\t}())\n\t: throwTypeError;\n\nvar hasSymbols = require('has-symbols')();\n\nvar getProto = Object.getPrototypeOf || function (x) { return x.__proto__; }; // eslint-disable-line no-proto\n\nvar needsEval = {};\n\nvar TypedArray = typeof Uint8Array === 'undefined' ? undefined : getProto(Uint8Array);\n\nvar INTRINSICS = {\n\t'%AggregateError%': typeof AggregateError === 'undefined' ? undefined : AggregateError,\n\t'%Array%': Array,\n\t'%ArrayBuffer%': typeof ArrayBuffer === 'undefined' ? undefined : ArrayBuffer,\n\t'%ArrayIteratorPrototype%': hasSymbols ? getProto([][Symbol.iterator]()) : undefined,\n\t'%AsyncFromSyncIteratorPrototype%': undefined,\n\t'%AsyncFunction%': needsEval,\n\t'%AsyncGenerator%': needsEval,\n\t'%AsyncGeneratorFunction%': needsEval,\n\t'%AsyncIteratorPrototype%': needsEval,\n\t'%Atomics%': typeof Atomics === 'undefined' ? undefined : Atomics,\n\t'%BigInt%': typeof BigInt === 'undefined' ? undefined : BigInt,\n\t'%Boolean%': Boolean,\n\t'%DataView%': typeof DataView === 'undefined' ? undefined : DataView,\n\t'%Date%': Date,\n\t'%decodeURI%': decodeURI,\n\t'%decodeURIComponent%': decodeURIComponent,\n\t'%encodeURI%': encodeURI,\n\t'%encodeURIComponent%': encodeURIComponent,\n\t'%Error%': Error,\n\t'%eval%': eval, // eslint-disable-line no-eval\n\t'%EvalError%': EvalError,\n\t'%Float32Array%': typeof Float32Array === 'undefined' ? undefined : Float32Array,\n\t'%Float64Array%': typeof Float64Array === 'undefined' ? undefined : Float64Array,\n\t'%FinalizationRegistry%': typeof FinalizationRegistry === 'undefined' ? undefined : FinalizationRegistry,\n\t'%Function%': $Function,\n\t'%GeneratorFunction%': needsEval,\n\t'%Int8Array%': typeof Int8Array === 'undefined' ? undefined : Int8Array,\n\t'%Int16Array%': typeof Int16Array === 'undefined' ? undefined : Int16Array,\n\t'%Int32Array%': typeof Int32Array === 'undefined' ? undefined : Int32Array,\n\t'%isFinite%': isFinite,\n\t'%isNaN%': isNaN,\n\t'%IteratorPrototype%': hasSymbols ? getProto(getProto([][Symbol.iterator]())) : undefined,\n\t'%JSON%': typeof JSON === 'object' ? JSON : undefined,\n\t'%Map%': typeof Map === 'undefined' ? undefined : Map,\n\t'%MapIteratorPrototype%': typeof Map === 'undefined' || !hasSymbols ? undefined : getProto(new Map()[Symbol.iterator]()),\n\t'%Math%': Math,\n\t'%Number%': Number,\n\t'%Object%': Object,\n\t'%parseFloat%': parseFloat,\n\t'%parseInt%': parseInt,\n\t'%Promise%': typeof Promise === 'undefined' ? undefined : Promise,\n\t'%Proxy%': typeof Proxy === 'undefined' ? undefined : Proxy,\n\t'%RangeError%': RangeError,\n\t'%ReferenceError%': ReferenceError,\n\t'%Reflect%': typeof Reflect === 'undefined' ? undefined : Reflect,\n\t'%RegExp%': RegExp,\n\t'%Set%': typeof Set === 'undefined' ? undefined : Set,\n\t'%SetIteratorPrototype%': typeof Set === 'undefined' || !hasSymbols ? undefined : getProto(new Set()[Symbol.iterator]()),\n\t'%SharedArrayBuffer%': typeof SharedArrayBuffer === 'undefined' ? undefined : SharedArrayBuffer,\n\t'%String%': String,\n\t'%StringIteratorPrototype%': hasSymbols ? getProto(''[Symbol.iterator]()) : undefined,\n\t'%Symbol%': hasSymbols ? Symbol : undefined,\n\t'%SyntaxError%': $SyntaxError,\n\t'%ThrowTypeError%': ThrowTypeError,\n\t'%TypedArray%': TypedArray,\n\t'%TypeError%': $TypeError,\n\t'%Uint8Array%': typeof Uint8Array === 'undefined' ? undefined : Uint8Array,\n\t'%Uint8ClampedArray%': typeof Uint8ClampedArray === 'undefined' ? undefined : Uint8ClampedArray,\n\t'%Uint16Array%': typeof Uint16Array === 'undefined' ? undefined : Uint16Array,\n\t'%Uint32Array%': typeof Uint32Array === 'undefined' ? undefined : Uint32Array,\n\t'%URIError%': URIError,\n\t'%WeakMap%': typeof WeakMap === 'undefined' ? undefined : WeakMap,\n\t'%WeakRef%': typeof WeakRef === 'undefined' ? undefined : WeakRef,\n\t'%WeakSet%': typeof WeakSet === 'undefined' ? undefined : WeakSet\n};\n\nvar doEval = function doEval(name) {\n\tvar value;\n\tif (name === '%AsyncFunction%') {\n\t\tvalue = getEvalledConstructor('async function () {}');\n\t} else if (name === '%GeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('function* () {}');\n\t} else if (name === '%AsyncGeneratorFunction%') {\n\t\tvalue = getEvalledConstructor('async function* () {}');\n\t} else if (name === '%AsyncGenerator%') {\n\t\tvar fn = doEval('%AsyncGeneratorFunction%');\n\t\tif (fn) {\n\t\t\tvalue = fn.prototype;\n\t\t}\n\t} else if (name === '%AsyncIteratorPrototype%') {\n\t\tvar gen = doEval('%AsyncGenerator%');\n\t\tif (gen) {\n\t\t\tvalue = getProto(gen.prototype);\n\t\t}\n\t}\n\n\tINTRINSICS[name] = value;\n\n\treturn value;\n};\n\nvar LEGACY_ALIASES = {\n\t'%ArrayBufferPrototype%': ['ArrayBuffer', 'prototype'],\n\t'%ArrayPrototype%': ['Array', 'prototype'],\n\t'%ArrayProto_entries%': ['Array', 'prototype', 'entries'],\n\t'%ArrayProto_forEach%': ['Array', 'prototype', 'forEach'],\n\t'%ArrayProto_keys%': ['Array', 'prototype', 'keys'],\n\t'%ArrayProto_values%': ['Array', 'prototype', 'values'],\n\t'%AsyncFunctionPrototype%': ['AsyncFunction', 'prototype'],\n\t'%AsyncGenerator%': ['AsyncGeneratorFunction', 'prototype'],\n\t'%AsyncGeneratorPrototype%': ['AsyncGeneratorFunction', 'prototype', 'prototype'],\n\t'%BooleanPrototype%': ['Boolean', 'prototype'],\n\t'%DataViewPrototype%': ['DataView', 'prototype'],\n\t'%DatePrototype%': ['Date', 'prototype'],\n\t'%ErrorPrototype%': ['Error', 'prototype'],\n\t'%EvalErrorPrototype%': ['EvalError', 'prototype'],\n\t'%Float32ArrayPrototype%': ['Float32Array', 'prototype'],\n\t'%Float64ArrayPrototype%': ['Float64Array', 'prototype'],\n\t'%FunctionPrototype%': ['Function', 'prototype'],\n\t'%Generator%': ['GeneratorFunction', 'prototype'],\n\t'%GeneratorPrototype%': ['GeneratorFunction', 'prototype', 'prototype'],\n\t'%Int8ArrayPrototype%': ['Int8Array', 'prototype'],\n\t'%Int16ArrayPrototype%': ['Int16Array', 'prototype'],\n\t'%Int32ArrayPrototype%': ['Int32Array', 'prototype'],\n\t'%JSONParse%': ['JSON', 'parse'],\n\t'%JSONStringify%': ['JSON', 'stringify'],\n\t'%MapPrototype%': ['Map', 'prototype'],\n\t'%NumberPrototype%': ['Number', 'prototype'],\n\t'%ObjectPrototype%': ['Object', 'prototype'],\n\t'%ObjProto_toString%': ['Object', 'prototype', 'toString'],\n\t'%ObjProto_valueOf%': ['Object', 'prototype', 'valueOf'],\n\t'%PromisePrototype%': ['Promise', 'prototype'],\n\t'%PromiseProto_then%': ['Promise', 'prototype', 'then'],\n\t'%Promise_all%': ['Promise', 'all'],\n\t'%Promise_reject%': ['Promise', 'reject'],\n\t'%Promise_resolve%': ['Promise', 'resolve'],\n\t'%RangeErrorPrototype%': ['RangeError', 'prototype'],\n\t'%ReferenceErrorPrototype%': ['ReferenceError', 'prototype'],\n\t'%RegExpPrototype%': ['RegExp', 'prototype'],\n\t'%SetPrototype%': ['Set', 'prototype'],\n\t'%SharedArrayBufferPrototype%': ['SharedArrayBuffer', 'prototype'],\n\t'%StringPrototype%': ['String', 'prototype'],\n\t'%SymbolPrototype%': ['Symbol', 'prototype'],\n\t'%SyntaxErrorPrototype%': ['SyntaxError', 'prototype'],\n\t'%TypedArrayPrototype%': ['TypedArray', 'prototype'],\n\t'%TypeErrorPrototype%': ['TypeError', 'prototype'],\n\t'%Uint8ArrayPrototype%': ['Uint8Array', 'prototype'],\n\t'%Uint8ClampedArrayPrototype%': ['Uint8ClampedArray', 'prototype'],\n\t'%Uint16ArrayPrototype%': ['Uint16Array', 'prototype'],\n\t'%Uint32ArrayPrototype%': ['Uint32Array', 'prototype'],\n\t'%URIErrorPrototype%': ['URIError', 'prototype'],\n\t'%WeakMapPrototype%': ['WeakMap', 'prototype'],\n\t'%WeakSetPrototype%': ['WeakSet', 'prototype']\n};\n\nvar bind = require('function-bind');\nvar hasOwn = require('has');\nvar $concat = bind.call(Function.call, Array.prototype.concat);\nvar $spliceApply = bind.call(Function.apply, Array.prototype.splice);\nvar $replace = bind.call(Function.call, String.prototype.replace);\nvar $strSlice = bind.call(Function.call, String.prototype.slice);\n\n/* adapted from https://github.com/lodash/lodash/blob/4.17.15/dist/lodash.js#L6735-L6744 */\nvar rePropName = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g;\nvar reEscapeChar = /\\\\(\\\\)?/g; /** Used to match backslashes in property paths. */\nvar stringToPath = function stringToPath(string) {\n\tvar first = $strSlice(string, 0, 1);\n\tvar last = $strSlice(string, -1);\n\tif (first === '%' && last !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected closing `%`');\n\t} else if (last === '%' && first !== '%') {\n\t\tthrow new $SyntaxError('invalid intrinsic syntax, expected opening `%`');\n\t}\n\tvar result = [];\n\t$replace(string, rePropName, function (match, number, quote, subString) {\n\t\tresult[result.length] = quote ? $replace(subString, reEscapeChar, '$1') : number || match;\n\t});\n\treturn result;\n};\n/* end adaptation */\n\nvar getBaseIntrinsic = function getBaseIntrinsic(name, allowMissing) {\n\tvar intrinsicName = name;\n\tvar alias;\n\tif (hasOwn(LEGACY_ALIASES, intrinsicName)) {\n\t\talias = LEGACY_ALIASES[intrinsicName];\n\t\tintrinsicName = '%' + alias[0] + '%';\n\t}\n\n\tif (hasOwn(INTRINSICS, intrinsicName)) {\n\t\tvar value = INTRINSICS[intrinsicName];\n\t\tif (value === needsEval) {\n\t\t\tvalue = doEval(intrinsicName);\n\t\t}\n\t\tif (typeof value === 'undefined' && !allowMissing) {\n\t\t\tthrow new $TypeError('intrinsic ' + name + ' exists, but is not available. Please file an issue!');\n\t\t}\n\n\t\treturn {\n\t\t\talias: alias,\n\t\t\tname: intrinsicName,\n\t\t\tvalue: value\n\t\t};\n\t}\n\n\tthrow new $SyntaxError('intrinsic ' + name + ' does not exist!');\n};\n\nmodule.exports = function GetIntrinsic(name, allowMissing) {\n\tif (typeof name !== 'string' || name.length === 0) {\n\t\tthrow new $TypeError('intrinsic name must be a non-empty string');\n\t}\n\tif (arguments.length > 1 && typeof allowMissing !== 'boolean') {\n\t\tthrow new $TypeError('\"allowMissing\" argument must be a boolean');\n\t}\n\n\tvar parts = stringToPath(name);\n\tvar intrinsicBaseName = parts.length > 0 ? parts[0] : '';\n\n\tvar intrinsic = getBaseIntrinsic('%' + intrinsicBaseName + '%', allowMissing);\n\tvar intrinsicRealName = intrinsic.name;\n\tvar value = intrinsic.value;\n\tvar skipFurtherCaching = false;\n\n\tvar alias = intrinsic.alias;\n\tif (alias) {\n\t\tintrinsicBaseName = alias[0];\n\t\t$spliceApply(parts, $concat([0, 1], alias));\n\t}\n\n\tfor (var i = 1, isOwn = true; i < parts.length; i += 1) {\n\t\tvar part = parts[i];\n\t\tvar first = $strSlice(part, 0, 1);\n\t\tvar last = $strSlice(part, -1);\n\t\tif (\n\t\t\t(\n\t\t\t\t(first === '\"' || first === \"'\" || first === '`')\n\t\t\t\t|| (last === '\"' || last === \"'\" || last === '`')\n\t\t\t)\n\t\t\t&& first !== last\n\t\t) {\n\t\t\tthrow new $SyntaxError('property names with quotes must have matching quotes');\n\t\t}\n\t\tif (part === 'constructor' || !isOwn) {\n\t\t\tskipFurtherCaching = true;\n\t\t}\n\n\t\tintrinsicBaseName += '.' + part;\n\t\tintrinsicRealName = '%' + intrinsicBaseName + '%';\n\n\t\tif (hasOwn(INTRINSICS, intrinsicRealName)) {\n\t\t\tvalue = INTRINSICS[intrinsicRealName];\n\t\t} else if (value != null) {\n\t\t\tif (!(part in value)) {\n\t\t\t\tif (!allowMissing) {\n\t\t\t\t\tthrow new $TypeError('base intrinsic for ' + name + ' exists, but the property is not available.');\n\t\t\t\t}\n\t\t\t\treturn void undefined;\n\t\t\t}\n\t\t\tif ($gOPD && (i + 1) >= parts.length) {\n\t\t\t\tvar desc = $gOPD(value, part);\n\t\t\t\tisOwn = !!desc;\n\n\t\t\t\t// By convention, when a data property is converted to an accessor\n\t\t\t\t// property to emulate a data property that does not suffer from\n\t\t\t\t// the override mistake, that accessor's getter is marked with\n\t\t\t\t// an `originalValue` property. Here, when we detect this, we\n\t\t\t\t// uphold the illusion by pretending to see that original data\n\t\t\t\t// property, i.e., returning the value rather than the getter\n\t\t\t\t// itself.\n\t\t\t\tif (isOwn && 'get' in desc && !('originalValue' in desc.get)) {\n\t\t\t\t\tvalue = desc.get;\n\t\t\t\t} else {\n\t\t\t\t\tvalue = value[part];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tisOwn = hasOwn(value, part);\n\t\t\t\tvalue = value[part];\n\t\t\t}\n\n\t\t\tif (isOwn && !skipFurtherCaching) {\n\t\t\t\tINTRINSICS[intrinsicRealName] = value;\n\t\t\t}\n\t\t}\n\t}\n\treturn value;\n};\n","'use strict';\n\nvar origSymbol = typeof Symbol !== 'undefined' && Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","'use strict';\n\n/* eslint complexity: [2, 18], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax, no-unreachable-loop\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar bind = require('function-bind');\n\nmodule.exports = bind.call(Function.call, Object.prototype.hasOwnProperty);\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar anyTrue = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!anyTrue) {\n\t\t\ttry {\n\t\t\t\tanyTrue = getter.call(value) === typedArray;\n\t\t\t} catch (e) { /**/ }\n\t\t}\n\t});\n\treturn anyTrue;\n};\n\nmodule.exports = function isTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) {\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\treturn $indexOf(typedArrays, tag) > -1;\n\t}\n\tif (!gOPD) { return false; }\n\treturn tryTypedArrays(value);\n};\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n","const os = require('os');\nconst fs = require('fs');\nconst path = require('path');\nconst rbql = require('./rbql_core/rbql-js/rbql.js');\nconst rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\n\nconst vscode = require('vscode');\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\n\nclass AssertionError extends Error {}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction get_default_js_udf_content() {\n    let default_content = `// This file can be used to store RBQL UDFs. Example:\n    //\n    // function foo(value) {\n    //     return 'foo ' + String(value.length);\n    // }\n    // \n    // Functions defined in this file can be used in RBQL queries e.g. \n    // SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    //\n    // Don't forget to save this file after editing!\n    //\n    // Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction get_default_python_udf_content() {\n    let default_content = `# This file can be used to store RBQL UDFs. Example:\n    #\n    # def foo(value):\n    #     return 'foo ' + str(len(value))\n    # \n    # \n    # Functions defined in this file can be used in RBQL queries e.g. \n    # SELECT foo(a1), a2 WHERE foo(a3) != 'foo 5' LIMIT 10\n    #\n    # Don't forget to save this file after editing!\n    #\n    # Write your own functions bellow this line:\n    `.replace(new RegExp(/^  */, 'mg'), '');\n    return default_content;\n}\n\n\nfunction calc_column_sizes(active_doc, delim, policy) {\n    let result = [];\n    let num_lines = active_doc.lineCount;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix = config ? config.get('comment_prefix') : '';\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let i = 0; i < fields.length; i++) {\n            if (result.length <= i)\n                result.push(0);\n            result[i] = Math.max(result[i], (fields[i].trim()).length);\n        }\n    }\n    return [result, null];\n}\n\n\nfunction align_columns(active_doc, delim, policy, column_sizes) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix = config ? config.get('comment_prefix') : '';\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        let fields = csv_utils.smart_split(line_text, delim, policy, true)[0];\n        for (let i = 0; i < fields.length - 1; i++) {\n            if (i >= column_sizes.length) // Safeguard against async doc edit.\n                break;\n            let adjusted = fields[i].trim();\n            let delta_len = column_sizes[i] - adjusted.length;\n            if (delta_len >= 0) { // Safeguard against async doc edit.\n                adjusted += ' '.repeat(delta_len + 1);\n            }\n            if (fields[i] != adjusted) {\n                fields[i] = adjusted;\n                has_edit = true;\n            }\n        }\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return null;\n    return result_lines.join('\\n');\n}\n\n\nfunction shrink_columns(active_doc, delim, policy) {\n    let result_lines = [];\n    let num_lines = active_doc.lineCount;\n    let has_edit = false;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix = config ? config.get('comment_prefix') : '';\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (comment_prefix && line_text.startsWith(comment_prefix)) {\n            result_lines.push(line_text);\n            continue;\n        }\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning) {\n            return [null, lnum + 1];\n        }\n        for (let i = 0; i < fields.length; i++) {\n            let adjusted = fields[i].trim();\n            if (fields[i].length != adjusted.length) {\n                fields[i] = adjusted;\n                has_edit = true;\n            }\n        }\n        result_lines.push(fields.join(delim));\n    }\n    if (!has_edit)\n        return [null, null];\n    return [result_lines.join('\\n'), null];\n}\n\n\nfunction get_last(arr) {\n    return arr[arr.length - 1];\n}\n\n\nfunction populate_optimistic_rfc_csv_record_map(document, requested_end_record, dst_record_map, comment_prefix=null) {\n    let num_lines = document.lineCount;\n    let record_begin = null;\n    let start_line_idx = dst_record_map.length ? get_last(dst_record_map)[1] : 0;\n    for (let lnum = start_line_idx; lnum < num_lines && dst_record_map.length < requested_end_record; ++lnum) {\n        let line_text = document.lineAt(lnum).text;\n        if (lnum + 1 >= num_lines && line_text == \"\")\n            break; // Skip the last empty line.\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let match_list = line_text.match(/\"/g);\n        let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n        if (record_begin === null && !has_unbalanced_double_quote) {\n            dst_record_map.push([lnum, lnum + 1]);\n        } else if (record_begin === null && has_unbalanced_double_quote) {\n            record_begin = lnum;\n        } else if (!has_unbalanced_double_quote) {\n            continue;\n        } else {\n            dst_record_map.push([record_begin, lnum + 1]);\n            record_begin = null;\n        }\n    }\n    if (record_begin !== null) {\n        dst_record_map.push([record_begin, num_lines]);\n    }\n}\n\n\nfunction make_table_name_key(file_path) {\n    return 'rbql_table_name:' + file_path;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction find_table_path(vscode_global_state, main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_path = vscode_global_state ? vscode_global_state.get(make_table_name_key(table_id)) : null;\n    if (table_path && fs.existsSync(table_path)) {\n        return table_path;\n    }\n    return null;\n}\n\n\nasync function read_header(table_path, encoding) {\n    if (encoding == 'latin-1')\n        encoding = 'binary';\n    let readline = require('readline');\n    let input_reader = readline.createInterface({ input: fs.createReadStream(table_path, {encoding: encoding}) });\n    let closed = false;\n    let promise_resolve = null;\n    let promise_reject = null;\n    let output_promise = new Promise(function(resolve, reject) {\n        promise_resolve = resolve;\n        promise_reject = reject;\n    });\n    input_reader.on('line', line => {\n        if (!closed) {\n            closed = true;\n            input_reader.close();\n            promise_resolve(line);\n        }\n    });\n    input_reader.on('error', error => {\n        promise_reject(error);\n    });\n    return output_promise;\n}\n\n\nfunction get_header_line(document, comment_prefix) {\n    const num_lines = document.lineCount;\n    for (let lnum = 0; lnum < num_lines; ++lnum) {\n        const line_text = document.lineAt(lnum).text;\n        if (!comment_prefix || !line_text.startsWith(comment_prefix)) {\n            return line_text;\n        }\n    }\n    return null;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\n\nclass RbqlIOHandlingError extends Error {}\n\nclass VSCodeRecordIterator extends rbql.RBQLInputIterator {\n    constructor(document, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        // We could have done a hack here actually: convert the document to stream/buffer and then use the standard reader.\n        super();\n        this.document = document;\n        this.delim = delim;\n        this.policy = policy;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.NR = 0; // Record number.\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields).\n        this.fields_info = new Object();\n        this.first_defective_line = null;\n        this.first_record = this.get_first_record();\n    }\n\n    stop() {\n    }\n\n    get_first_record() {\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        return first_record;\n    }\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n        let header_line = get_header_line(this.document, this.comment_prefix);\n        let first_record = csv_utils.smart_split(header_line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n        if (this.has_header) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, first_record, variable_map);\n        }\n        return variable_map;\n    }\n\n    async get_header() {\n        return this.has_header ? this.first_record : null;\n    }\n\n    get_line_rfc() {\n        let rfc_line_buffer = [];\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            let record_line = csv_utils.accumulate_rfc_line_into_record(rfc_line_buffer, line, this.comment_prefix);\n            if (record_line !== null)\n                return record_line;\n        }\n        return null;\n    }\n\n    get_line_simple() {\n        const num_lines = this.document.lineCount;\n        while (this.NL < num_lines) {\n            let line = this.document.lineAt(this.NL).text;\n            this.NL += 1;\n            if (this.NL == num_lines && line.length == 0)\n                return null; // Skip the last line if it is empty - this can happen due to trailing newline.\n            if (this.comment_prefix === null || !line.startsWith(this.comment_prefix))\n                return line;\n        }\n        return null;\n    }\n\n    do_get_record() {\n        let line = (this.policy == 'quoted_rfc') ? this.get_line_rfc() : this.get_line_simple();\n        if (line === null)\n            return null;\n        let [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, /*preserve_quotes_and_whitespaces=*/false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    throw new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`);\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        return record;\n    }\n\n    async get_record() {\n        if (this.NR == 0 && this.has_header) {\n            this.do_get_record(); // Skip the header record.\n        }\n        this.NR += 1;\n        let record = this.do_get_record();\n        return record;\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    }\n}\n\n\nclass VSCodeWriter extends rbql.RBQLOutputWriter {\n    constructor(delim, policy) {\n        super();\n        this.delim = delim;\n        this.policy = policy;\n        this.header_len = null;\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.output_lines = [];\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.output_lines.push(this.polymorphic_join(fields));\n        return true;\n    };\n\n    async finish() {\n    }\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n}\n\nclass VSCodeTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(_table_id) {\n        throw new RbqlIOHandlingError(\"JOIN queries are currently not supported in vscode.dev web version.\");\n    }\n\n    get_warnings() {\n        return [];\n    };\n}\n\nasync function rbql_query_web(query_text, input_document, input_delim, input_policy, output_delim, output_policy, output_warnings, with_headers, comment_prefix=null) {\n    let user_init_code = ''; // TODO find a way to have init code.\n    let join_tables_registry = new VSCodeTableRegistry(); // TODO find a way to have join registry.\n    let input_iterator = new VSCodeRecordIterator(input_document, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new VSCodeWriter(output_delim, output_policy);\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    return output_writer.output_lines;\n}\n\n\nclass VSCodeFileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(vscode_global_state, input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.vscode_global_state = vscode_global_state;\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.vscode_global_state, this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new rbql_csv.CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function rbql_query_node(vscode_global_state, query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!rbql_csv.is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!rbql_csv.is_ascii(input_delim) || !rbql_csv.is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = rbql_csv.read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new VSCodeFileSystemCSVRegistry(vscode_global_state, input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new rbql_csv.CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new rbql_csv.CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.make_table_name_key = make_table_name_key;\nmodule.exports.find_table_path = find_table_path;\nmodule.exports.read_header = read_header;\nmodule.exports.rbql_query_web = rbql_query_web;\nmodule.exports.rbql_query_node = rbql_query_node;\nmodule.exports.get_header_line = get_header_line;\nmodule.exports.populate_optimistic_rfc_csv_record_map = populate_optimistic_rfc_csv_record_map;\nmodule.exports.get_default_js_udf_content = get_default_js_udf_content;\nmodule.exports.get_default_python_udf_content = get_default_python_udf_content;\nmodule.exports.align_columns = align_columns;\nmodule.exports.shrink_columns = shrink_columns;\nmodule.exports.calc_column_sizes = calc_column_sizes;\n","let field_regular_expression = '\"((?:[^\"]*\"\")*[^\"]*)\"';\nlet field_rgx = new RegExp('^' + field_regular_expression);\nlet field_rgx_external_whitespaces = new RegExp('^ *' + field_regular_expression + ' *');\n\n\n// TODO consider making this file (and rbql.js) both node and browser compatible: https://caolan.org/posts/writing_for_node_and_the_browser.html\n\n\nfunction split_lines(text) {\n    return text.split(/\\r\\n|\\r|\\n/);\n}\n\n\nfunction extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result) {\n    var warning = false;\n    let src_cur = src.substring(cidx);\n    let rgx = allow_external_whitespaces ? field_rgx_external_whitespaces : field_rgx;\n    let match_obj = rgx.exec(src_cur);\n    if (match_obj !== null) {\n        let match_end = match_obj[0].length;\n        if (cidx + match_end == src.length || src[cidx + match_end] == dlm) {\n            if (preserve_quotes_and_whitespaces) {\n                result.push(match_obj[0]);\n            } else {\n                result.push(match_obj[1].replace(/\"\"/g, '\"'));\n            }\n            return [cidx + match_end + 1, false];\n        }\n        warning = true;\n    }\n    var uidx = src.indexOf(dlm, cidx);\n    if (uidx == -1)\n        uidx = src.length;\n    var field = src.substring(cidx, uidx);\n    warning = warning || field.indexOf('\"') != -1;\n    result.push(field);\n    return [uidx + 1, warning];\n}\n\n\nfunction split_quoted_str(src, dlm, preserve_quotes_and_whitespaces=false) {\n    // This function is newline-agnostic i.e. it can also split records with multiline fields.\n    if (src.indexOf('\"') == -1) // Optimization for most common case\n        return [src.split(dlm), false];\n    var result = [];\n    var cidx = 0;\n    var warning = false;\n    let allow_external_whitespaces = dlm != ' ';\n    while (cidx < src.length) {\n        var extraction_report = extract_next_field(src, dlm, preserve_quotes_and_whitespaces, allow_external_whitespaces, cidx, result);\n        cidx = extraction_report[0];\n        warning = warning || extraction_report[1];\n    }\n    if (src.charAt(src.length - 1) == dlm)\n        result.push('');\n    return [result, warning];\n}\n\n\nfunction quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction rfc_quote_field(src, delim) {\n    if (src.indexOf(delim) != -1 || src.indexOf('\"') != -1 || src.indexOf('\\n') != -1 || src.indexOf('\\r') != -1) {\n        var escaped = src.replace(/\"/g, '\"\"');\n        return `\"${escaped}\"`;\n    }\n    return src;\n}\n\n\nfunction unquote_field(field) {\n    let rgx = new RegExp('^' + ' *' + field_regular_expression + ' *$');\n    let match_obj = rgx.exec(field);\n    if (match_obj !== null) {\n        return match_obj[1].replace(/\"\"/g, '\"');\n    }\n    return field;\n}\n\n\nfunction unquote_fields(fields) {\n    return fields.map(unquote_field);\n}\n\n\nfunction split_whitespace_separated_str(src, preserve_whitespaces=false) {\n    var rgxp = preserve_whitespaces ? new RegExp(' *[^ ]+ *', 'g') : new RegExp('[^ ]+', 'g');\n    let result = [];\n    let match_obj = null;\n    while((match_obj = rgxp.exec(src)) !== null) {\n        result.push(match_obj[0]);\n    }\n    if (preserve_whitespaces) {\n        for (let i = 0; i < result.length - 1; i++) {\n            result[i] = result[i].slice(0, -1);\n        }\n    }\n    return result;\n}\n\n\nfunction smart_split(src, dlm, policy, preserve_quotes_and_whitespaces) {\n    if (policy === 'simple')\n        return [src.split(dlm), false];\n    if (policy === 'whitespace')\n        return [split_whitespace_separated_str(src, preserve_quotes_and_whitespaces), false];\n    if (policy === 'monocolumn')\n        return [[src], false];\n    return split_quoted_str(src, dlm, preserve_quotes_and_whitespaces);\n}\n\n\nfunction accumulate_rfc_line_into_record(external_rfc_line_buffer, current_line, comment_prefix=null) {\n    // Return null if the current line yields no record.\n    // Return a record string if the current line yields the record and cleans the external line buffer.\n    if (comment_prefix !== null && external_rfc_line_buffer.length == 0 && current_line.startsWith(comment_prefix))\n        return null;\n    let match_list = current_line.match(/\"/g);\n    let has_unbalanced_double_quote = match_list && match_list.length % 2 == 1;\n    if (external_rfc_line_buffer.length == 0 && !has_unbalanced_double_quote) {\n        return current_line;\n    } else if (external_rfc_line_buffer.length == 0 && has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else if (!has_unbalanced_double_quote) {\n        external_rfc_line_buffer.push(current_line);\n    } else {\n        external_rfc_line_buffer.push(current_line);\n        let multiline_row = external_rfc_line_buffer.join('\\n');\n        external_rfc_line_buffer.splice(0, external_rfc_line_buffer.length); // Cleanup the external buffer.\n        return multiline_row;\n    }\n    return null;\n}\n\n\nmodule.exports.split_quoted_str = split_quoted_str;\nmodule.exports.split_whitespace_separated_str = split_whitespace_separated_str;\nmodule.exports.smart_split = smart_split;\nmodule.exports.quote_field = quote_field;\nmodule.exports.rfc_quote_field = rfc_quote_field;\nmodule.exports.unquote_field = unquote_field;\nmodule.exports.unquote_fields = unquote_fields;\nmodule.exports.split_lines = split_lines;\nmodule.exports.accumulate_rfc_line_into_record = accumulate_rfc_line_into_record;\n","(function(exports){\n// The magic line above is to make the module both browser and Node compatible, see https://stackoverflow.com/questions/3225251/how-can-i-share-code-between-node-js-and-the-browser\n\n// This module works with records only. It is CSV-agnostic.\n// Do not add CSV-related logic or variables/functions/objects like \"delim\", \"separator\" etc\n\n\nclass RbqlParsingError extends Error {}\nclass RbqlRuntimeError extends Error {}\nclass AssertionError extends Error {}\nclass RbqlIOHandlingError extends Error {}\n\n\nclass InternalBadFieldError extends Error {\n    constructor(bad_idx, ...params) {\n        super(...params);\n        this.bad_idx = bad_idx;\n    }\n}\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction replace_all(src, search, replacement) {\n    return src.split(search).join(replacement);\n}\n\n\nclass RBQLContext {\n    constructor(query_text, input_iterator, output_writer, user_init_code) {\n        this.query_text = query_text;\n        this.input_iterator = input_iterator;\n        this.writer = output_writer;\n        this.user_init_code = user_init_code;\n\n        this.unnest_list = null;\n        this.top_count = null;\n\n        this.like_regex_cache = new Map();\n\n        this.sort_key_expression = null;\n\n        this.aggregation_stage = 0;\n        this.aggregation_key_expression = null;\n        this.functional_aggregators = [];\n\n        this.join_map_impl = null;\n        this.join_map = null;\n        this.lhs_join_var_expression = null;\n\n        this.where_expression = null;\n\n        this.select_expression = null;\n\n        this.update_expressions = null;\n\n        this.variables_init_code = null;\n    }\n}\n\nvar query_context = null; // Needs to be global for MIN(), MAX(), etc functions. TODO find a way to make it local.\n\n\nconst wrong_aggregation_usage_error = 'Usage of RBQL aggregation functions inside JavaScript expressions is not allowed, see the docs';\nconst RBQL_VERSION = '0.25.0';\n\n\nfunction check_if_brackets_match(opening_bracket, closing_bracket) {\n    return (opening_bracket == '[' && closing_bracket == ']') || (opening_bracket == '(' && closing_bracket == ')') || (opening_bracket == '{' && closing_bracket == '}');\n}\n\n\nfunction parse_root_bracket_level_text_spans(select_expression) {\n    let text_spans = []; // parts of text separated by commas at the root parenthesis level\n    let last_pos = 0;\n    let bracket_stack = [];\n    for (let i = 0; i < select_expression.length; i++) {\n        let cur_char = select_expression[i];\n        if (cur_char == ',' && bracket_stack.length == 0) {\n            text_spans.push(select_expression.substring(last_pos, i));\n            last_pos = i + 1;\n        } else if (['[', '{', '('].indexOf(cur_char) != -1) {\n            bracket_stack.push(cur_char);\n        } else if ([']', '}', ')'].indexOf(cur_char) != -1) {\n            if (bracket_stack.length && check_if_brackets_match(bracket_stack[bracket_stack.length - 1], cur_char)) {\n                bracket_stack.pop();\n            } else {\n                throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching opening bracket for closing \"${cur_char}\"`);\n            }\n        }\n    }\n    if (bracket_stack.length) {\n        throw new RbqlParsingError(`Unable to parse column headers in SELECT expression: No matching closing bracket for opening \"${bracket_stack[0]}\"`);\n    }\n    text_spans.push(select_expression.substring(last_pos, select_expression.length));\n    text_spans = text_spans.map(span => span.trim());\n    return text_spans;\n}\n\n\nfunction unquote_string(quoted_str) {\n    // It's possible to use eval here to unqoute the quoted_column_name, but it would be a little barbaric, let's do it manually instead\n    if (!quoted_str || quoted_str.length < 2)\n        return null;\n    if (quoted_str[0] == \"'\" && quoted_str[quoted_str.length - 1] == \"'\") {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\'/g, \"'\").replace(/\\\\\\\\/g, \"\\\\\");\n    } else if (quoted_str[0] == '\"' && quoted_str[quoted_str.length - 1] == '\"') {\n        return quoted_str.substring(1, quoted_str.length - 1).replace(/\\\\\"/g, '\"').replace(/\\\\\\\\/g, \"\\\\\");\n    } else {\n        return null;\n    }\n}\n\n\nfunction column_info_from_text_span(text_span, string_literals) {\n    // This function is a rough equivalent of \"column_info_from_node()\" function in python version of RBQL\n    text_span = text_span.trim();\n    let rbql_star_marker = '__RBQL_INTERNAL_STAR';\n    let simple_var_match = /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(text_span);\n    let attribute_match = /^([ab])\\.([_a-zA-Z][_a-zA-Z0-9]*)$/.exec(text_span);\n    let subscript_int_match = /^([ab])\\[([0-9]+)\\]$/.exec(text_span);\n    let subscript_str_match = /^([ab])\\[___RBQL_STRING_LITERAL([0-9]+)___\\]$/.exec(text_span);\n    if (simple_var_match !== null) {\n        if (text_span == rbql_star_marker)\n            return {table_name: null, column_index: null, column_name: null, is_star: true};\n        if (text_span.startsWith('___RBQL_STRING_LITERAL'))\n            return null;\n        let match = /^([ab])([0-9]+)$/.exec(text_span);\n        if (match !== null) {\n            return {table_name: match[1], column_index: parseInt(match[2]) - 1, column_name: null, is_star: false};\n        }\n        // Some examples for this branch: NR, NF\n        return {table_name: null, column_index: null, column_name: text_span, is_star: false};\n    } else if (attribute_match !== null) {\n        let table_name = attribute_match[1];\n        let column_name = attribute_match[2];\n        if (column_name == rbql_star_marker) {\n            return {table_name: table_name, column_index: null, column_name: null, is_star: true};\n        }\n        return {table_name: null, column_index: null, column_name: column_name, is_star: false};\n    } else if (subscript_int_match != null) {\n        let table_name = subscript_int_match[1];\n        let column_index = parseInt(subscript_int_match[2]) - 1;\n        return {table_name: table_name, column_index: column_index, column_name: null, is_star: false};\n    } else if (subscript_str_match != null) {\n        let table_name = subscript_str_match[1];\n        let replaced_string_literal_id = subscript_str_match[2];\n        if (replaced_string_literal_id < string_literals.length) {\n            let quoted_column_name = string_literals[replaced_string_literal_id];\n            let unquoted_column_name = unquote_string(quoted_column_name);\n            if (unquoted_column_name !== null && unquoted_column_name !== undefined) {\n                return {table_name: null, column_index: null, column_name: unquoted_column_name, is_star: false};\n            }\n        }\n    }\n    return null;\n}\n\n\nfunction adhoc_parse_select_expression_to_column_infos(select_expression, string_literals) {\n    // It is acceptable for the algorithm to provide null column name when it could be theorethically possible to deduce the name.\n    // I.e. this algorithm guarantees precision but doesn't guarantee completeness in all theorethically possible queries.\n    // Although the algorithm should be complete in all practical scenarios, i.e. it should be hard to come up with the query that doesn't produce complete set of column names.\n    // The null column name just means that the output column will be named as col{i}, so the failure to detect the proper column name can be tolerated.\n    // Specifically this function guarantees the following:\n    // 1. The number of column_infos is correct and will match the number of fields in each record in the output - otherwise the exception should be thrown\n    // 2. If column_info at pos j is not null, it is guaranteed to correctly represent that column name in the output\n    let text_spans = parse_root_bracket_level_text_spans(select_expression);\n    let column_infos = text_spans.map(ts => column_info_from_text_span(ts, string_literals));\n    return column_infos;\n}\n\n\nfunction stable_compare(a, b) {\n    for (var i = 0; i < a.length; i++) {\n        if (a[i] !== b[i])\n            return a[i] < b[i] ? -1 : 1;\n    }\n}\n\n\nfunction safe_get(record, idx) {\n    return idx < record.length ? record[idx] : null;\n}\n\n\nfunction safe_join_get(record, idx) {\n    if (idx < record.length) {\n        return record[idx];\n    }\n    throw new InternalBadFieldError(idx);\n}\n\n\nfunction safe_set(record, idx, value) {\n    if (idx < record.length) {\n        record[idx] = value;\n    } else {\n        throw new InternalBadFieldError(idx);\n    }\n}\n\n\nfunction regexp_escape(text) {\n    // From here: https://stackoverflow.com/a/6969486/2898283\n    return text.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');  // $& means the whole matched text\n}\n\n\nfunction like_to_regex(pattern) {\n    let p = 0;\n    let i = 0;\n    let converted = '';\n    while (i < pattern.length) {\n        if (pattern.charAt(i) == '_' || pattern.charAt(i) == '%') {\n            converted += regexp_escape(pattern.substring(p, i));\n            p = i + 1;\n            if (pattern.charAt(i) == '_') {\n                converted += '.';\n            } else {\n                converted += '.*';\n            }\n        }\n        i += 1;\n    }\n    converted += regexp_escape(pattern.substring(p, i));\n    return '^' + converted + '$';\n}\n\n\nfunction like(text, pattern) {\n    let matcher = query_context.like_regex_cache.get(pattern);\n    if (matcher === undefined) {\n        matcher = new RegExp(like_to_regex(pattern));\n        query_context.like_regex_cache.set(pattern, matcher);\n    }\n    return matcher.test(text);\n}\nconst LIKE = like;\n\n\nclass RBQLAggregationToken {\n    constructor(marker_id, value) {\n        this.marker_id = marker_id;\n        this.value = value;\n    }\n\n    toString() {\n        throw new RbqlParsingError(wrong_aggregation_usage_error);\n    }\n}\n\n\nclass UnnestMarker {}\n\n\nfunction UNNEST(vals) {\n    if (query_context.unnest_list !== null) {\n        // Technically we can support multiple UNNEST's but the implementation/algorithm is more complex and just doesn't worth it\n        throw new RbqlParsingError('Only one UNNEST is allowed per query');\n    }\n    query_context.unnest_list = vals;\n    return new UnnestMarker();\n}\nconst unnest = UNNEST;\nconst Unnest = UNNEST;\nconst UNFOLD = UNNEST; // \"UNFOLD\" is deprecated, just for backward compatibility\n\n\nfunction parse_number(val) {\n    // We can do a more pedantic number test like `/^ *-{0,1}[0-9]+\\.{0,1}[0-9]* *$/.test(val)`, but  user will probably use just Number(val) or parseInt/parseFloat\n    let result = Number(val);\n    if (isNaN(result)) {\n        throw new RbqlRuntimeError(`Unable to convert value \"${val}\" to a number. MIN, MAX, SUM, AVG, MEDIAN and VARIANCE aggregate functions convert their string arguments to numeric values`);\n    }\n    return result;\n}\n\n\nclass MinAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.min(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\n\nclass MaxAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, Math.max(cur_aggr, val));\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass SumAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, val);\n        } else {\n            this.stats.set(key, cur_aggr + val);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass AvgAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_cnt = cur_aggr[1];\n            this.stats.set(key, [cur_sum + val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_cnt = cur_aggr[1];\n        var avg = cur_sum / cur_cnt;\n        return avg;\n    }\n}\n\n\nclass VarianceAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val, val * val, 1]);\n        } else {\n            var cur_sum = cur_aggr[0];\n            var cur_sum_sq = cur_aggr[1];\n            var cur_cnt = cur_aggr[2];\n            this.stats.set(key, [cur_sum + val, cur_sum_sq + val * val, cur_cnt + 1]);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        var cur_sum = cur_aggr[0];\n        var cur_sum_sq = cur_aggr[1];\n        var cur_cnt = cur_aggr[2];\n        var avg_val = cur_sum / cur_cnt;\n        var variance = cur_sum_sq / cur_cnt - avg_val * avg_val;\n        return variance;\n    }\n}\n\n\nclass MedianAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        val = parse_number(val);\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        var cur_aggr = this.stats.get(key);\n        cur_aggr.sort(function(a, b) { return a - b; });\n        var m = Math.floor(cur_aggr.length / 2);\n        if (cur_aggr.length % 2) {\n            return cur_aggr[m];\n        } else {\n            return (cur_aggr[m - 1] + cur_aggr[m]) / 2.0;\n        }\n    }\n}\n\n\nclass CountAggregator {\n    constructor() {\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        var cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, 1);\n        } else {\n            this.stats.set(key, cur_aggr + 1);\n        }\n    }\n\n    get_final(key) {\n        return this.stats.get(key);\n    }\n}\n\n\nclass ArrayAggAggregator {\n    constructor(post_proc=null) {\n        this.post_proc = post_proc;\n        this.stats = new Map();\n    }\n\n    increment(key, val) {\n        let cur_aggr = this.stats.get(key);\n        if (cur_aggr === undefined) {\n            this.stats.set(key, [val]);\n        } else {\n            cur_aggr.push(val);\n        }\n    }\n\n    get_final(key) {\n        let cur_aggr = this.stats.get(key);\n        if (this.post_proc === null)\n            return cur_aggr;\n        return this.post_proc(cur_aggr);\n    }\n}\n\n\nclass ConstGroupVerifier {\n    constructor(output_index) {\n        this.output_index = output_index;\n        this.const_values = new Map();\n    }\n\n    increment(key, value) {\n        var old_value = this.const_values.get(key);\n        if (old_value === undefined) {\n            this.const_values.set(key, value);\n        } else if (old_value != value) {\n            throw new RbqlRuntimeError(`Invalid aggregate expression: non-constant values in output column ${this.output_index + 1}. E.g. \"${old_value}\" and \"${value}\"`);\n        }\n    }\n\n    get_final(key) {\n        return this.const_values.get(key);\n    }\n}\n\n\nfunction init_aggregator(generator_name, val, post_proc=null) {\n    query_context.aggregation_stage = 1;\n    var res = new RBQLAggregationToken(query_context.functional_aggregators.length, val);\n    if (post_proc === null) {\n        query_context.functional_aggregators.push(new generator_name());\n    } else {\n        query_context.functional_aggregators.push(new generator_name(post_proc));\n    }\n    return res;\n}\n\n\nfunction MIN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MinAggregator, val) : val;\n}\nconst min = MIN;\nconst Min = MIN;\n\n\nfunction MAX(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MaxAggregator, val) : val;\n}\nconst max = MAX;\nconst Max = MAX;\n\nfunction COUNT(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(CountAggregator, 1) : 1;\n}\nconst count = COUNT;\nconst Count = COUNT;\n\nfunction SUM(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(SumAggregator, val) : val;\n}\nconst sum = SUM;\nconst Sum = SUM;\n\nfunction AVG(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(AvgAggregator, val) : val;\n}\nconst avg = AVG;\nconst Avg = AVG;\n\nfunction VARIANCE(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(VarianceAggregator, val) : val;\n}\nconst variance = VARIANCE;\nconst Variance = VARIANCE;\n\nfunction MEDIAN(val) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(MedianAggregator, val) : val;\n}\nconst median = MEDIAN;\nconst Median = MEDIAN;\n\nfunction ARRAY_AGG(val, post_proc=null) {\n    return query_context.aggregation_stage < 2 ? init_aggregator(ArrayAggAggregator, val, post_proc) : val;\n}\nconst array_agg = ARRAY_AGG;\nconst FOLD = ARRAY_AGG; // \"FOLD\" is deprecated, just for backward compatibility\n\n\nfunction add_to_set(dst_set, value) {\n    var len_before = dst_set.size;\n    dst_set.add(value);\n    return len_before != dst_set.size;\n}\n\n\nclass TopWriter {\n    constructor(subwriter, top_count) {\n        this.subwriter = subwriter;\n        this.NW = 0;\n        this.top_count = top_count;\n    }\n\n    async write(record) {\n        if (this.top_count !== null && this.NW >= this.top_count)\n            return false;\n        await this.subwriter.write(record);\n        this.NW += 1;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.seen = new Set();\n    }\n\n    async write(record) {\n        if (!add_to_set(this.seen, JSON.stringify(record)))\n            return true;\n        if (!await this.subwriter.write(record))\n            return false;\n        return true;\n    }\n\n    async finish() {\n        await this.subwriter.finish();\n    }\n}\n\n\nclass UniqCountWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.records = new Map();\n    }\n\n    async write(record) {\n        var key = JSON.stringify(record);\n        var old_val = this.records.get(key);\n        if (old_val) {\n            old_val[0] += 1;\n        } else {\n            this.records.set(key, [1, record]);\n        }\n        return true;\n    }\n\n    async finish() {\n        for (var [key, value] of this.records) {\n            let [count, record] = value;\n            record.unshift(count);\n            if (!await this.subwriter.write(record))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass SortedWriter {\n    constructor(subwriter, reverse_sort) {\n        this.subwriter = subwriter;\n        this.reverse_sort = reverse_sort;\n        this.unsorted_entries = [];\n    }\n\n    async write(stable_entry) {\n        this.unsorted_entries.push(stable_entry);\n        return true;\n    }\n\n    async finish() {\n        var unsorted_entries = this.unsorted_entries;\n        unsorted_entries.sort(stable_compare);\n        if (this.reverse_sort)\n            unsorted_entries.reverse();\n        for (var i = 0; i < unsorted_entries.length; i++) {\n            var entry = unsorted_entries[i];\n            if (!await this.subwriter.write(entry[entry.length - 1]))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass AggregateWriter {\n    constructor(subwriter) {\n        this.subwriter = subwriter;\n        this.aggregators = [];\n        this.aggregation_keys = new Set();\n    }\n\n    async finish() {\n        var all_keys = Array.from(this.aggregation_keys);\n        all_keys.sort();\n        for (var i = 0; i < all_keys.length; i++) {\n            var key = all_keys[i];\n            var out_fields = [];\n            for (var ag of this.aggregators) {\n                out_fields.push(ag.get_final(key));\n            }\n            if (!await this.subwriter.write(out_fields))\n                break;\n        }\n        await this.subwriter.finish();\n    }\n}\n\n\nclass InnerJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        return this.join_map.get_join_records(lhs_key);\n    }\n}\n\n\nclass LeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n        this.null_record = [[null, join_map.max_record_len, Array(join_map.max_record_len).fill(null)]];\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length == 0) {\n            return this.null_record;\n        }\n        return result;\n    }\n}\n\n\nclass StrictLeftJoiner {\n    constructor(join_map) {\n        this.join_map = join_map;\n    }\n\n    get_rhs(lhs_key) {\n        let result = this.join_map.get_join_records(lhs_key);\n        if (result.length != 1) {\n            throw new RbqlRuntimeError('In \"STRICT LEFT JOIN\" each key in A must have exactly one match in B. Bad A key: \"' + lhs_key + '\"');\n        }\n        return result;\n    }\n}\n\n\nfunction select_except(src, except_fields) {\n    let result = [];\n    for (let i = 0; i < src.length; i++) {\n        if (except_fields.indexOf(i) == -1)\n            result.push(src[i]);\n    }\n    return result;\n}\n\n\nasync function select_simple(sort_key, NR, out_fields) {\n    if (query_context.sort_key_expression !== null) {\n        var sort_entry = sort_key.concat([NR, out_fields]);\n        if (!await query_context.writer.write(sort_entry))\n            return false;\n    } else {\n        if (!await query_context.writer.write(out_fields))\n            return false;\n    }\n    return true;\n}\n\n\nfunction select_aggregated(key, transparent_values) {\n    if (key !== null) {\n        key = JSON.stringify(key);\n    }\n    if (query_context.aggregation_stage === 1) {\n        if (!(query_context.writer instanceof TopWriter)) {\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        }\n        query_context.writer = new AggregateWriter(query_context.writer);\n        let num_aggregators_found = 0;\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            if (trans_value instanceof RBQLAggregationToken) {\n                query_context.writer.aggregators.push(query_context.functional_aggregators[trans_value.marker_id]);\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value.value);\n                num_aggregators_found += 1;\n            } else {\n                query_context.writer.aggregators.push(new ConstGroupVerifier(query_context.writer.aggregators.length));\n                query_context.writer.aggregators[query_context.writer.aggregators.length - 1].increment(key, trans_value);\n            }\n        }\n        if (num_aggregators_found != query_context.functional_aggregators.length) {\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        }\n        query_context.aggregation_stage = 2;\n    } else {\n        for (var i = 0; i < transparent_values.length; i++) {\n            var trans_value = transparent_values[i];\n            query_context.writer.aggregators[i].increment(key, trans_value);\n        }\n    }\n    query_context.writer.aggregation_keys.add(key);\n}\n\n\nasync function select_unnested(sort_key, NR, folded_fields) {\n    let out_fields = folded_fields.slice();\n    let unnest_pos = folded_fields.findIndex(val => val instanceof UnnestMarker);\n    for (var i = 0; i < query_context.unnest_list.length; i++) {\n        out_fields[unnest_pos] = query_context.unnest_list[i];\n        if (!await select_simple(sort_key, NR, out_fields.slice()))\n            return false;\n    }\n    return true;\n}\n\n\nconst PROCESS_SELECT_COMMON = `\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    let out_fields = __RBQLMP__select_expression;\n    if (query_context.aggregation_stage > 0) {\n        let key = __RBQLMP__aggregation_key_expression;\n        select_aggregated(key, out_fields);\n    } else {\n        let sort_key = [__RBQLMP__sort_key_expression];\n        if (query_context.unnest_list !== null) {\n            if (!await select_unnested(sort_key, NR, out_fields))\n                stop_flag = true;\n        } else {\n            if (!await select_simple(sort_key, NR, out_fields))\n                stop_flag = true;\n        }\n    }\n}\n`;\n\n\nconst PROCESS_SELECT_SIMPLE = `\nlet star_fields = record_a;\n__CODE__\n`;\n\n\nconst PROCESS_SELECT_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nfor (let join_match of join_matches) {\n    let [bNR, bNF, record_b] = join_match;\n    let star_fields = record_a.concat(record_b);\n    __CODE__\n    if (stop_flag)\n        break;\n}\n`;\n\n\nconst PROCESS_UPDATE_JOIN = `\nlet join_matches = query_context.join_map.get_rhs(__RBQLMP__lhs_join_var_expression);\nif (join_matches.length > 1)\n    throw new RbqlRuntimeError('More than one record in UPDATE query matched a key from the input table in the join table');\nlet record_b = null;\nlet bNR = null;\nlet bNF = null;\nif (join_matches.length == 1)\n    [bNR, bNF, record_b] = join_matches[0];\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (join_matches.length == 1 && (__RBQLMP__where_expression)) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst PROCESS_UPDATE_SIMPLE = `\nlet up_fields = record_a;\n__RBQLMP__variables_init_code\nif (__RBQLMP__where_expression) {\n    NU += 1;\n    __RBQLMP__update_expressions\n}\nif (!await query_context.writer.write(up_fields))\n    stop_flag = true;\n`;\n\n\nconst MAIN_LOOP_BODY = `\n__USER_INIT_CODE__\n\nlet NU = 0;\nlet NR = 0;\n\nlet stop_flag = false;\nwhile (!stop_flag) {\n    let record_a = await query_context.input_iterator.get_record();\n    if (record_a === null)\n        break;\n    NR += 1;\n    let NF = record_a.length;\n    query_context.unnest_list = null; // TODO optimize, don't need to set this every iteration\n    try {\n        __CODE__\n    } catch (e) {\n        if (e.constructor.name === 'InternalBadFieldError') {\n            throw new RbqlRuntimeError(\\`No \"a\\${e.bad_idx + 1}\" field at record \\${NR}\\`);\n        } else if (e.constructor.name === 'RbqlParsingError') {\n            throw(e);\n        } else {\n            throw new RbqlRuntimeError(\\`At record \\${NR}, Details: \\${e.message}\\`);\n        }\n    }\n}\n`;\n\n\nfunction embed_expression(parent_code, child_placeholder, child_expression) {\n    return replace_all(parent_code, child_placeholder, child_expression);\n}\n\n\nfunction embed_code(parent_code, child_placeholder, child_code) {\n    let parent_lines = parent_code.split('\\n');\n    let child_lines = child_code.split('\\n');\n    for (let i = 0; i < parent_lines.length; i++) {\n        let pos = parent_lines[i].indexOf(child_placeholder);\n        if (pos == -1)\n            continue;\n        assert(pos % 4 == 0);\n        let placeholder_indentation = parent_lines[i].substring(0, pos);\n        child_lines = child_lines.map(l => placeholder_indentation + l);\n        let result_lines = parent_lines.slice(0, i).concat(child_lines).concat(parent_lines.slice(i + 1));\n        return result_lines.join('\\n') + '\\n';\n    }\n    assert(false);\n}\n\n\nfunction generate_main_loop_code(query_context) {\n    let is_select_query = query_context.select_expression !== null;\n    let is_join_query = query_context.join_map !== null;\n    let where_expression = query_context.where_expression === null ? 'true' : query_context.where_expression;\n    let aggregation_key_expression = query_context.aggregation_key_expression === null ? 'null' : query_context.aggregation_key_expression;\n    let sort_key_expression = query_context.sort_key_expression === null ? 'null' : query_context.sort_key_expression;\n    let js_code = embed_code(MAIN_LOOP_BODY, '__USER_INIT_CODE__', query_context.user_init_code);\n    if (is_select_query) {\n        if (is_join_query) {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_JOIN), '__CODE__', PROCESS_SELECT_COMMON);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(embed_code(js_code, '__CODE__', PROCESS_SELECT_SIMPLE), '__CODE__', PROCESS_SELECT_COMMON);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_expression(js_code, '__RBQLMP__select_expression', query_context.select_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__aggregation_key_expression', aggregation_key_expression);\n        js_code = embed_expression(js_code, '__RBQLMP__sort_key_expression', sort_key_expression);\n    } else {\n        if (is_join_query) {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_JOIN);\n            js_code = embed_expression(js_code, '__RBQLMP__lhs_join_var_expression', query_context.lhs_join_var_expression);\n        } else {\n            js_code = embed_code(js_code, '__CODE__', PROCESS_UPDATE_SIMPLE);\n        }\n        js_code = embed_code(js_code, '__RBQLMP__variables_init_code', query_context.variables_init_code);\n        js_code = embed_code(js_code, '__RBQLMP__update_expressions', query_context.update_expressions);\n        js_code = embed_expression(js_code, '__RBQLMP__where_expression', where_expression);\n    }\n    return \"(async () => {\" + js_code + \"})()\";\n}\n\n\nasync function compile_and_run(query_context) {\n    let main_loop_body = generate_main_loop_code(query_context);\n    try {\n        let main_loop_promise = eval(main_loop_body);\n        await main_loop_promise;\n    } catch (e) {\n        if (e instanceof SyntaxError) {\n            // SyntaxError's from eval() function do not contain detailed explanation of what has caused the syntax error, so to guess what was wrong we can only use the original query\n            // v8 issue to fix eval: https://bugs.chromium.org/p/v8/issues/detail?id=2589\n            let lower_case_query = query_context.query_text.toLowerCase();\n            if (lower_case_query.indexOf(' having ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"HAVING\\\" keyword\");\n            if (lower_case_query.indexOf(' like ') != -1)\n                throw new SyntaxError(e.message + \"\\nRBQL doesn't support \\\"LIKE\\\" operator, use like() function instead e.g. ... WHERE like(a1, 'foo%bar') ... \"); // UT JSON\n            if (lower_case_query.indexOf(' from ') != -1)\n                throw new SyntaxError(e.message + \"\\nTip: If input table is defined by the environment, RBQL query should not have \\\"FROM\\\" keyword\"); // UT JSON\n            if (e && e.message && String(e.message).toLowerCase().indexOf('unexpected identifier') != -1) {\n                if (lower_case_query.indexOf(' and ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'and' keyword in your query?\\nJavaScript backend doesn't support 'and' keyword, use '&&' operator instead!\");\n                if (lower_case_query.indexOf(' or ') != -1)\n                    throw new SyntaxError(e.message + \"\\nDid you use 'or' keyword in your query?\\nJavaScript backend doesn't support 'or' keyword, use '||' operator instead!\");\n            }\n        }\n        if (e && e.message && e.message.indexOf('Received an instance of RBQLAggregationToken') != -1)\n            throw new RbqlParsingError(wrong_aggregation_usage_error);\n        throw e;\n    }\n}\n\n\nconst GROUP_BY = 'GROUP BY';\nconst UPDATE = 'UPDATE';\nconst SELECT = 'SELECT';\nconst JOIN = 'JOIN';\nconst INNER_JOIN = 'INNER JOIN';\nconst LEFT_JOIN = 'LEFT JOIN';\nconst LEFT_OUTER_JOIN = 'LEFT OUTER JOIN';\nconst STRICT_LEFT_JOIN = 'STRICT LEFT JOIN';\nconst ORDER_BY = 'ORDER BY';\nconst WHERE = 'WHERE';\nconst LIMIT = 'LIMIT';\nconst EXCEPT = 'EXCEPT';\nconst WITH = 'WITH';\n\n\nfunction get_ambiguous_error_msg(variable_name) {\n    return `Ambiguous variable name: \"${variable_name}\" is present both in input and in join tables`;\n}\n\n\nfunction get_all_matches(regexp, text) {\n    var result = [];\n    let match_obj = null;\n    while((match_obj = regexp.exec(text)) !== null) {\n        result.push(match_obj);\n    }\n    return result;\n}\n\n\nfunction str_strip(src) {\n    return src.replace(/^ +| +$/g, '');\n}\n\n\nfunction strip_comments(cline) {\n    cline = cline.trim();\n    if (cline.startsWith('//'))\n        return '';\n    return cline;\n}\n\n\nfunction combine_string_literals(backend_expression, string_literals) {\n    for (var i = 0; i < string_literals.length; i++) {\n        backend_expression = replace_all(backend_expression, `___RBQL_STRING_LITERAL${i}___`, string_literals[i]);\n    }\n    return backend_expression;\n}\n\n\nfunction parse_basic_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}([1-9][0-9]*)(?:$|(?=[^_a-zA-Z0-9]))`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[prefix + String(field_num)] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction parse_array_variables(query_text, prefix, dst_variables_map) {\n    assert(prefix == 'a' || prefix == 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[([1-9][0-9]*)\\\\]`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    for (let i = 0; i < matches.length; i++) {\n        let field_num = parseInt(matches[i][1]);\n        dst_variables_map[`${prefix}[${field_num}]`] = {initialize: true, index: field_num - 1};\n    }\n}\n\n\nfunction js_string_escape_column_name(column_name, quote_char) {\n    column_name = column_name.replace(/\\\\/g, '\\\\\\\\');\n    column_name = column_name.replace(/\\n/g, '\\\\n');\n    column_name = column_name.replace(/\\r/g, '\\\\r');\n    column_name = column_name.replace(/\\t/g, '\\\\t');\n    if (quote_char === \"'\")\n        return column_name.replace(/'/g, \"\\\\'\");\n    if (quote_char === '\"')\n        return column_name.replace(/\"/g, '\\\\\"');\n    assert(quote_char === \"`\");\n    return column_name.replace(/`/g, \"\\\\`\");\n}\n\n\nfunction query_probably_has_dictionary_variable(query_text, column_name) {\n    let rgx = new RegExp('[-a-zA-Z0-9_:;+=!.,()%^#@&* ]+', 'g');\n    let continuous_name_segments = get_all_matches(rgx, column_name);\n    for (let continuous_segment of continuous_name_segments) {\n        if (query_text.indexOf(continuous_segment) == -1)\n            return false;\n    }\n    return true;\n}\n\n\nfunction parse_dictionary_variables(query_text, prefix, column_names, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    // FIXME to prevent typos in attribute names either use query-based variable parsing which can properly handle back-tick strings or wrap \"a\" and \"b\" variables with ES6 Proxies https://stackoverflow.com/a/25658975/2898283\n    assert(prefix === 'a' || prefix === 'b');\n    let dict_test_rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\[`);\n    if (query_text.search(dict_test_rgx) == -1)\n        return;\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if (query_probably_has_dictionary_variable(query_text, column_name)) {\n            let escaped_column_name = js_string_escape_column_name(column_name, '\"');\n            dst_variables_map[`${prefix}[\"${escaped_column_name}\"]`] = {initialize: true, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"'\");\n            dst_variables_map[`${prefix}['${escaped_column_name}']`] = {initialize: false, index: i};\n            escaped_column_name = js_string_escape_column_name(column_name, \"`\");\n            dst_variables_map[`${prefix}[\\`${escaped_column_name}\\`]`] = {initialize: false, index: i};\n        }\n    }\n}\n\n\nfunction parse_attribute_variables(query_text, prefix, column_names, column_names_source, dst_variables_map) {\n    // The purpose of this algorithm is to minimize number of variables in varibale_map to improve performance, ideally it should be only variables from the query\n\n    assert(prefix === 'a' || prefix === 'b');\n    let rgx = new RegExp(`(?:^|[^_a-zA-Z0-9])${prefix}\\\\.([_a-zA-Z][_a-zA-Z0-9]*)`, 'g');\n    let matches = get_all_matches(rgx, query_text);\n    let column_names_from_query = matches.map(v => v[1]);\n    for (let column_name of column_names_from_query) {\n        let zero_based_idx = column_names.indexOf(column_name);\n        if (zero_based_idx != -1) {\n            dst_variables_map[`${prefix}.${column_name}`] = {initialize: true, index: zero_based_idx};\n        } else {\n            throw new RbqlParsingError(`Unable to find column \"${column_name}\" in ${prefix == 'a' ? 'input' : 'join'} ${column_names_source}`);\n        }\n    }\n}\n\n\nfunction map_variables_directly(query_text, column_names, dst_variables_map) {\n    for (let i = 0; i < column_names.length; i++) {\n        let column_name = column_names[i];\n        if ( /^[_a-zA-Z][_a-zA-Z0-9]*$/.exec(column_name) === null)\n            throw new RbqlIOHandlingError(`Unable to use column name \"${column_name}\" as RBQL/JS variable`);\n        if (query_text.indexOf(column_name) != -1)\n            dst_variables_map[column_name] = {initialize: true, index: i};\n    }\n}\n\n\nfunction ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names) {\n    let join_column_names_set = new Set(join_column_names);\n    for (let column_name of input_column_names) {\n        if (join_column_names_set.has(column_name) && query_text.indexOf(column_name) != -1) // False positive is tolerable here\n            throw new RbqlParsingError(get_ambiguous_error_msg(column_name));\n    }\n}\n\n\nfunction parse_join_expression(src) {\n    src = str_strip(src);\n    const invalid_join_syntax_error = 'Invalid join syntax. Valid syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    let rgx = /^ *([^ ]+) +on +/i;\n    let match = rgx.exec(src);\n    if (match === null)\n        throw new RbqlParsingError(invalid_join_syntax_error);\n    let table_id = match[1];\n    src = src.substr(match[0].length);\n\n    let variable_pairs = [];\n    var pair_rgx = /^([^ =]+) *==? *([^ =]+)/;\n    var and_rgx = /^ +(and|&&) +/i;\n    while (true) {\n        match = pair_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        variable_pairs.push([match[1], match[2]]);\n        src = src.substr(match[0].length);\n        if (!src.length)\n            break;\n        match = and_rgx.exec(src);\n        if (match === null)\n            throw new RbqlParsingError(invalid_join_syntax_error);\n        src = src.substr(match[0].length);\n    }\n    return [table_id, variable_pairs];\n}\n\n\nfunction resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals) {\n    let lhs_variables = [];\n    let rhs_indices = [];\n    const valid_join_syntax_msg = 'Valid JOIN syntax: <JOIN> /path/to/B/table on a... == b... [and a... == b... [and ... ]]';\n    for (let variable_pair of variable_pairs) {\n        let [join_var_1, join_var_2] = variable_pair;\n        join_var_1 = combine_string_literals(join_var_1, string_literals);\n        join_var_2 = combine_string_literals(join_var_2, string_literals);\n        if (input_variables_map.hasOwnProperty(join_var_1) && join_variables_map.hasOwnProperty(join_var_1))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_1));\n        if (input_variables_map.hasOwnProperty(join_var_2) && join_variables_map.hasOwnProperty(join_var_2))\n            throw new RbqlParsingError(get_ambiguous_error_msg(join_var_2));\n        if (input_variables_map.hasOwnProperty(join_var_2))\n            [join_var_1, join_var_2] = [join_var_2, join_var_1];\n\n        let [lhs_key_index, rhs_key_index] = [null, null];\n        if (['NR', 'a.NR', 'aNR'].indexOf(join_var_1) != -1) {\n            lhs_key_index = -1;\n        } else if (input_variables_map.hasOwnProperty(join_var_1)) {\n            lhs_key_index = input_variables_map[join_var_1].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Input table does not have field \"${join_var_1}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        if (['b.NR', 'bNR'].indexOf(join_var_2) != -1) {\n            rhs_key_index = -1;\n        } else if (join_variables_map.hasOwnProperty(join_var_2)) {\n            rhs_key_index = join_variables_map[join_var_2].index;\n        } else {\n            throw new RbqlParsingError(`Unable to parse JOIN expression: Join table does not have field \"${join_var_2}\"\\n${valid_join_syntax_msg}`);\n        }\n\n        let lhs_join_var_expression = lhs_key_index == -1 ? 'NR' : `safe_join_get(record_a, ${lhs_key_index})`;\n        rhs_indices.push(rhs_key_index);\n        lhs_variables.push(lhs_join_var_expression);\n    }\n    return [lhs_variables, rhs_indices];\n}\n\n\nfunction generate_common_init_code(query_text, variable_prefix) {\n    assert(variable_prefix == 'a' || variable_prefix == 'b');\n    let result = [];\n    result.push(`${variable_prefix} = new Object();`);\n    let base_var = variable_prefix == 'a' ? 'NR' : 'bNR';\n    let attr_var = `${variable_prefix}.NR`;\n    if (query_text.indexOf(attr_var) != -1)\n        result.push(`${attr_var} = ${base_var};`);\n    if (variable_prefix == 'a' && query_text.indexOf('aNR') != -1)\n        result.push('aNR = NR;');\n    return result;\n}\n\n\nfunction generate_init_statements(query_text, variables_map, join_variables_map, indent) {\n    let code_lines = generate_common_init_code(query_text, 'a');\n    let simple_var_name_rgx = /^[_0-9a-zA-Z]+$/;\n    for (const [variable_name, var_info] of Object.entries(variables_map)) {\n        if (var_info.initialize) {\n            let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n            code_lines.push(`${variable_declaration_keyword}${variable_name} = safe_get(record_a, ${var_info.index});`);\n        }\n    }\n    if (join_variables_map) {\n        code_lines = code_lines.concat(generate_common_init_code(query_text, 'b'));\n        for (const [variable_name, var_info] of Object.entries(join_variables_map)) {\n            if (var_info.initialize) {\n                let variable_declaration_keyword = simple_var_name_rgx.exec(variable_name) ? 'var ' : '';\n                code_lines.push(`${variable_declaration_keyword}${variable_name} = record_b === null ? null : safe_get(record_b, ${var_info.index});`);\n            }\n        }\n    }\n    for (let i = 1; i < code_lines.length; i++) {\n        code_lines[i] = indent + code_lines[i];\n    }\n    return code_lines.join('\\n');\n}\n\n\nfunction replace_star_count(aggregate_expression) {\n    var rgx = /(^|,) *COUNT\\( *\\* *\\) *(?:$|(?=,))/ig;\n    var result = aggregate_expression.replace(rgx, '$1 COUNT(1)');\n    return str_strip(result);\n}\n\n\nfunction replace_star_vars(rbql_expression) {\n    let star_rgx = /(?:^|,) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = ']).concat(' + {'*': 'star_fields', 'a.*': 'record_a', 'b.*': 'record_b'}[star_expression] + ').concat([';\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length + 1; // Adding one to skip the lookahead comma\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction replace_star_vars_for_header_parsing(rbql_expression) {\n    let star_rgx = /(?:(?<=^)|(?<=,)) *(\\*|a\\.\\*|b\\.\\*) *(?=$|,)/g;\n    let matches = get_all_matches(star_rgx, rbql_expression);\n    let last_pos = 0;\n    let result = '';\n    for (let match of matches) {\n        let star_expression = match[1];\n        let replacement_expression = {'*': '__RBQL_INTERNAL_STAR', 'a.*': 'a.__RBQL_INTERNAL_STAR', 'b.*': 'b.__RBQL_INTERNAL_STAR'}[star_expression];\n        if (last_pos < match.index)\n            result += rbql_expression.substring(last_pos, match.index);\n        result += replacement_expression;\n        last_pos = match.index + match[0].length;\n    }\n    result += rbql_expression.substring(last_pos);\n    return result;\n}\n\n\nfunction translate_update_expression(update_expression, input_variables_map, string_literals, indent) {\n    let first_assignment = str_strip(update_expression.split('=')[0]);\n    let first_assignment_error = `Unable to parse \"UPDATE\" expression: the expression must start with assignment, but \"${first_assignment}\" does not look like an assignable field name`;\n\n    let assignment_looking_rgx = /(?:^|,) *(a[.#a-zA-Z0-9\\[\\]_]*) *=(?=[^=])/g;\n    let update_expressions = [];\n    let pos = 0;\n    while (true) {\n        let match = assignment_looking_rgx.exec(update_expression);\n        if (update_expressions.length == 0 && (match === null || match.index != 0)) {\n            throw new RbqlParsingError(first_assignment_error);\n        }\n        if (match === null) {\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substr(pos)) + ');';\n            break;\n        }\n        if (update_expressions.length)\n            update_expressions[update_expressions.length - 1] += str_strip(update_expression.substring(pos, match.index)) + ');';\n        let dst_var_name = combine_string_literals(str_strip(match[1]), string_literals);\n        if (!input_variables_map.hasOwnProperty(dst_var_name))\n            throw new RbqlParsingError(`Unable to parse \"UPDATE\" expression: Unknown field name: \"${dst_var_name}\"`);\n        let var_index = input_variables_map[dst_var_name].index;\n        let current_indent = update_expressions.length ? indent : '';\n        update_expressions.push(`${current_indent}safe_set(up_fields, ${var_index}, `);\n        pos = match.index + match[0].length;\n    }\n    return combine_string_literals(update_expressions.join('\\n'), string_literals);\n}\n\n\nfunction translate_select_expression(select_expression) {\n    let expression_without_stars = replace_star_count(select_expression);\n    let translated = str_strip(replace_star_vars(expression_without_stars));\n    let translated_for_header = str_strip(replace_star_vars_for_header_parsing(expression_without_stars));\n    if (!translated.length)\n        throw new RbqlParsingError('\"SELECT\" expression is empty');\n    return [`[].concat([${translated}])`, translated_for_header];\n}\n\n\nfunction separate_string_literals(rbql_expression) {\n    // The regex consists of 3 almost identicall parts, the only difference is quote type\n    var rgx = /('(\\\\(\\\\\\\\)*'|[^'])*')|(\"(\\\\(\\\\\\\\)*\"|[^\"])*\")|(`(\\\\(\\\\\\\\)*`|[^`])*`)/g;\n    var match_obj = null;\n    var format_parts = [];\n    var string_literals = [];\n    var idx_before = 0;\n    while((match_obj = rgx.exec(rbql_expression)) !== null) {\n        var literal_id = string_literals.length;\n        var string_literal = match_obj[0];\n        string_literals.push(string_literal);\n        var start_index = match_obj.index;\n        format_parts.push(rbql_expression.substring(idx_before, start_index));\n        format_parts.push(`___RBQL_STRING_LITERAL${literal_id}___`);\n        idx_before = rgx.lastIndex;\n    }\n    format_parts.push(rbql_expression.substring(idx_before));\n    var format_expression = format_parts.join('');\n    format_expression = format_expression.replace(/\\t/g, ' ');\n    return [format_expression, string_literals];\n}\n\n\nfunction locate_statements(rbql_expression) {\n    let statement_groups = [];\n    statement_groups.push([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN]);\n    statement_groups.push([SELECT]);\n    statement_groups.push([ORDER_BY]);\n    statement_groups.push([WHERE]);\n    statement_groups.push([UPDATE]);\n    statement_groups.push([GROUP_BY]);\n    statement_groups.push([LIMIT]);\n    statement_groups.push([EXCEPT]);\n    var result = [];\n    for (var ig = 0; ig < statement_groups.length; ig++) {\n        for (var is = 0; is < statement_groups[ig].length; is++) {\n            var statement = statement_groups[ig][is];\n            var rgxp = new RegExp('(?:^| )' + replace_all(statement, ' ', ' *') + '(?= )', 'ig');\n            var matches = get_all_matches(rgxp, rbql_expression);\n            if (!matches.length)\n                continue;\n            if (matches.length > 1)\n                throw new RbqlParsingError(`More than one \"${statement}\" statements found`);\n            assert(matches.length == 1);\n            var match = matches[0];\n            var match_str = match[0];\n            result.push([match.index, match.index + match_str.length, statement]);\n            break; // Break to avoid matching a sub-statement from the same group e.g. \"INNER JOIN\" -> \"JOIN\"\n        }\n    }\n    result.sort(function(a, b) { return a[0] - b[0]; });\n    return result;\n}\n\n\nfunction separate_actions(rbql_expression) {\n    rbql_expression = str_strip(rbql_expression);\n    var result = {};\n    let with_match = /^(.*)  *[Ww][Ii][Tt][Hh] *\\(([a-z]{4,20})\\) *$/.exec(rbql_expression);\n    if (with_match !== null) {\n        rbql_expression = with_match[1];\n        result[WITH] = with_match[2];\n    }\n    var ordered_statements = locate_statements(rbql_expression);\n    for (var i = 0; i < ordered_statements.length; i++) {\n        var statement_start = ordered_statements[i][0];\n        var span_start = ordered_statements[i][1];\n        var statement = ordered_statements[i][2];\n        var span_end = i + 1 < ordered_statements.length ? ordered_statements[i + 1][0] : rbql_expression.length;\n        assert(statement_start < span_start);\n        assert(span_start <= span_end);\n        var span = rbql_expression.substring(span_start, span_end);\n        var statement_params = {};\n        if ([STRICT_LEFT_JOIN, LEFT_OUTER_JOIN, LEFT_JOIN, INNER_JOIN, JOIN].indexOf(statement) != -1) {\n            statement_params['join_subtype'] = statement;\n            statement = JOIN;\n        }\n\n        if (statement == UPDATE) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('UPDATE keyword must be at the beginning of the query');\n            span = span.replace(/^ *SET/i, '');\n        }\n\n        if (statement == ORDER_BY) {\n            span = span.replace(/ ASC *$/i, '');\n            var new_span = span.replace(/ DESC *$/i, '');\n            if (new_span != span) {\n                span = new_span;\n                statement_params['reverse'] = true;\n            } else {\n                statement_params['reverse'] = false;\n            }\n        }\n\n        if (statement == SELECT) {\n            if (statement_start != 0)\n                throw new RbqlParsingError('SELECT keyword must be at the beginning of the query');\n            let match = /^ *TOP *([0-9]+) /i.exec(span);\n            if (match !== null) {\n                statement_params['top'] = parseInt(match[1]);\n                span = span.substr(match.index + match[0].length);\n            }\n            match = /^ *DISTINCT *(COUNT)? /i.exec(span);\n            if (match !== null) {\n                statement_params['distinct'] = true;\n                if (match[1]) {\n                    statement_params['distinct_count'] = true;\n                }\n                span = span.substr(match.index + match[0].length);\n            }\n        }\n        statement_params['text'] = str_strip(span);\n        result[statement] = statement_params;\n    }\n    if (!result.hasOwnProperty(SELECT) && !result.hasOwnProperty(UPDATE)) {\n        throw new RbqlParsingError('Query must contain either SELECT or UPDATE statement');\n    }\n    assert(result.hasOwnProperty(SELECT) != result.hasOwnProperty(UPDATE));\n    return result;\n}\n\n\nfunction find_top(rb_actions) {\n    if (rb_actions.hasOwnProperty(LIMIT)) {\n        var rgx = /^[0-9]+$/;\n        if (rgx.exec(rb_actions[LIMIT]['text']) === null) {\n            throw new RbqlParsingError('LIMIT keyword must be followed by an integer');\n        }\n        var result = parseInt(rb_actions[LIMIT]['text']);\n        return result;\n    }\n    var select_action = rb_actions[SELECT];\n    if (select_action && select_action.hasOwnProperty('top')) {\n        return select_action['top'];\n    }\n    return null;\n}\n\n\nfunction translate_except_expression(except_expression, input_variables_map, string_literals, input_header) {\n    let skip_vars = except_expression.split(',');\n    skip_vars = skip_vars.map(str_strip);\n    let skip_indices = [];\n    for (let var_name of skip_vars) {\n        var_name = combine_string_literals(var_name, string_literals);\n        if (!input_variables_map.hasOwnProperty(var_name))\n            throw new RbqlParsingError(`Unknown field in EXCEPT expression: \"${var_name}\"`);\n        skip_indices.push(input_variables_map[var_name].index);\n    }\n    skip_indices = skip_indices.sort((a, b) => a - b);\n    let output_header = input_header === null ? null : select_except(input_header, skip_indices);\n    let indices_str = skip_indices.join(',');\n    return [output_header, `select_except(record_a, [${indices_str}])`];\n}\n\n\nclass HashJoinMap {\n    constructor(record_iterator, key_indices) {\n        this.max_record_len = 0;\n        this.hash_map = new Map();\n        this.record_iterator = record_iterator;\n        this.nr = 0;\n        if (key_indices.length == 1) {\n            this.key_index = key_indices[0];\n            this.key_indices = null;\n            this.polymorphic_get_key = this.get_single_key;\n        } else {\n            this.key_index = null;\n            this.key_indices = key_indices;\n            this.polymorphic_get_key = this.get_multi_key;\n        }\n    }\n\n    get_single_key(nr, fields) {\n        if (this.key_index >= fields.length)\n            throw new RbqlRuntimeError(`No field with index ${this.key_index + 1} at record ${this.nr} in \"B\" table`);\n        return this.key_index === -1 ? this.nr : fields[this.key_index];\n    };\n\n    get_multi_key(nr, fields) {\n        let result = [];\n        for (let ki of this.key_indices) {\n            if (ki >= fields.length)\n                throw new RbqlRuntimeError(`No field with index ${ki + 1} at record ${this.nr} in \"B\" table`);\n            result.push(ki === -1 ? this.nr : fields[ki]);\n        }\n        return JSON.stringify(result);\n    };\n\n    async build() {\n        while (true) {\n            let fields = await this.record_iterator.get_record();\n            if (fields === null)\n                break;\n            this.nr += 1;\n            let nf = fields.length;\n            this.max_record_len = Math.max(this.max_record_len, nf);\n            let key = this.polymorphic_get_key(this.nr, fields);\n            let key_records = this.hash_map.get(key);\n            if (key_records === undefined) {\n                this.hash_map.set(key, [[this.nr, nf, fields]]);\n            } else {\n                key_records.push([this.nr, nf, fields]);\n            }\n        }\n    };\n\n    get_join_records(key) {\n        let result = this.hash_map.get(key);\n        if (result === undefined)\n            return [];\n        return result;\n    };\n\n    get_warnings() {\n        return this.record_iterator.get_warnings();\n    };\n}\n\n\nfunction cleanup_query(query_text) {\n    return query_text.split('\\n').map(strip_comments).filter(line => line.length).join(' ').replace(/;+$/g, '');\n}\n\n\nfunction remove_redundant_table_name(query_text) {\n    query_text = str_strip(query_text.replace(/ +from +a(?: +|$)/gi, ' '));\n    query_text = str_strip(query_text.replace(/^ *update +a +set /gi, 'update '));\n    return query_text;\n}\n\n\nfunction select_output_header(input_header, join_header, query_column_infos) {\n    if (input_header === null && join_header === null)\n        return null;\n    if (input_header === null)\n        input_header = [];\n    if (join_header === null)\n        join_header = [];\n    let output_header = [];\n    for (let qci of query_column_infos) {\n        // TODO refactor this and python version: extract this code into a function instead to always return something\n        if (qci === null) {\n            output_header.push('col' + (output_header.length + 1));\n        } else if (qci.is_star) {\n            if (qci.table_name === null) {\n                output_header = output_header.concat(input_header).concat(join_header);\n            } else if (qci.table_name === 'a') {\n                output_header = output_header.concat(input_header);\n            } else if (qci.table_name === 'b') {\n                output_header = output_header.concat(join_header);\n            }\n        } else if (qci.column_name !== null) {\n            output_header.push(qci.column_name);\n        } else if (qci.column_index !== null) {\n            if (qci.table_name == 'a' && qci.column_index < input_header.length) {\n                output_header.push(input_header[qci.column_index]);\n            } else if (qci.table_name == 'b' && qci.column_index < join_header.length) {\n                output_header.push(join_header[qci.column_index]);\n            } else {\n                output_header.push('col' + (output_header.length + 1));\n            }\n        } else { // Should never happen\n            output_header.push('col' + (output_header.length + 1));\n        }\n    }\n    return output_header;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nclass RBQLInputIterator {\n    constructor(){}\n    stop() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_variables_map(query_text) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    async get_record() {\n        throw new Error(\"Unable to call the interface method\");\n    }\n    handle_query_modifier() {\n        return; // Reimplement if you need to handle a boolean query modifier that can be used like this: `SELECT * WITH (modifiername)`\n    }\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    }\n    async get_header() {\n        return null; // Reimplement if your class can provide input header\n    }\n}\n\n\nclass RBQLOutputWriter {\n    constructor(){}\n\n    async write(fields) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    async finish() {\n        // Reimplement if your class needs to do something on finish e.g. cleanup\n    };\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n\n    set_header() {\n        return; // Reimplement if your class can handle output headers in a meaningful way\n    }\n}\n\n\nclass RBQLTableRegistry {\n    constructor(){}\n\n    get_iterator_by_table_id(table_id) {\n        throw new Error(\"Unable to call the interface method\");\n    }\n\n    get_warnings() {\n        return []; // Reimplement if your class can produce warnings\n    };\n}\n\n\nclass TableIterator extends RBQLInputIterator {\n    constructor(table, column_names=null, normalize_column_names=true, variable_prefix='a') {\n        super();\n        this.table = table;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n        this.variable_prefix = variable_prefix;\n        this.nr = 0;\n        this.fields_info = new Object();\n        this.stopped = false;\n    }\n\n\n    stop() {\n        this.stopped = true;\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        parse_array_variables(query_text, this.variable_prefix, variable_map);\n        if (this.column_names !== null) {\n            if (this.table.length && this.column_names.length != this.table[0].length)\n                throw new RbqlIOHandlingError('List of column names and table records have different lengths');\n            if (this.normalize_column_names) {\n                parse_dictionary_variables(query_text, this.variable_prefix, this.column_names, variable_map);\n                parse_attribute_variables(query_text, this.variable_prefix, this.column_names, 'column names list', variable_map);\n            } else {\n                map_variables_directly(query_text, this.column_names, variable_map);\n            }\n        }\n        return variable_map;\n    };\n\n\n    async get_record() {\n        if (this.stopped)\n            return null;\n        if (this.nr >= this.table.length)\n            return null;\n        let record = this.table[this.nr];\n        this.nr += 1;\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.nr;\n        return record;\n    };\n\n    get_warnings() {\n        if (Object.keys(this.fields_info).length > 1)\n            return [make_inconsistent_num_fields_warning('input', this.fields_info)];\n        return [];\n    };\n\n    async get_header() {\n        return this.column_names;\n    }\n}\n\n\nclass TableWriter extends RBQLOutputWriter {\n    constructor(external_table) {\n        super();\n        this.table = external_table;\n        this.header = null;\n    }\n\n    async write(fields) {\n        this.table.push(fields);\n        return true;\n    };\n\n    set_header(header) {\n        this.header = header;\n    }\n}\n\n\nclass SingleTableRegistry extends RBQLTableRegistry {\n    constructor(table, column_names=null, normalize_column_names=true, table_id='b') {\n        super();\n        this.table = table;\n        this.table_id = table_id;\n        this.column_names = column_names;\n        this.normalize_column_names = normalize_column_names;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        if (table_id.toLowerCase() !== this.table_id)\n            throw new RbqlIOHandlingError(`Unable to find join table: \"${table_id}\"`);\n        return new TableIterator(this.table, this.column_names, this.normalize_column_names, 'b');\n    };\n}\n\n\nasync function shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context) {\n    query_text = cleanup_query(query_text);\n    var [format_expression, string_literals] = separate_string_literals(query_text);\n    format_expression = remove_redundant_table_name(format_expression);\n\n    var rb_actions = separate_actions(format_expression);\n    if (rb_actions.hasOwnProperty(WITH)) {\n        input_iterator.handle_query_modifier(rb_actions[WITH]);\n    }\n    var input_variables_map = await input_iterator.get_variables_map(query_text);\n\n    if (rb_actions.hasOwnProperty(ORDER_BY) && rb_actions.hasOwnProperty(UPDATE))\n        throw new RbqlParsingError('\"ORDER BY\" is not allowed in \"UPDATE\" queries');\n\n    if (rb_actions.hasOwnProperty(GROUP_BY)) {\n        if (rb_actions.hasOwnProperty(ORDER_BY) || rb_actions.hasOwnProperty(UPDATE))\n            throw new RbqlParsingError('\"ORDER BY\", \"UPDATE\" and \"DISTINCT\" keywords are not allowed in aggregate queries');\n        query_context.aggregation_key_expression = '[' + combine_string_literals(rb_actions[GROUP_BY]['text'], string_literals) + ']';\n    }\n\n    let join_variables_map = null;\n    let join_header = null;\n    if (rb_actions.hasOwnProperty(JOIN)) {\n        var [rhs_table_id, variable_pairs] = parse_join_expression(rb_actions[JOIN]['text']);\n        if (join_tables_registry === null)\n            throw new RbqlParsingError('JOIN operations are not supported by the application');\n        let join_record_iterator = join_tables_registry.get_iterator_by_table_id(rhs_table_id);\n        if (!join_record_iterator)\n            throw new RbqlParsingError(`Unable to find join table: \"${rhs_table_id}\"`);\n        if (rb_actions.hasOwnProperty(WITH)) {\n            join_record_iterator.handle_query_modifier(rb_actions[WITH]);\n        }\n        join_variables_map = await join_record_iterator.get_variables_map(query_text);\n        join_header = await join_record_iterator.get_header();\n        let [lhs_variables, rhs_indices] = resolve_join_variables(input_variables_map, join_variables_map, variable_pairs, string_literals);\n        let sql_join_type = {'JOIN': InnerJoiner, 'INNER JOIN': InnerJoiner, 'LEFT JOIN': LeftJoiner, 'LEFT OUTER JOIN': LeftJoiner, 'STRICT LEFT JOIN': StrictLeftJoiner}[rb_actions[JOIN]['join_subtype']];\n        query_context.lhs_join_var_expression = lhs_variables.length == 1 ? lhs_variables[0] : 'JSON.stringify([' + lhs_variables.join(',') + '])';\n        query_context.join_map_impl = new HashJoinMap(join_record_iterator, rhs_indices);\n        await query_context.join_map_impl.build();\n        query_context.join_map = new sql_join_type(query_context.join_map_impl);\n    }\n\n    query_context.variables_init_code = combine_string_literals(generate_init_statements(format_expression, input_variables_map, join_variables_map, ' '.repeat(4)), string_literals);\n\n    if (rb_actions.hasOwnProperty(WHERE)) {\n        var where_expression = rb_actions[WHERE]['text'];\n        if (/[^><!=]=[^=]/.exec(where_expression))\n            throw new RbqlParsingError('Assignments \"=\" are not allowed in \"WHERE\" expressions. For equality test use \"==\" or \"===\"');\n        query_context.where_expression = combine_string_literals(where_expression, string_literals);\n    }\n\n    let input_header = await input_iterator.get_header();\n    if (rb_actions.hasOwnProperty(UPDATE)) {\n        var update_expression = translate_update_expression(rb_actions[UPDATE]['text'], input_variables_map, string_literals, ' '.repeat(8));\n        query_context.update_expressions = combine_string_literals(update_expression, string_literals);\n        query_context.writer.set_header(input_header);\n    }\n\n    if (rb_actions.hasOwnProperty(SELECT)) {\n        query_context.top_count = find_top(rb_actions);\n        if (rb_actions.hasOwnProperty(EXCEPT)) {\n            let [output_header, select_expression] = translate_except_expression(rb_actions[EXCEPT]['text'], input_variables_map, string_literals, input_header);\n            query_context.select_expression = select_expression;\n            query_context.writer.set_header(output_header);\n        } else {\n            let [select_expression, select_expression_for_ast] = translate_select_expression(rb_actions[SELECT]['text']);\n            query_context.select_expression = combine_string_literals(select_expression, string_literals);\n            let column_infos = adhoc_parse_select_expression_to_column_infos(select_expression_for_ast, string_literals);\n            let output_header = select_output_header(input_header, join_header, column_infos);\n            query_context.writer.set_header(output_header);\n        }\n\n        query_context.writer = new TopWriter(query_context.writer, query_context.top_count);\n        if (rb_actions[SELECT].hasOwnProperty('distinct_count')) {\n            query_context.writer = new UniqCountWriter(query_context.writer);\n        } else if (rb_actions[SELECT].hasOwnProperty('distinct')) {\n            query_context.writer = new UniqWriter(query_context.writer);\n        }\n    }\n\n    if (rb_actions.hasOwnProperty(ORDER_BY)) {\n        query_context.sort_key_expression = combine_string_literals(rb_actions[ORDER_BY]['text'], string_literals);\n        let reverse_sort = rb_actions[ORDER_BY]['reverse'];\n        query_context.writer = new SortedWriter(query_context.writer, reverse_sort);\n    }\n}\n\n\nasync function query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry=null, user_init_code='') {\n    query_context = new RBQLContext(query_text, input_iterator, output_writer, user_init_code);\n    await shallow_parse_input_query(query_text, input_iterator, join_tables_registry, query_context);\n    await compile_and_run(query_context);\n    await query_context.writer.finish();\n    output_warnings.push(...input_iterator.get_warnings());\n    if (query_context.join_map_impl)\n        output_warnings.push(...query_context.join_map_impl.get_warnings());\n    output_warnings.push(...output_writer.get_warnings());\n}\n\n\nasync function query_table(query_text, input_table, output_table, output_warnings, join_table=null, input_column_names=null, join_column_names=null, output_column_names=null, normalize_column_names=true, user_init_code='') {\n    if (!normalize_column_names && input_column_names !== null && join_column_names !== null)\n        ensure_no_ambiguous_variables(query_text, input_column_names, join_column_names);\n    let input_iterator = new TableIterator(input_table, input_column_names, normalize_column_names);\n    let output_writer = new TableWriter(output_table);\n    let join_tables_registry = join_table === null ? null : new SingleTableRegistry(join_table, join_column_names, normalize_column_names);\n    await query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    if (output_column_names !== null) {\n        assert(output_column_names.length == 0, '`output_column_names` param must be an empty list or null');\n        if (output_writer.header !== null) {\n            for (let column_name of output_writer.header) {\n                output_column_names.push(column_name);\n            }\n        }\n    }\n}\n\n\nfunction exception_to_error_info(e) {\n    let exceptions_type_map = {\n        'RbqlRuntimeError': 'query execution',\n        'RbqlParsingError': 'query parsing',\n        'SyntaxError': 'JS syntax error',\n        'RbqlIOHandlingError': 'IO handling'\n    };\n    let error_type = 'unexpected';\n    if (e.constructor && e.constructor.name && exceptions_type_map.hasOwnProperty(e.constructor.name)) {\n        error_type = exceptions_type_map[e.constructor.name];\n    }\n    let error_msg = e.hasOwnProperty('message') ? e.message : String(e);\n    return [error_type, error_msg];\n}\n\n\nexports.query = query;\nexports.query_table = query_table;\nexports.RBQLInputIterator = RBQLInputIterator;\nexports.RBQLOutputWriter = RBQLOutputWriter;\nexports.RBQLTableRegistry = RBQLTableRegistry;\n\nexports.version = RBQL_VERSION;\nexports.TableIterator = TableIterator;\nexports.TableWriter = TableWriter;\nexports.SingleTableRegistry = SingleTableRegistry;\nexports.exception_to_error_info = exception_to_error_info;\n\n\n// The functions below are exported just for unit tests, they are not part of the rbql API\n// TODO exports through the special unit_test proxy e.g. exports.unit_test.parse_basic_variables = parse_basic_variables;\nexports.parse_basic_variables = parse_basic_variables;\nexports.parse_array_variables = parse_array_variables;\nexports.parse_dictionary_variables = parse_dictionary_variables;\nexports.parse_attribute_variables = parse_attribute_variables;\nexports.get_all_matches = get_all_matches;\nexports.strip_comments = strip_comments;\nexports.separate_actions = separate_actions;\nexports.separate_string_literals = separate_string_literals;\nexports.combine_string_literals = combine_string_literals;\nexports.parse_join_expression = parse_join_expression;\nexports.resolve_join_variables = resolve_join_variables;\nexports.translate_update_expression = translate_update_expression;\nexports.translate_select_expression = translate_select_expression;\nexports.translate_except_expression = translate_except_expression;\nexports.like_to_regex = like_to_regex;\nexports.adhoc_parse_select_expression_to_column_infos = adhoc_parse_select_expression_to_column_infos;\nexports.replace_star_count = replace_star_count;\nexports.replace_star_vars_for_header_parsing = replace_star_vars_for_header_parsing;\nexports.select_output_header = select_output_header;\n\n}(typeof exports === 'undefined' ? this.rbql = {} : exports));\n","const fs = require('fs');\nconst os = require('os');\nconst path = require('path');\nconst util = require('util');\n\nconst rbql = require('./rbql.js');\nconst csv_utils = require('./csv_utils.js');\n\n\nconst utf_decoding_error = 'Unable to decode input table as UTF-8. Use binary (latin-1) encoding instead';\n\n\nclass RbqlIOHandlingError extends Error {}\nclass AssertionError extends Error {}\n\n\n// TODO performance improvement: replace smart_split() with polymorphic_split()\n\n\nfunction assert(condition, message=null) {\n    if (!condition) {\n        if (!message) {\n            message = 'Assertion error';\n        }\n        throw new AssertionError(message);\n    }\n}\n\n\nfunction interpret_named_csv_format(format_name) {\n    format_name = format_name.toLowerCase();\n    if (format_name == 'monocolumn')\n        return ['', 'monocolumn'];\n    if (format_name == 'csv')\n        return [',', 'quoted'];\n    if (format_name == 'tsv')\n        return ['\\t', 'simple'];\n    throw new RbqlIOHandlingError(`Unknown format name: \"${format_name}\"`);\n}\n\n\n\nfunction is_ascii(str) {\n    return /^[\\x00-\\x7F]*$/.test(str);\n}\n\n\nfunction read_user_init_code(rbql_init_source_path) {\n    return fs.readFileSync(rbql_init_source_path, 'utf-8');\n}\n\n\nfunction remove_utf8_bom(line, assumed_source_encoding) {\n    if (assumed_source_encoding == 'binary' && line.length >= 3 && line.charCodeAt(0) === 0xEF && line.charCodeAt(1) === 0xBB && line.charCodeAt(2) === 0xBF) {\n        return line.substring(3);\n    }\n    if (assumed_source_encoding == 'utf-8' && line.length >= 1 && line.charCodeAt(0) === 0xFEFF) {\n        return line.substring(1);\n    }\n    return line;\n}\n\n\nfunction make_inconsistent_num_fields_warning(table_name, inconsistent_records_info) {\n    let keys = Object.keys(inconsistent_records_info);\n    let entries = [];\n    for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let record_id = inconsistent_records_info[key];\n        entries.push([record_id, key]);\n    }\n    entries.sort(function(a, b) { return a[0] - b[0]; });\n    assert(entries.length > 1);\n    let [record_1, num_fields_1] = entries[0];\n    let [record_2, num_fields_2] = entries[1];\n    let warn_msg = `Number of fields in \"${table_name}\" table is not consistent: `;\n    warn_msg += `e.g. record ${record_1} -> ${num_fields_1} fields, record ${record_2} -> ${num_fields_2} fields`;\n    return warn_msg;\n}\n\n\nfunction expanduser(filepath) {\n    if (filepath.charAt(0) === '~') {\n        return path.join(os.homedir(), filepath.slice(1));\n    }\n    return filepath;\n}\n\n\nfunction try_read_index(index_path) {\n    var content = null;\n    try {\n        content = fs.readFileSync(index_path, 'utf-8');\n    } catch (e) {\n        return [];\n    }\n    var lines = content.split('\\n');\n    var records = [];\n    for (var i = 0; i < lines.length; i++) {\n        if (!lines[i])\n            continue;\n        var record = lines[i].split('\\t');\n        records.push(record);\n    }\n    return records;\n}\n\n\nfunction get_index_record(index_path, key) {\n    var records = try_read_index(index_path);\n    for (var i = 0; i < records.length; i++) {\n        if (records[i].length && records[i][0] == key) {\n            return records[i];\n        }\n    }\n    return null;\n}\n\n\nfunction find_table_path(main_table_dir, table_id) {\n    // If table_id is a relative path it could be relative either to the current directory or to the main table dir.\n    var candidate_path = expanduser(table_id);\n    if (fs.existsSync(candidate_path)) {\n        return candidate_path;\n    }\n    if (main_table_dir && !path.isAbsolute(candidate_path)) {\n        candidate_path = path.join(main_table_dir, candidate_path);\n        if (fs.existsSync(candidate_path)) {\n            return candidate_path;\n        }\n    }\n    let table_names_settings_path = path.join(os.homedir(), '.rbql_table_names');\n    var name_record = get_index_record(table_names_settings_path, table_id);\n    if (name_record && name_record.length > 1 && fs.existsSync(name_record[1])) {\n        return name_record[1];\n    }\n    return null;\n}\n\n\nclass RecordQueue {\n    // TODO compare performance with a linked list\n    constructor() {\n        this.push_stack = [];\n        this.pull_stack = [];\n    }\n\n    enqueue(record) {\n        this.push_stack.push(record);\n    }\n\n    dequeue() {\n        if (!this.pull_stack.length) {\n            if (!this.push_stack.length)\n                return null;\n            this.pull_stack = this.push_stack;\n            this.pull_stack.reverse();\n            this.push_stack = [];\n        }\n        return this.pull_stack.pop();\n    }\n}\n\n\nclass CSVRecordIterator extends rbql.RBQLInputIterator {\n    // CSVRecordIterator implements a typical async producer-consumer model with an internal buffer:\n    // get_record() - consumer\n    // stream.on('data') - producer\n    constructor(stream, csv_path, encoding, delim, policy, has_header=false, comment_prefix=null, table_name='input', variable_prefix='a') {\n        super();\n        this.stream = stream;\n        this.csv_path = csv_path;\n        assert((this.stream === null) != (this.csv_path === null));\n        this.encoding = encoding;\n        this.delim = delim;\n        this.policy = policy;\n\n        this.has_header = has_header;\n        this.first_record = null;\n        this.first_record_should_be_emitted = !has_header;\n        this.header_preread_complete = false;\n\n        this.table_name = table_name;\n        this.variable_prefix = variable_prefix;\n        this.comment_prefix = (comment_prefix !== null && comment_prefix.length) ? comment_prefix : null;\n\n        this.decoder = null;\n        if (encoding == 'utf-8' && this.csv_path === null) {\n            // Unfortunately util.TextDecoder has serious flaws:\n            // 1. It doesn't work in Node without ICU: https://nodejs.org/api/util.html#util_new_textdecoder_encoding_options\n            // 2. It is broken in Electron: https://github.com/electron/electron/issues/18733\n\n            // Technically we can implement our own custom streaming text decoder, using the 3 following technologies:\n            // 1. decode-encode validation method from https://stackoverflow.com/a/32279283/2898283\n            // 2. Scanning buffer chunks for non-continuation utf-8 bytes from the end of the buffer:\n            //    src_buffer -> (buffer_before, buffer_after) where buffer_after is very small(a couple of bytes) and buffer_before is large and ends with a non-continuation bytes\n            // 3. Internal buffer to store small tail part from the previous buffer\n            this.decoder = new util.TextDecoder(encoding, {fatal: true, stream: true});\n        }\n\n        this.input_exhausted = false;\n        this.started = false;\n\n        this.utf8_bom_removed = false; // BOM doesn't get automatically removed by the decoder when utf-8 file is treated as latin-1\n        this.first_defective_line = null;\n\n        this.fields_info = new Object();\n        this.NR = 0; // Record number\n        this.NL = 0; // Line number (NL != NR when the CSV file has comments or multiline fields)\n\n        this.rfc_line_buffer = [];\n\n        this.partially_decoded_line = '';\n        this.partially_decoded_line_ends_with_cr = false;\n\n        // Holds an external \"resolve\" function which is called when everything is fine.\n        this.resolve_current_record = null;\n        // Holds an external \"reject\" function which is called when error has occured.\n        this.reject_current_record = null;\n        // Holds last exception if we don't have any reject callbacks from clients yet.\n        this.current_exception = null;\n\n        this.produced_records_queue = new RecordQueue();\n\n        this.process_line_polymorphic = policy == 'quoted_rfc' ? this.process_partial_rfc_record_line : this.process_record_line;\n    }\n\n\n    handle_query_modifier(modifier) {\n        // For `... WITH (header) ...` syntax\n        if (['header', 'headers'].indexOf(modifier) != -1) {\n            this.has_header = true;\n            this.first_record_should_be_emitted = false;\n        }\n        if (['noheader', 'noheaders'].indexOf(modifier) != -1) {\n            this.has_header = false;\n            this.first_record_should_be_emitted = true;\n        }\n    }\n\n\n    reset_external_callbacks() {\n        // Drop external callbacks simultaneously since promises can only resolve once, see: https://stackoverflow.com/a/18218542/2898283\n        this.reject_current_record = null;\n        this.resolve_current_record = null;\n    }\n\n    try_propagate_exception() {\n        if (this.current_exception && this.reject_current_record) {\n            let reject = this.reject_current_record;\n            let exception = this.current_exception;\n            this.reset_external_callbacks();\n            this.current_exception = null;\n            reject(exception);\n        }\n    }\n\n\n    store_or_propagate_exception(exception) {\n        if (this.current_exception === null)\n            // Ignore subsequent exceptions if we already have an unreported error. This way we prioritize earlier errors over the more recent ones.\n            this.current_exception = exception;\n        this.try_propagate_exception();\n    }\n\n\n    async preread_first_record() {\n        if (this.header_preread_complete)\n            return;\n        this.first_record = await this.get_record();\n        this.header_preread_complete = true; // We must set header_preread_complete to true after calling get_record(), because get_record() uses it internally.\n        if (this.first_record === null) {\n            return;\n        }\n        if (this.stream)\n            this.stream.pause();\n        this.first_record = this.first_record.slice();\n    };\n\n\n    async get_variables_map(query_text) {\n        let variable_map = new Object();\n        rbql.parse_basic_variables(query_text, this.variable_prefix, variable_map);\n        rbql.parse_array_variables(query_text, this.variable_prefix, variable_map);\n\n        await this.preread_first_record();\n        if (this.has_header && this.first_record) {\n            rbql.parse_attribute_variables(query_text, this.variable_prefix, this.first_record, 'CSV header line', variable_map);\n            rbql.parse_dictionary_variables(query_text, this.variable_prefix, this.first_record, variable_map);\n        }\n        return variable_map;\n    };\n\n    async get_header() {\n        await this.preread_first_record();\n        return this.has_header ? this.first_record : null;\n    }\n\n\n    try_resolve_next_record() {\n        this.try_propagate_exception();\n        if (this.resolve_current_record === null)\n            return;\n\n        let record = null;\n        if (this.first_record_should_be_emitted && this.header_preread_complete) {\n            this.first_record_should_be_emitted = false;\n            record = this.first_record;\n        } else {\n            record = this.produced_records_queue.dequeue();\n        }\n\n        if (record === null && !this.input_exhausted)\n            return;\n        let resolve = this.resolve_current_record;\n        this.reset_external_callbacks();\n        resolve(record);\n    };\n\n\n    async get_record() {\n        if (!this.started)\n            await this.start();\n        if (this.stream && this.stream.isPaused())\n            this.stream.resume();\n\n        let parent_iterator = this;\n        let current_record_promise = new Promise(function(resolve, reject) {\n            parent_iterator.resolve_current_record = resolve;\n            parent_iterator.reject_current_record = reject;\n        });\n        this.try_resolve_next_record();\n        return current_record_promise;\n    };\n\n\n    async get_all_records(num_records=null) {\n        let records = [];\n        while (true) {\n            let record = await this.get_record();\n            if (record === null)\n                break;\n            records.push(record);\n            if (num_records && records.length >= num_records) {\n                this.stop();\n                break;\n            }\n        }\n        return records;\n    };\n\n\n    process_record_line(line) {\n        if (this.comment_prefix !== null && line.startsWith(this.comment_prefix))\n            return; // Just skip the line\n        this.NR += 1;\n        var [record, warning] = csv_utils.smart_split(line, this.delim, this.policy, false);\n        if (warning) {\n            if (this.first_defective_line === null) {\n                this.first_defective_line = this.NL;\n                if (this.policy == 'quoted_rfc')\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(`Inconsistent double quote escaping in ${this.table_name} table at record ${this.NR}, line ${this.NL}`));\n            }\n        }\n        let num_fields = record.length;\n        if (!this.fields_info.hasOwnProperty(num_fields))\n            this.fields_info[num_fields] = this.NR;\n        this.produced_records_queue.enqueue(record);\n        this.try_resolve_next_record();\n    };\n\n\n    process_partial_rfc_record_line(line) {\n        let record_line = csv_utils.accumulate_rfc_line_into_record(this.rfc_line_buffer, line, this.comment_prefix);\n        if (record_line !== null)\n            this.process_record_line(record_line);\n    };\n\n\n    process_line(line) {\n        this.NL += 1;\n        if (this.NL === 1) {\n            var clean_line = remove_utf8_bom(line, this.encoding);\n            if (clean_line != line) {\n                line = clean_line;\n                this.utf8_bom_removed = true;\n            }\n        }\n        this.process_line_polymorphic(line);\n    };\n\n\n    process_data_stream_chunk(data_chunk) {\n        let decoded_string = null;\n        if (this.decoder) {\n            try {\n                decoded_string = this.decoder.decode(data_chunk);\n            } catch (e) {\n                if (e instanceof TypeError) {\n                    this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                } else {\n                    this.store_or_propagate_exception(e);\n                }\n                return;\n            }\n        } else {\n            decoded_string = data_chunk.toString(this.encoding);\n        }\n        let line_starts_with_lf = decoded_string.length && decoded_string[0] == '\\n';\n        let first_line_index = line_starts_with_lf && this.partially_decoded_line_ends_with_cr ? 1 : 0;\n        this.partially_decoded_line_ends_with_cr = decoded_string.length && decoded_string[decoded_string.length - 1] == '\\r';\n        let lines = csv_utils.split_lines(decoded_string);\n        lines[0] = this.partially_decoded_line + lines[0];\n        assert(first_line_index == 0 || lines[0].length == 0);\n        this.partially_decoded_line = lines.pop();\n        for (let i = first_line_index; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n    };\n\n\n    process_data_bulk(data_chunk) {\n        let decoded_string = data_chunk.toString(this.encoding);\n        if (this.encoding == 'utf-8') {\n            // Using hacky comparison method from here: https://stackoverflow.com/a/32279283/2898283\n            // TODO get rid of this once TextDecoder is really fixed or when alternative method of reliable decoding appears\n            let control_buffer = Buffer.from(decoded_string, 'utf-8');\n            if (Buffer.compare(data_chunk, control_buffer) != 0) {\n                this.store_or_propagate_exception(new RbqlIOHandlingError(utf_decoding_error));\n                return;\n            }\n        }\n        let lines = csv_utils.split_lines(decoded_string);\n        if (lines.length && lines[lines.length - 1].length == 0)\n            lines.pop();\n        for (let i = 0; i < lines.length; i++) {\n            this.process_line(lines[i]);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.input_exhausted = true;\n        this.try_resolve_next_record(); // Should be a NOOP here?\n    }\n\n\n    process_data_stream_end() {\n        this.input_exhausted = true;\n        if (this.partially_decoded_line.length) {\n            let last_line = this.partially_decoded_line;\n            this.partially_decoded_line = '';\n            this.process_line(last_line);\n        }\n        if (this.rfc_line_buffer.length > 0) {\n            this.process_record_line(this.rfc_line_buffer.join('\\n'));\n        }\n        this.try_resolve_next_record();\n    };\n\n\n    stop() {\n        if (this.stream)\n            this.stream.destroy(); // TODO consider using pause() instead\n    };\n\n\n    async start() {\n        if (this.started)\n            return;\n        this.started = true;\n        if (this.stream) {\n            this.stream.on('data', (data_chunk) => { this.process_data_stream_chunk(data_chunk); });\n            this.stream.on('end', () => { this.process_data_stream_end(); });\n        } else {\n            let parent_iterator = this;\n            return new Promise(function(resolve, reject) {\n                fs.readFile(parent_iterator.csv_path, (err, data_chunk) => {\n                    if (err) {\n                        reject(err);\n                    } else {\n                        parent_iterator.process_data_bulk(data_chunk);\n                        resolve();\n                    }\n                });\n            });\n        }\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.first_defective_line !== null)\n            result.push(`Inconsistent double quote escaping in ${this.table_name} table. E.g. at line ${this.first_defective_line}`);\n        if (this.utf8_bom_removed)\n            result.push(`UTF-8 Byte Order Mark (BOM) was found and skipped in ${this.table_name} table`);\n        if (Object.keys(this.fields_info).length > 1)\n            result.push(make_inconsistent_num_fields_warning(this.table_name, this.fields_info));\n        return result;\n    };\n}\n\n\nclass CSVWriter extends rbql.RBQLOutputWriter {\n    constructor(stream, close_stream_on_finish, encoding, delim, policy, line_separator='\\n') {\n        super();\n        this.stream = stream;\n        this.encoding = encoding;\n        if (encoding)\n            this.stream.setDefaultEncoding(encoding);\n        this.stream.on('error', (error_obj) => { this.store_first_error(error_obj); })\n        this.delim = delim;\n        this.policy = policy;\n        this.line_separator = line_separator;\n        this.sub_array_delim = delim == '|' ? ';' : '|';\n\n        this.close_stream_on_finish = close_stream_on_finish;\n\n        this.null_in_output = false;\n        this.delim_in_simple_output = false;\n        this.header_len = null;\n        this.first_error = null;\n\n        if (policy == 'simple') {\n            this.polymorphic_join = this.simple_join;\n        } else if (policy == 'quoted') {\n            this.polymorphic_join = this.quoted_join;\n        } else if (policy == 'quoted_rfc') {\n            this.polymorphic_join = this.quoted_join_rfc;\n        } else if (policy == 'monocolumn') {\n            this.polymorphic_join = this.mono_join;\n        } else if (policy == 'whitespace') {\n            this.polymorphic_join = this.simple_join;\n        } else {\n            throw new RbqlIOHandlingError('Unknown output csv policy');\n        }\n    }\n\n\n    store_first_error(error_obj) {\n        // Store only first error because it is typically more important than the subsequent ones.\n        if (this.first_error === null)\n            this.first_error = error_obj;\n    }\n\n    set_header(header) {\n        if (header !== null) {\n            this.header_len = header.length;\n            this.write(header);\n        }\n    }\n\n\n    quoted_join(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    quoted_join_rfc(fields) {\n        let delim = this.delim;\n        var quoted_fields = fields.map(function(v) { return csv_utils.rfc_quote_field(String(v), delim); });\n        return quoted_fields.join(this.delim);\n    };\n\n\n    mono_join(fields) {\n        if (fields.length > 1) {\n            throw new RbqlIOHandlingError('Unable to use \"Monocolumn\" output format: some records have more than one field');\n        }\n        return fields[0];\n    };\n\n\n    simple_join(fields) {\n        var res = fields.join(this.delim);\n        if (fields.join('').indexOf(this.delim) != -1) {\n            this.delim_in_simple_output = true;\n        }\n        return res;\n    };\n\n\n    normalize_fields(out_fields) {\n        for (var i = 0; i < out_fields.length; i++) {\n            if (out_fields[i] == null) {\n                this.null_in_output = true;\n                out_fields[i] = '';\n            } else if (Array.isArray(out_fields[i])) {\n                this.normalize_fields(out_fields[i]);\n                out_fields[i] = out_fields[i].join(this.sub_array_delim);\n            }\n        }\n    };\n\n\n    async write(fields) {\n        if (this.header_len !== null && fields.length != this.header_len)\n            throw new RbqlIOHandlingError(`Inconsistent number of columns in output header and the current record: ${this.header_len} != ${fields.length}`);\n        this.normalize_fields(fields);\n        this.stream.write(this.polymorphic_join(fields));\n        this.stream.write(this.line_separator);\n        let writer_error = this.first_error;\n        return new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            } else {\n                resolve(true);\n            }\n        });\n    };\n\n\n    _write_all(table) {\n        for (let i = 0; i < table.length; i++) {\n            this.write(table[i]);\n        }\n    };\n\n\n    async finish() {\n        let close_stream_on_finish = this.close_stream_on_finish;\n        let output_stream = this.stream;\n        let output_encoding = this.encoding;\n        let writer_error = this.first_error;\n        let finish_promise = new Promise(function(resolve, reject) {\n            if (writer_error !== null) {\n                reject(writer_error);\n            }\n            if (close_stream_on_finish) {\n                output_stream.end('', output_encoding, () => { resolve(); });\n            } else {\n                setTimeout(() => { resolve(); }, 0);\n            }\n        });\n        return finish_promise;\n    };\n\n\n    get_warnings() {\n        let result = [];\n        if (this.null_in_output)\n            result.push('null values in output were replaced by empty strings');\n        if (this.delim_in_simple_output)\n            result.push('Some output fields contain separator');\n        return result;\n    };\n\n}\n\n\nclass FileSystemCSVRegistry extends rbql.RBQLTableRegistry {\n    constructor(input_file_dir, delim, policy, encoding, has_header=false, comment_prefix=null, options=null) {\n        super();\n        this.input_file_dir = input_file_dir;\n        this.delim = delim;\n        this.policy = policy;\n        this.encoding = encoding;\n        this.has_header = has_header;\n        this.comment_prefix = comment_prefix;\n        this.stream = null;\n        this.record_iterator = null;\n\n        this.options = options;\n        this.bulk_input_path = null;\n        this.table_path = null;\n    }\n\n    get_iterator_by_table_id(table_id) {\n        this.table_path = find_table_path(this.input_file_dir, table_id);\n        if (this.table_path === null) {\n            throw new RbqlIOHandlingError(`Unable to find join table \"${table_id}\"`);\n        }\n        if (this.options && this.options['bulk_read']) {\n            this.bulk_input_path = this.table_path;\n        } else {\n            this.stream = fs.createReadStream(this.table_path);\n        }\n        this.record_iterator = new CSVRecordIterator(this.stream, this.bulk_input_path, this.encoding, this.delim, this.policy, this.has_header, this.comment_prefix, table_id, 'b');\n        return this.record_iterator;\n    };\n\n    get_warnings(output_warnings) {\n        if (this.record_iterator && this.has_header) {\n            output_warnings.push(`The first record in JOIN file ${path.basename(this.table_path)} was also treated as header (and skipped)`);\n        }\n    }\n}\n\n\nasync function query_csv(query_text, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, output_warnings, with_headers=false, comment_prefix=null, user_init_code='', options=null) {\n    let input_stream = null;\n    let bulk_input_path = null;\n    if (options && options['bulk_read'] && input_path) {\n        bulk_input_path = input_path;\n    } else {\n        input_stream = input_path === null ? process.stdin : fs.createReadStream(input_path);\n    }\n    let [output_stream, close_output_on_finish] = output_path === null ? [process.stdout, false] : [fs.createWriteStream(output_path), true];\n    if (input_delim == '\"' && input_policy == 'quoted')\n        throw new RbqlIOHandlingError('Double quote delimiter is incompatible with \"quoted\" policy');\n    if (csv_encoding == 'latin-1')\n        csv_encoding = 'binary';\n    if (!is_ascii(query_text) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n    if ((!is_ascii(input_delim) || !is_ascii(output_delim)) && csv_encoding == 'binary')\n        throw new RbqlIOHandlingError('To use non-ascii characters in query enable UTF-8 encoding instead of latin-1/binary');\n\n    let default_init_source_path = path.join(os.homedir(), '.rbql_init_source.js');\n    if (user_init_code == '' && fs.existsSync(default_init_source_path)) {\n        user_init_code = read_user_init_code(default_init_source_path);\n    }\n    let input_file_dir = input_path ? path.dirname(input_path) : null;\n    let join_tables_registry = new FileSystemCSVRegistry(input_file_dir, input_delim, input_policy, csv_encoding, with_headers, comment_prefix, options);\n    let input_iterator = new CSVRecordIterator(input_stream, bulk_input_path, csv_encoding, input_delim, input_policy, with_headers, comment_prefix);\n    let output_writer = new CSVWriter(output_stream, close_output_on_finish, csv_encoding, output_delim, output_policy);\n\n    await rbql.query(query_text, input_iterator, output_writer, output_warnings, join_tables_registry, user_init_code);\n    join_tables_registry.get_warnings(output_warnings);\n}\n\n\nmodule.exports.is_ascii = is_ascii;\nmodule.exports.CSVRecordIterator = CSVRecordIterator;\nmodule.exports.CSVWriter = CSVWriter;\nmodule.exports.FileSystemCSVRegistry = FileSystemCSVRegistry;\nmodule.exports.interpret_named_csv_format = interpret_named_csv_format;\nmodule.exports.read_user_init_code = read_user_init_code;\nmodule.exports.query_csv = query_csv;\nmodule.exports.RecordQueue = RecordQueue;\nmodule.exports.exception_to_error_info = rbql.exception_to_error_info;\n","module.exports = require(\"vscode\");","'use strict';\n\nvar possibleNames = [\n\t'BigInt64Array',\n\t'BigUint64Array',\n\t'Float32Array',\n\t'Float64Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Int8Array',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray'\n];\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\nmodule.exports = function availableTypedArrays() {\n\tvar out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar $gOPD = GetIntrinsic('%Object.getOwnPropertyDescriptor%', true);\nif ($gOPD) {\n\ttry {\n\t\t$gOPD([], 'length');\n\t} catch (e) {\n\t\t// IE 8 has a broken gOPD\n\t\t$gOPD = null;\n\t}\n}\n\nmodule.exports = $gOPD;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","const vscode = require('vscode');\n\nconst path = require('path');\nconst fs = require('fs');\nconst os = require('os');\nconst child_process = require('child_process');\n\n// Please see DEV_README.md file for additional info.\n\nconst csv_utils = require('./rbql_core/rbql-js/csv_utils.js');\n\nvar rbql_csv = null; // Using lazy load to improve startup performance.\nfunction ll_rbql_csv() {\n    if (rbql_csv === null)\n        rbql_csv = require('./rbql_core/rbql-js/rbql_csv.js');\n    return rbql_csv;\n}\n\n\nvar rainbow_utils = null; // Using lazy load to improve startup performance.\nfunction ll_rainbow_utils() {\n    if (rainbow_utils === null)\n        rainbow_utils = require('./rainbow_utils.js');\n    return rainbow_utils;\n}\n\n\nconst is_web_ext = (os.homedir === undefined); // Runs as web extension in browser.\nconst preview_window_size = 100;\nconst max_preview_field_length = 250;\nconst scratch_buf_marker = 'vscode_rbql_scratch';\n\nlet client_html_template_web = null;\n\nvar lint_results = new Map();\nvar aligned_files = new Set();\nvar autodetection_stoplist = new Set();\nvar original_language_ids = new Map();\nvar result_set_parent_map = new Map();\n\nvar lint_status_bar_button = null;\nvar rbql_status_bar_button = null;\nvar align_shrink_button = null;\nvar rainbow_off_status_bar_button = null;\nvar copy_back_button = null;\n\nlet last_statusbar_doc = null;\n\nvar rbql_context = null;\n\nvar last_rbql_queries = new Map(); // Query history does not replace this structure, it is also used to store partially entered queries for preview window switch.\n\nvar client_html_template = null;\n\nvar global_state = null;\n\nvar preview_panel = null;\n\nvar doc_edit_subscription = null;\n\nvar _unit_test_last_rbql_report = null; // For unit tests only.\nvar _unit_test_last_warnings = null; // For unit tests only.\n\nconst dialect_map = {\n    'csv': [',', 'quoted'],\n    'tsv': ['\\t', 'simple'],\n    'csv (semicolon)': [';', 'quoted'],\n    'csv (pipe)': ['|', 'simple'],\n    'csv (tilde)': ['~', 'simple'],\n    'csv (caret)': ['^', 'simple'],\n    'csv (colon)': [':', 'simple'],\n    'csv (double quote)': ['\"', 'simple'],\n    'csv (equals)': ['=', 'simple'],\n    'csv (dot)': ['.', 'simple'],\n    'csv (whitespace)': [' ', 'whitespace'],\n    'csv (hyphen)': ['-', 'simple']\n};\n\n\n// This structure will get properly initialized during the startup.\nlet absolute_path_map = {\n    'rbql_client.js': null,\n    'contrib/textarea-caret-position/index.js': null,\n    'rbql_suggest.js': null,\n    'rbql_logo.svg': null,\n    'rbql_client.html': null,\n    'rbql mock/rbql_mock.py': null,\n    'rbql_core/vscode_rbql.py': null\n};\n\n\nfunction show_single_line_error(error_msg) {\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    // Do not \"await\" error messages because the promise gets resolved only on error dismissal.\n    active_window.showErrorMessage(error_msg);\n}\n\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\nfunction map_separator_to_language_id(separator) {\n    for (let language_id in dialect_map) {\n        if (!dialect_map.hasOwnProperty(language_id))\n            continue;\n        if (dialect_map[language_id][0] == separator)\n            return language_id;\n    }\n    return null;\n}\n\n\nfunction get_from_global_state(key, default_value) {\n    if (global_state) {\n        var value = global_state.get(key);\n        if (value !== null && value !== undefined)\n            return value;\n    }\n    return default_value;\n}\n\n\nasync function save_to_global_state(key, value) {\n    if (global_state && key) {\n        await global_state.update(key, value);\n        return true;\n    }\n    return false;\n}\n\n\nfunction get_rfc_record_text(document, record_start, record_end) {\n    let result = [];\n    for (let i = record_start; i < record_end && i < document.lineCount; i++) {\n        result.push(document.lineAt(i).text);\n    }\n    return result.join('\\n');\n}\n\n\nfunction sample_preview_records_from_context(rbql_context, dst_message) {\n    let document = rbql_context.input_document;\n    let delim = rbql_context.delim;\n    let policy = rbql_context.policy;\n\n    rbql_context.requested_start_record = Math.max(rbql_context.requested_start_record, 0);\n\n    let preview_records = [];\n    if (rbql_context.enable_rfc_newlines) {\n        let requested_end_record = rbql_context.requested_start_record + preview_window_size;\n        ll_rainbow_utils().populate_optimistic_rfc_csv_record_map(document, requested_end_record, rbql_context.rfc_record_map);\n        rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, rbql_context.rfc_record_map.length - preview_window_size));\n        for (let nr = rbql_context.requested_start_record; nr < rbql_context.rfc_record_map.length && preview_records.length < preview_window_size; nr++) {\n            let [record_start, record_end] = rbql_context.rfc_record_map[nr];\n            let record_text = get_rfc_record_text(document, record_start, record_end);\n            let [cur_record, warning] = csv_utils.smart_split(record_text, delim, policy, false);\n            if (warning) {\n                dst_message.preview_sampling_error = `Double quotes are not consistent in record ${nr + 1} which starts at line ${record_start + 1}`;\n                return;\n            }\n            preview_records.push(cur_record);\n        }\n    } else {\n        let num_records = document.lineCount;\n        if (document.lineAt(Math.max(num_records - 1, 0)).text == '')\n            num_records -= 1;\n        rbql_context.requested_start_record = Math.max(0, Math.min(rbql_context.requested_start_record, num_records - preview_window_size));\n        for (let nr = rbql_context.requested_start_record; nr < num_records && preview_records.length < preview_window_size; nr++) {\n            let line_text = document.lineAt(nr).text;\n            let cur_record = csv_utils.smart_split(line_text, delim, policy, false)[0];\n            preview_records.push(cur_record);\n        }\n    }\n\n    for (let r = 0; r < preview_records.length; r++) {\n        let cur_record = preview_records[r];\n        for (let c = 0; c < cur_record.length; c++) {\n            if (cur_record[c].length > max_preview_field_length) {\n                cur_record[c] = cur_record[c].substr(0, max_preview_field_length) + '###UI_STRING_TRIM_MARKER###';\n            }\n        }\n    }\n    dst_message.preview_records = preview_records;\n    dst_message.start_record_zero_based = rbql_context.requested_start_record;\n}\n\n\nfunction make_header_key(file_path) {\n    return 'rbql_header:' + file_path;\n}\n\n\nfunction make_rfc_policy_key(file_path) {\n    return 'enable_rfc_newlines:' + file_path;\n}\n\n\nfunction make_with_headers_key(file_path) {\n    return 'rbql_with_headers:' + file_path;\n}\n\n\nfunction get_header_from_document(document, delim, policy) {\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix = config ? config.get('comment_prefix') : '';\n    let header_line = ll_rainbow_utils().get_header_line(document, comment_prefix);\n    return csv_utils.smart_split(header_line, delim, policy, /*preserve_quotes_and_whitespaces=*/false)[0];\n}\n\n\nfunction get_header(document, delim, policy) {\n    var file_path = document.fileName;\n    if (file_path) {\n        let raw_header = get_from_global_state(make_header_key(file_path), null);\n        if (raw_header) {\n            return JSON.parse(raw_header);\n        }\n    }\n    return get_header_from_document(document, delim, policy);\n}\n\n\nfunction get_field_by_line_position(fields, query_pos) {\n    if (!fields.length)\n        return null;\n    var col_num = 0;\n    var cpos = fields[col_num].length + 1;\n    while (query_pos > cpos && col_num + 1 < fields.length) {\n        col_num += 1;\n        cpos = cpos + fields[col_num].length + 1;\n    }\n    return col_num;\n}\n\n\nfunction make_hover_text(document, position, language_id, enable_tooltip_column_names, enable_tooltip_warnings) {\n    let [delim, policy] = dialect_map[language_id];\n    var lnum = position.line;\n    var cnum = position.character;\n    var line = document.lineAt(lnum).text;\n\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix = config ? config.get('comment_prefix') : '';\n    if (comment_prefix && line.startsWith(comment_prefix))\n        return 'Comment';\n\n    var report = csv_utils.smart_split(line, delim, policy, true);\n\n    var entries = report[0];\n    var warning = report[1];\n    var col_num = get_field_by_line_position(entries, cnum + 1);\n\n    if (col_num == null)\n        return null;\n    var result = 'Col #' + (col_num + 1);\n\n    var header = get_header(document, delim, policy);\n    if (enable_tooltip_column_names && col_num < header.length) {\n        const max_label_len = 50;\n        let column_label = header[col_num].trim();\n        var short_column_label = column_label.substr(0, max_label_len);\n        if (short_column_label != column_label)\n            short_column_label = short_column_label + '...';\n        result += ', Header: \"' + short_column_label + '\"';\n    }\n    if (enable_tooltip_warnings) {\n        if (warning) {\n            result += '; ERR: Inconsistent double quotes in line';\n        } else if (header.length != entries.length) {\n            result += `; WARN: Inconsistent num of fields, header: ${header.length}, this line: ${entries.length}`;\n        }\n    }\n    return result;\n}\n\n\nfunction make_hover(document, position, language_id, cancellation_token) {\n    if (last_statusbar_doc != document) {\n        refresh_status_bar_buttons(document); // Being paranoid and making sure that the buttons are visible.\n    }\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config)\n        return;\n    if (!config.get('enable_tooltip'))\n        return;\n    let enable_tooltip_column_names = config.get('enable_tooltip_column_names');\n    let enable_tooltip_warnings = config.get('enable_tooltip_warnings');\n    var hover_text = make_hover_text(document, position, language_id, enable_tooltip_column_names, enable_tooltip_warnings);\n    if (hover_text && !cancellation_token.isCancellationRequested) {\n        let mds = null;\n        try {\n            mds = new vscode.MarkdownString();\n            mds.appendCodeblock(hover_text, 'rainbow hover markup');\n        } catch (e) {\n            mds = hover_text; // Older VSCode versions may not have MarkdownString/appendCodeblock functionality.\n        }\n        return new vscode.Hover(mds);\n    } else {\n        return null;\n    }\n}\n\n\nfunction produce_lint_report(active_doc, delim, policy, config) {\n    let comment_prefix = config.get('comment_prefix');\n    let detect_trailing_spaces = config.get('csv_lint_detect_trailing_spaces');\n    let first_trailing_space_line = null;\n    var num_lines = active_doc.lineCount;\n    var num_fields = null;\n    for (var lnum = 0; lnum < num_lines; lnum++) {\n        var line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        var split_result = csv_utils.smart_split(line_text, delim, policy, true);\n        if (split_result[1]) {\n            return 'Error. Line ' + (lnum + 1) + ' has formatting error: double quote chars are not consistent';\n        }\n        if (detect_trailing_spaces && first_trailing_space_line === null) {\n            let fields = split_result[0];\n            for (let i = 0; i < fields.length; i++) {\n                if (fields[i].length && (fields[i].charAt(0) == ' ' || fields[i].slice(-1) == ' ')) {\n                    first_trailing_space_line = lnum;\n                }\n            }\n        }\n        if (!num_fields) {\n            num_fields = split_result[0].length;\n        }\n        if (num_fields != split_result[0].length) {\n            return 'Error. Number of fields is not consistent: e.g. line 1 has ' + num_fields + ' fields, and line ' + (lnum + 1) + ' has ' + split_result[0].length + ' fields.';\n        }\n    }\n    if (first_trailing_space_line !== null) {\n        return 'Leading/Trailing spaces detected: e.g. at line ' + (first_trailing_space_line + 1) + '. Run \"Shrink\" command to remove them.';\n    }\n    return 'OK';\n}\n\n\nfunction get_active_editor() {\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    var active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return null;\n    return active_editor;\n}\n\n\nfunction get_active_doc(active_editor=null) {\n    if (!active_editor)\n        active_editor = get_active_editor();\n    if (!active_editor)\n        return null;\n    var active_doc = active_editor.document;\n    if (!active_doc)\n        return null;\n    return active_doc;\n}\n\n\nfunction show_lint_status_bar_button(file_path, language_id) {\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!lint_results.has(lint_cache_key))\n        return;\n    var lint_report = lint_results.get(lint_cache_key);\n    if (!lint_status_bar_button)\n        lint_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    lint_status_bar_button.text = 'CSVLint';\n    if (lint_report === 'OK') {\n        lint_status_bar_button.color = '#62f442';\n    } else if (lint_report == 'Processing...') {\n        lint_status_bar_button.color = '#A0A0A0';\n    } else if (lint_report.indexOf('spaces detected') != -1) {\n        lint_status_bar_button.color = '#ffff28';\n    } else {\n        lint_status_bar_button.color = '#f44242';\n    }\n    lint_status_bar_button.tooltip = lint_report + '\\nClick to recheck';\n    lint_status_bar_button.command = 'rainbow-csv.CSVLint';\n    lint_status_bar_button.show();\n}\n\n\nfunction show_align_shrink_button(file_path) {\n    if (!align_shrink_button)\n        align_shrink_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    if (aligned_files.has(file_path)) {\n        align_shrink_button.text = 'Shrink';\n        align_shrink_button.tooltip = 'Click to shrink table (Then you can click again to align)';\n        align_shrink_button.command = 'rainbow-csv.Shrink';\n    } else {\n        align_shrink_button.text = 'Align';\n        align_shrink_button.tooltip = 'Click to align table (Then you can click again to shrink)';\n        align_shrink_button.command = 'rainbow-csv.Align';\n    }\n    align_shrink_button.show();\n}\n\n\nfunction show_rainbow_off_status_bar_button() {\n    if (!rainbow_off_status_bar_button)\n        rainbow_off_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rainbow_off_status_bar_button.text = 'Rainbow OFF';\n    rainbow_off_status_bar_button.tooltip = 'Click to restore original file type and syntax';\n    rainbow_off_status_bar_button.command = 'rainbow-csv.RainbowSeparatorOff';\n    rainbow_off_status_bar_button.show();\n}\n\n\nfunction show_rbql_status_bar_button() {\n    if (!rbql_status_bar_button)\n        rbql_status_bar_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    rbql_status_bar_button.text = 'Query';\n    rbql_status_bar_button.tooltip = 'Click to run SQL-like RBQL query';\n    rbql_status_bar_button.command = 'rainbow-csv.RBQL';\n    rbql_status_bar_button.show();\n}\n\n\nfunction hide_status_bar_buttons() {\n    let all_buttons = [lint_status_bar_button, rbql_status_bar_button, rainbow_off_status_bar_button, copy_back_button, align_shrink_button];\n    for (let i = 0; i < all_buttons.length; i++) {\n        if (all_buttons[i])\n            all_buttons[i].hide();\n    }\n}\n\n\nfunction show_rbql_copy_to_source_button(file_path) {\n    let parent_table_path = result_set_parent_map.get(file_path.toLowerCase());\n    if (!parent_table_path || parent_table_path.indexOf(scratch_buf_marker) != -1)\n        return;\n    let parent_basename = path.basename(parent_table_path);\n    if (!copy_back_button)\n        copy_back_button = vscode.window.createStatusBarItem(vscode.StatusBarAlignment.Left);\n    copy_back_button.text = 'Copy Back';\n    copy_back_button.tooltip = `Copy to parent table: ${parent_basename}`;\n    copy_back_button.command = 'rainbow-csv.CopyBack';\n    copy_back_button.show();\n}\n\n\nfunction refresh_status_bar_buttons(active_doc=null) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    last_statusbar_doc = active_doc;\n    var file_path = active_doc ? active_doc.fileName : null;\n    if (!active_doc || !file_path) {\n        hide_status_bar_buttons();\n        return;\n    }\n    if (file_path.endsWith('.git')) {\n        return; // Sometimes for git-controlled dirs VSCode opens mysterious .git files. Skip them, don't hide buttons.\n    }\n    hide_status_bar_buttons();\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    show_lint_status_bar_button(file_path, language_id);\n    show_rbql_status_bar_button();\n    show_align_shrink_button(file_path);\n    show_rainbow_off_status_bar_button();\n    show_rbql_copy_to_source_button(file_path);\n}\n\n\nfunction csv_lint(active_doc, is_manual_op) {\n    if (!active_doc)\n        active_doc = get_active_doc();\n    if (!active_doc)\n        return null;\n    var file_path = active_doc.fileName; // For new unitled scratch documents this would be \"Untitled-1\", \"Untitled-2\", etc...\n    if (!file_path)\n        return null;\n    var language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return null;\n    let lint_cache_key = `${file_path}.${language_id}`;\n    if (!is_manual_op) {\n        if (lint_results.has(lint_cache_key))\n            return null;\n        const config = vscode.workspace.getConfiguration('rainbow_csv');\n        if (config && config.get('enable_auto_csv_lint') === false)\n            return null;\n    }\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config)\n        return null;\n    lint_results.set(lint_cache_key, 'Processing...');\n    refresh_status_bar_buttons(active_doc); // Visual feedback.\n    let [delim, policy] = dialect_map[language_id];\n    var lint_report = produce_lint_report(active_doc, delim, policy, config);\n    lint_results.set(lint_cache_key, lint_report);\n    return lint_report;\n}\n\n\nasync function csv_lint_cmd() {\n    // TODO re-run on each file save with content change.\n    let lint_report = csv_lint(null, true);\n    // Need timeout here to give user enough time to notice green -> yellow -> green switch, this is a sort of visual feedback.\n    await sleep(500);\n    refresh_status_bar_buttons();\n    return lint_report;\n}\n\n\nasync function run_internal_test_cmd(integration_test_options) {\n    if (integration_test_options && integration_test_options.check_initialization_state) {\n        // This mode is to ensure that the most basic operations do not cause rainbow csv to load extra (potentially heavy) code.\n        // Vim uses the same approach with its plugin/autoload folder layout design.\n        return {initialized: global_state !== null, lazy_loaded: rainbow_utils !== null};\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_report) {\n        return _unit_test_last_rbql_report;\n    }\n    if (integration_test_options && integration_test_options.check_last_rbql_warnings) {\n        return {'warnings': _unit_test_last_warnings};\n    }\n    return null;\n}\n\n\nasync function show_warnings(warnings) {\n    _unit_test_last_warnings = [];\n    if (!warnings || !warnings.length)\n        return;\n    var active_window = vscode.window;\n    if (!active_window)\n        return null;\n    for (var i = 0; i < warnings.length; i++) {\n        // Do not \"await\" warning messages because the promise gets resolved only on warning dismissal.\n        active_window.showWarningMessage('RBQL warning: ' + warnings[i]);\n    }\n    _unit_test_last_warnings = warnings;\n}\n\n\nasync function handle_rbql_result_file(text_doc, warnings) {\n    var out_delim = rbql_context.output_delim;\n    let language_id = map_separator_to_language_id(out_delim);\n    var active_window = vscode.window;\n    if (!active_window)\n        return;\n    try {\n        await active_window.showTextDocument(text_doc);\n    } catch (error) {\n        show_single_line_error('Unable to open RBQL result document');\n        return;\n    }\n    if (language_id && text_doc.language_id != language_id) {\n        console.log('changing RBQL result language ' + text_doc.language_id + ' -> ' + language_id);\n        await vscode.languages.setTextDocumentLanguage(text_doc, language_id);\n    }\n    await show_warnings(warnings);\n}\n\n\nfunction run_command(cmd, args, close_and_error_guard, callback_func) {\n    var command = child_process.spawn(cmd, args, {'windowsHide': true});\n    var stdout = '';\n    var stderr = '';\n    command.stdout.on('data', function(data) {\n        stdout += data.toString();\n    });\n    command.stderr.on('data', function(data) {\n        stderr += data.toString();\n    });\n    command.on('close', function(code) {\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(code, stdout, stderr);\n        }\n    });\n    command.on('error', function(error) {\n        var error_msg = error ? error.name + ': ' + error.message : '';\n        if (!close_and_error_guard['process_reported']) {\n            close_and_error_guard['process_reported'] = true;\n            callback_func(1, '', 'Something went wrong. Make sure you have python installed and added to PATH variable in your OS. Or you can use it with JavaScript instead - it should work out of the box\\nDetails:\\n' + error_msg);\n        }\n    });\n}\n\n\nasync function handle_command_result(src_table_path, dst_table_path, error_code, stdout, stderr, webview_report_handler) {\n    let json_report = stdout;\n    let error_type = null;\n    let error_msg = null;\n    let warnings = [];\n    if (error_code || !json_report || stderr) {\n        error_type = 'Integration';\n        error_msg = stderr ? stderr : 'empty error';\n    } else {\n        try {\n            let report = JSON.parse(json_report);\n            if (report.hasOwnProperty('error_type'))\n                error_type = report['error_type'];\n            if (report.hasOwnProperty('error_msg'))\n                error_msg = report['error_msg'];\n            if (report.hasOwnProperty('warnings'))\n                warnings = report['warnings'];\n        } catch (e) {\n            error_type = 'Integration';\n            error_msg = 'Unable to parse JSON report';\n        }\n    }\n    webview_report_handler(error_type, error_msg);\n    if (error_type || error_msg) {\n        return; // Just exit: error would be shown in the preview window.\n    }\n    // No need to close the RBQL console here, better to leave it open so it can be used to quickly adjust the query if needed.\n    autodetection_stoplist.add(dst_table_path);\n    result_set_parent_map.set(dst_table_path.toLowerCase(), src_table_path);\n    let doc = await vscode.workspace.openTextDocument(dst_table_path);\n    await handle_rbql_result_file(doc, warnings);\n}\n\n\nfunction get_dst_table_name(input_path, output_delim) {\n    var table_name = path.basename(input_path);\n    var orig_extension = path.extname(table_name);\n    var delim_ext_map = {'\\t': '.tsv', ',': '.csv'};\n    var dst_extension = '.txt';\n    if (delim_ext_map.hasOwnProperty(output_delim)) {\n        dst_extension = delim_ext_map[output_delim];\n    } else if (orig_extension.length > 1) {\n        dst_extension = orig_extension;\n    }\n    let result_table_name = table_name + dst_extension;\n    if (result_table_name == table_name) { // Just being paranoid to avoid overwriting input table accidentally when output dir configured to be the same as input.\n        result_table_name += '.txt';\n    }\n    return result_table_name;\n}\n\n\nfunction file_path_to_query_key(file_path) {\n    return (file_path && file_path.indexOf(scratch_buf_marker) != -1) ? scratch_buf_marker : file_path;\n}\n\nfunction get_dst_table_dir(input_table_path) {\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config)\n        return os.tmpdir();\n    if (config.get('rbql_output_dir') == 'TMP') {\n        return os.tmpdir();\n    } else if (config.get('rbql_output_dir') == 'INPUT') {\n        return path.dirname(input_table_path);\n    } else {\n        // If the directory does not exist or isn't writable RBQL itself will report more or less clear error.\n        return config.get('rbql_output_dir');\n    }\n}\n\n\nasync function run_rbql_query(input_path, csv_encoding, backend_language, rbql_query, output_dialect, enable_rfc_newlines, with_headers, webview_report_handler) {\n    last_rbql_queries.set(file_path_to_query_key(input_path), rbql_query);\n    var cmd = 'python';\n    const test_marker = 'test ';\n    let close_and_error_guard = {'process_reported': false};\n\n    let [input_delim, input_policy] = [rbql_context.delim, rbql_context.policy];\n    if (input_policy == 'quoted' && enable_rfc_newlines)\n        input_policy = 'quoted_rfc';\n    let [output_delim, output_policy] = [input_delim, input_policy];\n    if (output_dialect == 'csv')\n        [output_delim, output_policy] = [',', 'quoted']; // XXX should it be \"quoted_rfc\" instead?\n    if (output_dialect == 'tsv')\n        [output_delim, output_policy] = ['\\t', 'simple'];\n    rbql_context.output_delim = output_delim;\n\n    let output_path = is_web_ext ? null : path.join(get_dst_table_dir(input_path), get_dst_table_name(input_path, output_delim));\n\n    if (rbql_query.startsWith(test_marker)) {\n        if (rbql_query.indexOf('nopython') != -1) {\n            cmd = 'nopython';\n        }\n        let args = [absolute_path_map['rbql mock/rbql_mock.py'], rbql_query];\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, error_code, stdout, stderr, webview_report_handler); });\n        return;\n    }\n    if (backend_language == 'js') {\n        let warnings = [];\n        let result_doc = null;\n        try {\n            if (is_web_ext) {\n                let result_lines = await ll_rainbow_utils().rbql_query_web(rbql_query, rbql_context.input_document, input_delim, input_policy, output_delim, output_policy, warnings, with_headers, null);\n                let output_doc_cfg = {content: result_lines.join('\\n'), language: map_separator_to_language_id(output_delim)};\n                result_doc = await vscode.workspace.openTextDocument(output_doc_cfg);\n            } else {\n                let csv_options = {'bulk_read': true};\n                await ll_rainbow_utils().rbql_query_node(global_state, rbql_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding, warnings, with_headers, null, '', csv_options);\n                result_set_parent_map.set(output_path.toLowerCase(), input_path);\n                autodetection_stoplist.add(output_path);\n                result_doc = await vscode.workspace.openTextDocument(output_path);\n            }\n        } catch (e) {\n            let [error_type, error_msg] = ll_rbql_csv().exception_to_error_info(e);\n            webview_report_handler(error_type, error_msg);\n            return;\n        }\n        webview_report_handler(null, null);\n        await handle_rbql_result_file(result_doc, warnings);\n    } else {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'Python backend for RBQL is not supported in web version, please use JavaScript backend.');\n            return;\n        }\n        let cmd_safe_query = Buffer.from(rbql_query, \"utf-8\").toString(\"base64\");\n        let args = [absolute_path_map['rbql_core/vscode_rbql.py'], cmd_safe_query, input_path, input_delim, input_policy, output_path, output_delim, output_policy, csv_encoding];\n        if (with_headers)\n            args.push('--with_headers');\n        run_command(cmd, args, close_and_error_guard, function(error_code, stdout, stderr) { handle_command_result(input_path, output_path, error_code, stdout, stderr, webview_report_handler); });\n    }\n}\n\n\nfunction get_dialect(document) {\n    var language_id = document.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return ['monocolumn', 'monocolumn'];\n    return dialect_map[language_id];\n}\n\n\nasync function set_header_line() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n\n    var dialect = get_dialect(active_doc);\n    var delim = dialect[0];\n    var policy = dialect[1];\n    if (policy == 'monocolumn') {\n        show_single_line_error('Unable to set header line: no separator specified');\n        return;\n    }\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to set header line for non-file documents');\n        return;\n    }\n    let selection = active_editor.selection;\n    let raw_header = active_doc.lineAt(selection.start.line).text;\n\n    let header = csv_utils.smart_split(raw_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), JSON.stringify(header));\n}\n\n\nasync function set_rainbow_separator() {\n    let active_editor = get_active_editor();\n    if (!active_editor)\n        return;\n    var active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let original_language_id = active_doc.languageId;\n    let selection = active_editor.selection;\n    if (!selection) {\n        show_single_line_error(\"Selection is empty\");\n        return;\n    }\n    if (selection.start.line != selection.end.line || selection.start.character + 1 != selection.end.character) {\n        show_single_line_error(\"Selection must contain exactly one separator character\");\n        return;\n    }\n    let separator = active_doc.lineAt(selection.start.line).text.charAt(selection.start.character);\n    let language_id = map_separator_to_language_id(separator);\n    if (!language_id) {\n        show_single_line_error(\"Selected separator is not supported\");\n        return;\n    }\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, language_id);\n    original_language_ids.set(doc.fileName, original_language_id);\n    csv_lint(doc, false);\n    refresh_status_bar_buttons(doc);\n}\n\n\nasync function restore_original_language() {\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    autodetection_stoplist.add(file_path);\n    let original_language_id = 'plaintext';\n    if (original_language_ids.has(file_path)) {\n        original_language_id = original_language_ids.get(file_path);\n    }\n    if (!original_language_id || original_language_id == active_doc.languageId) {\n        show_single_line_error(\"Unable to restore original language\");\n        return;\n    }\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, original_language_id);\n    original_language_ids.delete(file_path);\n    refresh_status_bar_buttons(doc);\n}\n\n\nasync function set_join_table_name() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var active_doc = get_active_doc();\n    if (!active_doc)\n        return;\n    let file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to use this document as join table');\n        return;\n    }\n    var title = \"Input table name to use in RBQL JOIN expressions instead of table path\";\n    var input_box_props = {\"prompt\": title, \"value\": 'b'};\n    let table_name = await vscode.window.showInputBox(input_box_props);\n    if (!table_name)\n        return; // User pressed Esc and closed the input box.\n    save_to_global_state(ll_rainbow_utils().make_table_name_key(table_name), file_path);\n}\n\n\nasync function set_virtual_header() {\n    var active_doc = get_active_doc();\n    var dialect = get_dialect(active_doc);\n    var delim = dialect[0];\n    var policy = dialect[1];\n    var file_path = active_doc.fileName;\n    if (!file_path) {\n        show_single_line_error('Unable to edit column names for non-file documents');\n        return;\n    }\n    if (policy == 'monocolumn') {\n        show_single_line_error('Unable to set virtual header: no separator specified');\n        return;\n    }\n    var old_header = get_header(active_doc, delim, policy);\n    var title = \"Adjust column names displayed in hover tooltips. Actual header line and file content won't be affected.\";\n    var old_header_str = quoted_join(old_header, delim);\n    var input_box_props = {\"prompt\": title, \"value\": old_header_str};\n    let raw_new_header = await vscode.window.showInputBox(input_box_props);\n    if (!raw_new_header)\n        return; // User pressed Esc and closed the input box.\n    let new_header = csv_utils.smart_split(raw_new_header, delim, policy, false)[0];\n    await save_to_global_state(make_header_key(file_path), JSON.stringify(new_header));\n}\n\n\nasync function column_edit(edit_mode) {\n    let active_editor = get_active_editor();\n    if (!active_editor || !active_editor.selection)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let dialect = get_dialect(active_doc);\n    let delim = dialect[0];\n    let policy = dialect[1];\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config)\n        return;\n    let comment_prefix = config.get('comment_prefix');\n\n    let position = active_editor.selection.active;\n    let lnum = position.line;\n    let cnum = position.character;\n    let line = active_doc.lineAt(lnum).text;\n\n    let report = csv_utils.smart_split(line, delim, policy, true);\n\n    let entries = report[0];\n    let quoting_warning = report[1];\n    let col_num = get_field_by_line_position(entries, cnum + 1);\n\n    let selections = [];\n    let num_lines = active_doc.lineCount;\n    if (num_lines >= 10000) {\n        show_single_line_error('Multicursor column edit works only for files smaller than 10000 lines.');\n        return;\n    }\n    for (let lnum = 0; lnum < num_lines; lnum++) {\n        let line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (comment_prefix && line_text.startsWith(comment_prefix))\n            continue;\n        let report = csv_utils.smart_split(line_text, delim, policy, true);\n        let entries = report[0];\n        quoting_warning = quoting_warning || report[1];\n        if (col_num >= entries.length) {\n            show_single_line_error(`Line ${lnum + 1} doesn't have field number ${col_num + 1}`);\n            return;\n        }\n        let char_pos_before = entries.slice(0, col_num).join('').length + col_num;\n        let char_pos_after = entries.slice(0, col_num + 1).join('').length + col_num;\n        if (edit_mode == 'ce_before' && policy == 'quoted' && line_text.substring(char_pos_before - 2, char_pos_before + 2).indexOf('\"') != -1) {\n            show_single_line_error(`Accidental data corruption prevention: Cursor at line ${lnum + 1} will not be set: a double quote is in proximity.`);\n            return;\n        }\n        if (edit_mode == 'ce_after' && policy == 'quoted' && line_text.substring(char_pos_after - 2, char_pos_after + 2).indexOf('\"') != -1) {\n            show_single_line_error(`Accidental data corruption prevention: Cursor at line ${lnum + 1} will not be set: a double quote is in proximity.`);\n            return;\n        }\n        if (edit_mode == 'ce_select' && char_pos_before == char_pos_after) {\n            show_single_line_error(`Accidental data corruption prevention: The column can not be selected: field ${col_num + 1} at line ${lnum + 1} is empty.`);\n            return;\n        }\n        let position_before = new vscode.Position(lnum, char_pos_before);\n        let position_after = new vscode.Position(lnum, char_pos_after);\n        if (edit_mode == 'ce_before') {\n            selections.push(new vscode.Selection(position_before, position_before));\n        }\n        if (edit_mode == 'ce_after') {\n            selections.push(new vscode.Selection(position_after, position_after));\n        }\n        if (edit_mode == 'ce_select') {\n            selections.push(new vscode.Selection(position_before, position_after));\n        }\n    }\n    active_editor.selections = selections;\n    if (quoting_warning) {\n        vscode.window.showWarningMessage('Some lines have quoting issues: cursors positioning may be incorrect.');\n    }\n    // Call showTextDocument so that the editor will gain focus and the cursors will become active and blinking. This is a critical step here!\n    await vscode.window.showTextDocument(active_doc);\n}\n\n\nasync function shrink_table(active_editor, edit_builder) {\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy] = dialect_map[language_id];\n    let [shrinked_doc_text, first_failed_line] = ll_rainbow_utils().shrink_columns(active_doc, delim, policy);\n    if (first_failed_line) {\n        show_single_line_error(`Unable to shrink: Inconsistent double quotes at line ${first_failed_line}`);\n        return;\n    }\n    aligned_files.delete(active_doc.fileName);\n    refresh_status_bar_buttons(active_doc);\n    if (shrinked_doc_text === null) {\n        vscode.window.showWarningMessage('No trailing whitespaces found, skipping');\n        return;\n    }\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    edit_builder.replace(full_range, shrinked_doc_text);\n}\n\n\nasync function align_table(active_editor, edit_builder) {\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let language_id = active_doc.languageId;\n    if (!dialect_map.hasOwnProperty(language_id))\n        return;\n    let [delim, policy] = dialect_map[language_id];\n    let [column_sizes, first_failed_line] = ll_rainbow_utils().calc_column_sizes(active_doc, delim, policy);\n    if (first_failed_line) {\n        show_single_line_error(`Unable to align: Inconsistent double quotes at line ${first_failed_line}`);\n        return;\n    }\n    let aligned_doc_text = ll_rainbow_utils().align_columns(active_doc, delim, policy, column_sizes);\n    aligned_files.add(active_doc.fileName);\n    refresh_status_bar_buttons(active_doc);\n    if (aligned_doc_text === null) {\n        vscode.window.showWarningMessage('Table is already aligned, skipping');\n        return;\n    }\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    edit_builder.replace(full_range, aligned_doc_text);\n}\n\n\nasync function do_copy_back(query_result_doc, active_editor) {\n    let data = query_result_doc.getText();\n    let active_doc = get_active_doc(active_editor);\n    if (!active_doc)\n        return;\n    let invalid_range = new vscode.Range(0, 0, active_doc.lineCount /* Intentionally missing the '-1' */, 0);\n    let full_range = active_doc.validateRange(invalid_range);\n    await active_editor.edit(edit => edit.replace(full_range, data));\n}\n\n\nasync function copy_back() {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    let result_doc = get_active_doc();\n    if (!result_doc)\n        return;\n    let file_path = result_doc.fileName;\n    let parent_table_path = result_set_parent_map.get(file_path.toLowerCase());\n    if (!parent_table_path)\n        return;\n    let parent_doc = await vscode.workspace.openTextDocument(parent_table_path);\n    let parent_editor = await vscode.window.showTextDocument(parent_doc);\n    await do_copy_back(result_doc, parent_editor);\n}\n\n\nasync function update_query_history(query) {\n    let history_list = get_from_global_state('rbql_query_history', []);\n    let old_index = history_list.indexOf(query);\n    if (old_index != -1) {\n        history_list.splice(old_index, 1);\n    } else if (history_list.length >= 20) {\n        history_list.splice(0, 1);\n    }\n    history_list.push(query);\n    await save_to_global_state('rbql_query_history', history_list);\n}\n\n\nasync function handle_rbql_client_message(webview, message, integration_test_options=null) {\n    let message_type = message['msg_type'];\n\n    let webview_report_handler = async function(error_type, error_msg) {\n        let report_msg = {'msg_type': 'rbql_report'};\n        if (error_type)\n            report_msg[\"error_type\"] = error_type;\n        if (error_msg)\n            report_msg[\"error_msg\"] = error_msg;\n        _unit_test_last_rbql_report = report_msg;\n        await webview.postMessage(report_msg);\n    };\n\n    if (message_type == 'handshake') {\n        var backend_language = get_from_global_state('rbql_backend_language', 'js');\n        var encoding = get_from_global_state('rbql_encoding', 'utf-8');\n        var init_msg = {'msg_type': 'handshake', 'backend_language': backend_language, 'encoding': encoding};\n        sample_preview_records_from_context(rbql_context, init_msg);\n        let path_key = file_path_to_query_key(rbql_context.input_document_path);\n        if (last_rbql_queries.has(path_key))\n            init_msg['last_query'] = last_rbql_queries.get(path_key);\n        let history_list = get_from_global_state('rbql_query_history', []);\n        init_msg['query_history'] = history_list;\n        init_msg['policy'] = rbql_context.policy;\n        init_msg['enable_rfc_newlines'] = rbql_context.enable_rfc_newlines;\n        init_msg['with_headers'] = rbql_context.with_headers;\n        init_msg['header'] = rbql_context.header;\n        init_msg['is_web_ext'] = is_web_ext;\n        if (integration_test_options) {\n            init_msg['integration_test_language'] = integration_test_options.rbql_backend;\n            init_msg['integration_test_query'] = integration_test_options.rbql_query;\n            init_msg['integration_test_with_headers'] = integration_test_options.with_headers || false;\n            init_msg['integration_test_enable_rfc_newlines'] = integration_test_options.enable_rfc_newlines || false;\n        }\n        await webview.postMessage(init_msg);\n    }\n\n    if (message_type == 'fetch_table_header') {\n        try {\n            let table_id = message['table_id'];\n            let encoding = message['encoding'];\n\n            let input_table_dir = rbql_context.input_document_path ? path.dirname(rbql_context.input_document_path) : null;\n            let table_path = ll_rainbow_utils().find_table_path(global_state, input_table_dir, table_id);\n            if (!table_path)\n                return;\n            let header_line = await ll_rainbow_utils().read_header(table_path, encoding);\n            let [fields, warning] = csv_utils.smart_split(header_line, rbql_context.delim, rbql_context.policy, false);\n            if (!warning) {\n                webview.postMessage({'msg_type': 'fetch_table_header_response', 'header': fields});\n            }\n        } catch (e) {\n            console.error('Unable to get join table header: ' + String(e));\n        }\n    }\n\n    if (message_type == 'update_query') {\n        let rbql_query = message['query'];\n        if (!rbql_query)\n            return;\n        if (rbql_context.input_document_path)\n            last_rbql_queries.set(file_path_to_query_key(rbql_context.input_document_path), rbql_query);\n    }\n\n    if (message_type == 'newlines_policy_change') {\n        rbql_context.enable_rfc_newlines = message['enable_rfc_newlines'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_rfc_policy_key(rbql_context.input_document_path), rbql_context.enable_rfc_newlines);\n        let protocol_message = {'msg_type': 'resample'};\n        sample_preview_records_from_context(rbql_context, protocol_message);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'with_headers_change') {\n        rbql_context.with_headers = message['with_headers'];\n        if (rbql_context.input_document_path)\n            await save_to_global_state(make_with_headers_key(rbql_context.input_document_path), rbql_context.with_headers);\n    }\n\n    if (message_type == 'navigate') {\n        var navig_direction = message['direction'];\n        if (navig_direction == 'backward') {\n            rbql_context.requested_start_record -= preview_window_size;\n        } else if (navig_direction == 'forward') {\n            rbql_context.requested_start_record += preview_window_size;\n        } else if (navig_direction == 'begin') {\n            rbql_context.requested_start_record = 0;\n        } else if (navig_direction == 'end') {\n            rbql_context.requested_start_record = rbql_context.input_document.lineCount; // This is just max possible value which is incorrect and will be adjusted later.\n        }\n        let protocol_message = {'msg_type': 'navigate'};\n        sample_preview_records_from_context(rbql_context, protocol_message);\n        await webview.postMessage(protocol_message);\n    }\n\n    if (message_type == 'run') {\n        let rbql_query = message['query'];\n        let backend_language = message['backend_language'];\n        let encoding = message['encoding'];\n        let output_dialect = message['output_dialect'];\n        let enable_rfc_newlines = message['enable_rfc_newlines'];\n        let with_headers = message['with_headers'];\n        await update_query_history(rbql_query);\n        await run_rbql_query(rbql_context.input_document_path, encoding, backend_language, rbql_query, output_dialect, enable_rfc_newlines, with_headers, webview_report_handler);\n    }\n\n    if (message_type == 'edit_udf') {\n        if (is_web_ext) {\n            webview_report_handler('Input error', 'UDFs are currently not supported in web version');\n            return;\n        }\n        let backend_language = message['backend_language'];\n        let udf_file_path = null;\n        let default_content = '';\n        if (backend_language == 'js') {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.js');\n            default_content = ll_rainbow_utils().get_default_js_udf_content();\n        } else {\n            udf_file_path = path.join(os.homedir(), '.rbql_init_source.py');\n            default_content = ll_rainbow_utils().get_default_python_udf_content();\n        }\n        if (!fs.existsSync(udf_file_path)) {\n            fs.writeFileSync(udf_file_path, default_content);\n        }\n        let udf_doc = await vscode.workspace.openTextDocument(udf_file_path);\n        await vscode.window.showTextDocument(udf_doc);\n    }\n\n    if (message_type == 'global_param_change') {\n        await save_to_global_state(message['key'], message['value']);\n    }\n}\n\n\nfunction adjust_webview_paths(paths_list, client_html) {\n    for (const local_path of paths_list) {\n        let adjusted_webview_url = null;\n        if (is_web_ext) {\n            adjusted_webview_url = absolute_path_map[local_path];\n        } else {\n            adjusted_webview_url = preview_panel.webview.asWebviewUri(vscode.Uri.file(absolute_path_map[local_path]));\n        }\n        client_html = client_html.replace(`src=\"${local_path}\"`, `src=\"${adjusted_webview_url}\"`);\n    }\n    return client_html;\n}\n\n\nasync function edit_rbql(integration_test_options=null) {\n    let active_window = vscode.window;\n    if (!active_window)\n        return;\n    let active_editor = active_window.activeTextEditor;\n    if (!active_editor)\n        return;\n    let active_doc = active_editor.document;\n    if (!active_doc)\n        return;\n    let orig_uri = active_doc.uri;\n    if (!orig_uri)\n        return;\n    // For web orig_uri.scheme can have other valid values e.g. `vscode-test-web` when testing the browser integration.\n    if (orig_uri.scheme != 'file' && orig_uri.scheme != 'untitled' && !is_web_ext)\n        return;\n    if (orig_uri.scheme == 'file' && active_doc.isDirty && !is_web_ext) {\n        show_single_line_error(\"Unable to run RBQL: file has unsaved changes\");\n        return;\n    }\n    let input_path = null;\n    if (orig_uri.scheme == 'untitled' && !is_web_ext) {\n        // Scheme 'untitled' means that the document is a scratch buffer that hasn't been saved yet, see https://code.visualstudio.com/api/references/document-selector\n        let data = active_doc.getText();\n        let rnd_suffix = String(Math.floor(Math.random() * 1000000));\n        input_path = path.join(os.tmpdir(), `${scratch_buf_marker}_${rnd_suffix}.txt`);\n        // TODO consider adding username to the input_path and using chmod 600 on it.\n        fs.writeFileSync(input_path, data);\n    } else {\n        input_path = active_doc.fileName;\n    }\n\n    if (!input_path) {\n        show_single_line_error(\"Unable to run RBQL for this file\");\n        return;\n    }\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let language_id = active_doc.languageId;\n    let delim = 'monocolumn';\n    let policy = 'monocolumn';\n    if (dialect_map.hasOwnProperty(language_id)) {\n        [delim, policy] = dialect_map[language_id];\n    }\n    let enable_rfc_newlines = get_from_global_state(make_rfc_policy_key(input_path), false);\n    let with_headers_by_default = config ? config.get('rbql_with_headers_by_default') : false;\n    let with_headers = get_from_global_state(make_with_headers_key(input_path), with_headers_by_default);\n    let header = get_header_from_document(active_doc, delim, policy);\n    rbql_context = {\n        \"input_document\": active_doc,\n        \"input_document_path\": input_path,\n        \"requested_start_record\": 0,\n        \"delim\": delim,\n        \"policy\": policy,\n        \"rfc_record_map\": [],\n        \"enable_rfc_newlines\": enable_rfc_newlines,\n        \"with_headers\": with_headers,\n        \"header\": header\n    };\n\n    preview_panel = vscode.window.createWebviewPanel('rbql-console', 'RBQL Console', vscode.ViewColumn.Active, {enableScripts: true});\n    if (!client_html_template) {\n        if (is_web_ext) {\n            client_html_template = client_html_template_web;\n        } else {\n            client_html_template = fs.readFileSync(absolute_path_map['rbql_client.html'], \"utf8\");\n        }\n    }\n    let client_html = client_html_template;\n    client_html = adjust_webview_paths(['contrib/textarea-caret-position/index.js', 'rbql_suggest.js', 'rbql_client.js', 'rbql_logo.svg'], client_html);\n    preview_panel.webview.html = client_html;\n    preview_panel.webview.onDidReceiveMessage(function(message) { handle_rbql_client_message(preview_panel.webview, message, integration_test_options); });\n}\n\n\nfunction get_num_columns_if_delimited(active_doc, delim, policy, min_num_columns, min_num_lines) {\n    var num_lines = active_doc.lineCount;\n    let num_fields = 0;\n    let num_lines_checked = 0;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let comment_prefix_for_autodetection = config ? config.get('comment_prefix') : '';\n    if (!comment_prefix_for_autodetection)\n        comment_prefix_for_autodetection = '#';\n    for (var lnum = 0; lnum < num_lines; lnum++) {\n        var line_text = active_doc.lineAt(lnum).text;\n        if (lnum + 1 == num_lines && !line_text)\n            break;\n        if (line_text.startsWith(comment_prefix_for_autodetection))\n            continue;\n        let [fields, warning] = csv_utils.smart_split(line_text, delim, policy, true);\n        if (warning)\n            return 0; // TODO don't fail on warnings?\n        if (!num_fields)\n            num_fields = fields.length;\n        if (num_fields < min_num_columns || num_fields != fields.length)\n            return 0;\n        num_lines_checked += 1;\n    }\n    return num_lines_checked >= min_num_lines ? num_fields : 0;\n}\n\n\nfunction autodetect_dialect(active_doc, candidate_separators) {\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let min_num_lines = config ? config.get('autodetection_min_line_count') : 10;\n    if (active_doc.lineCount < min_num_lines)\n        return null;\n\n    let best_dialect = null;\n    let best_dialect_num_columns = 1;\n    for (let i = 0; i < candidate_separators.length; i++) {\n        let dialect_id = map_separator_to_language_id(candidate_separators[i]);\n        if (!dialect_id)\n            continue;\n        let [delim, policy] = dialect_map[dialect_id];\n        let cur_dialect_num_columns = get_num_columns_if_delimited(active_doc, delim, policy, best_dialect_num_columns + 1, min_num_lines);\n        if (cur_dialect_num_columns > best_dialect_num_columns) {\n            best_dialect_num_columns = cur_dialect_num_columns;\n            best_dialect = dialect_id;\n        }\n    }\n    return best_dialect;\n}\n\n\nfunction autodetect_dialect_frequency_based(active_doc, candidate_separators) {\n    let best_dialect = 'csv';\n    let best_dialect_frequency = 0;\n    let data = active_doc.getText();\n    if (!data)\n        return best_dialect;\n    for (let i = 0; i < candidate_separators.length; i++) {\n        if (candidate_separators[i] == ' ' || candidate_separators[i] == '.')\n            continue; // Whitespace and dot have advantage over other separators in this algorithm, so we just skip them.\n        let dialect_id = map_separator_to_language_id(candidate_separators[i]);\n        let frequency = 0;\n        for (let j = 0; j < 10000 && j < data.length; j++) {\n            if (data[j] == candidate_separators[i])\n                frequency += 1;\n        }\n        if (frequency > best_dialect_frequency) {\n            best_dialect = dialect_id;\n            best_dialect_frequency = frequency;\n        }\n    }\n    return best_dialect;\n}\n\n\nasync function autoenable_rainbow_csv(active_doc) {\n    if (!active_doc)\n        return;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config || !config.get('enable_separator_autodetection'))\n        return;\n    let candidate_separators = config.get('autodetect_separators');\n    var original_language_id = active_doc.languageId;\n    var file_path = active_doc.fileName;\n    if (!file_path || autodetection_stoplist.has(file_path)) {\n        return;\n    }\n    let is_default_csv = file_path.endsWith('.csv') && original_language_id == 'csv';\n    if (original_language_id != 'plaintext' && !is_default_csv)\n        return;\n    let rainbow_csv_language_id = autodetect_dialect(active_doc, candidate_separators);\n    if (!rainbow_csv_language_id && is_default_csv) {\n        // Smart autodetection method has failed, but we need to choose a separator because this is a csv file. Let's just find the most popular one.\n        rainbow_csv_language_id = autodetect_dialect_frequency_based(active_doc, candidate_separators);\n    }\n    if (!rainbow_csv_language_id || rainbow_csv_language_id == original_language_id)\n        return;\n\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    original_language_ids.set(file_path, original_language_id);\n    csv_lint(doc, false);\n    refresh_status_bar_buttons(doc);\n}\n\n\nasync function handle_doc_edit(change_event) {\n    if (!change_event)\n        return;\n    if (doc_edit_subscription) {\n        doc_edit_subscription.dispose();\n        doc_edit_subscription = null;\n    }\n    let active_doc = change_event.document;\n    if (!active_doc)\n        return;\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    let candidate_separators = config.get('autodetect_separators');\n    let rainbow_csv_language_id = autodetect_dialect(active_doc, candidate_separators);\n    if (!rainbow_csv_language_id)\n        return;\n    let doc = await vscode.languages.setTextDocumentLanguage(active_doc, rainbow_csv_language_id);\n    csv_lint(doc, false);\n    refresh_status_bar_buttons(doc);\n}\n\n\nfunction register_csv_copy_paste(active_doc) {\n    const config = vscode.workspace.getConfiguration('rainbow_csv');\n    if (!config || !config.get('enable_separator_autodetection'))\n        return;\n    if (!active_doc || doc_edit_subscription)\n        return;\n    if (!active_doc.isUntitled && active_doc.lineCount != 0)\n        return;\n    doc_edit_subscription = vscode.workspace.onDidChangeTextDocument(handle_doc_edit);\n    return;\n}\n\n\nfunction handle_editor_switch(editor) {\n    let active_doc = get_active_doc(editor);\n    csv_lint(active_doc, false);\n    refresh_status_bar_buttons(active_doc);\n}\n\n\nasync function handle_doc_open(active_doc) {\n    await autoenable_rainbow_csv(active_doc);\n    register_csv_copy_paste(active_doc);\n    csv_lint(active_doc, false);\n    refresh_status_bar_buttons(active_doc);\n}\n\n\nfunction quote_field(field, delim) {\n    if (field.indexOf('\"') != -1 || field.indexOf(delim) != -1) {\n        return '\"' + field.replace(/\"/g, '\"\"') + '\"';\n    }\n    return field;\n}\n\n\nfunction quoted_join(fields, delim) {\n    var quoted_fields = fields.map(function(val) { return quote_field(val, delim); });\n    return quoted_fields.join(delim);\n}\n\n\nasync function make_preview(uri, preview_mode) {\n    if (is_web_ext) {\n        show_single_line_error('This command is currently unavailable in web mode.');\n        return;\n    }\n    var file_path = uri.fsPath;\n    if (!file_path || !fs.existsSync(file_path)) {\n        vscode.window.showErrorMessage('Invalid file');\n        return;\n    }\n\n    var size_limit = 1024000; // ~1MB\n    var file_size_in_bytes = fs.statSync(file_path)['size'];\n    if (file_size_in_bytes <= size_limit) {\n        vscode.window.showWarningMessage('Rainbow CSV: The file is not big enough, showing the full file instead. Use this preview for files larger than 1MB');\n        let full_orig_doc = await vscode.workspace.openTextDocument(file_path);\n        await vscode.window.showTextDocument(full_orig_doc);\n        return;\n    }\n\n    let file_basename = path.basename(file_path);\n    const out_path = path.join(os.tmpdir(), `.rb_csv_preview.${preview_mode}.${file_basename}`);\n\n    fs.open(file_path, 'r', (err, fd) => {\n        if (err) {\n            console.log(err.message);\n            vscode.window.showErrorMessage('Unable to preview file');\n            return;\n        }\n\n        var buffer = Buffer.alloc(size_limit);\n        let read_begin_pos = preview_mode == 'head' ? 0 : Math.max(file_size_in_bytes - size_limit, 0);\n        fs.read(fd, buffer, 0, size_limit, read_begin_pos, function(err, _num) {\n            if (err) {\n                console.log(err.message);\n                vscode.window.showErrorMessage('Unable to preview file');\n                return;\n            }\n\n            const buffer_str = buffer.toString();\n            // TODO handle old mac '\\r' line endings - still used by Mac version of Excel.\n            let content = null;\n            if (preview_mode == 'head') {\n                content = buffer_str.substr(0, buffer_str.lastIndexOf(buffer_str.includes('\\r\\n') ? '\\r\\n' : '\\n'));\n            } else {\n                content = buffer_str.substr(buffer_str.indexOf('\\n') + 1);\n            }\n            fs.writeFileSync(out_path, content);\n            vscode.workspace.openTextDocument(out_path).then(doc => vscode.window.showTextDocument(doc));\n        });\n    });\n}\n\n\nfunction register_csv_hover_info_provider(language_id, context) {\n    let hover_provider = vscode.languages.registerHoverProvider(language_id, {\n        provideHover(document, position, token) {\n            return make_hover(document, position, language_id, token);\n        }\n    });\n    context.subscriptions.push(hover_provider);\n}\n\n\nasync function activate(context) {\n    global_state = context.globalState;\n\n    if (is_web_ext) {\n        let rbql_client_uri = vscode.Uri.joinPath(context.extensionUri, 'rbql_client.html');\n        let bytes = await vscode.workspace.fs.readFile(rbql_client_uri);\n        // Using TextDecoder because it should work fine in web extension.\n        client_html_template_web = new TextDecoder().decode(bytes);\n    }\n\n    for (let local_path in absolute_path_map) {\n        if (absolute_path_map.hasOwnProperty(local_path)) {\n            if (is_web_ext) {\n                absolute_path_map[local_path] = vscode.Uri.joinPath(context.extensionUri, local_path);\n            } else {\n                absolute_path_map[local_path] = context.asAbsolutePath(local_path);\n            }\n        }\n    }\n\n    for (let language_id in dialect_map) {\n        if (dialect_map.hasOwnProperty(language_id)) {\n            register_csv_hover_info_provider(language_id, context);\n        }\n    }\n\n    var lint_cmd = vscode.commands.registerCommand('rainbow-csv.CSVLint', csv_lint_cmd);\n    var rbql_cmd = vscode.commands.registerCommand('rainbow-csv.RBQL', edit_rbql);\n    var set_header_line_cmd = vscode.commands.registerCommand('rainbow-csv.SetHeaderLine', set_header_line);\n    var edit_column_names_cmd = vscode.commands.registerCommand('rainbow-csv.SetVirtualHeader', set_virtual_header);\n    var set_join_table_name_cmd = vscode.commands.registerCommand('rainbow-csv.SetJoinTableName', set_join_table_name); // WEB_DISABLED\n    var column_edit_before_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditBefore', async function() { await column_edit('ce_before'); });\n    var column_edit_after_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditAfter', async function() { await column_edit('ce_after'); });\n    var column_edit_select_cmd = vscode.commands.registerCommand('rainbow-csv.ColumnEditSelect', async function() { await column_edit('ce_select'); });\n    var set_separator_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparator', set_rainbow_separator);\n    var rainbow_off_cmd = vscode.commands.registerCommand('rainbow-csv.RainbowSeparatorOff', restore_original_language);\n    var sample_head_cmd = vscode.commands.registerCommand('rainbow-csv.SampleHead', async function(uri) { await make_preview(uri, 'head'); }); // WEB_DISABLED\n    var sample_tail_cmd = vscode.commands.registerCommand('rainbow-csv.SampleTail', async function(uri) { await make_preview(uri, 'tail'); }); // WEB_DISABLED\n    var align_cmd = vscode.commands.registerTextEditorCommand('rainbow-csv.Align', align_table);\n    var shrink_cmd = vscode.commands.registerTextEditorCommand('rainbow-csv.Shrink', shrink_table);\n    var copy_back_cmd = vscode.commands.registerCommand('rainbow-csv.CopyBack', copy_back); // WEB_DISABLED\n    var internal_test_cmd = vscode.commands.registerCommand('rainbow-csv.InternalTest', run_internal_test_cmd);\n\n    var doc_open_event = vscode.workspace.onDidOpenTextDocument(handle_doc_open);\n    var switch_event = vscode.window.onDidChangeActiveTextEditor(handle_editor_switch);\n\n    context.subscriptions.push(lint_cmd);\n    context.subscriptions.push(rbql_cmd);\n    context.subscriptions.push(edit_column_names_cmd);\n    context.subscriptions.push(column_edit_before_cmd);\n    context.subscriptions.push(column_edit_after_cmd);\n    context.subscriptions.push(column_edit_select_cmd);\n    context.subscriptions.push(doc_open_event);\n    context.subscriptions.push(switch_event);\n    context.subscriptions.push(set_separator_cmd);\n    context.subscriptions.push(rainbow_off_cmd);\n    context.subscriptions.push(sample_head_cmd);\n    context.subscriptions.push(sample_tail_cmd);\n    context.subscriptions.push(set_join_table_name_cmd);\n    context.subscriptions.push(align_cmd);\n    context.subscriptions.push(shrink_cmd);\n    context.subscriptions.push(copy_back_cmd);\n    context.subscriptions.push(set_header_line_cmd);\n    context.subscriptions.push(internal_test_cmd);\n\n    // Need this because \"onDidOpenTextDocument()\" doesn't get called for the first open document.\n    // Another issue is when dev debug logging mode is enabled, the first document would be \"Log\" because it is printing something and gets VSCode focus.\n    await sleep(1000);\n    let active_doc = get_active_doc();\n    handle_doc_open(active_doc);\n}\n\n\nfunction deactivate() {\n    // This method is called when extension is deactivated.\n}\n\n\nexports.activate = activate;\nexports.deactivate = deactivate;\n"],"names":["GetIntrinsic","callBind","$indexOf","module","exports","name","allowMissing","intrinsic","bind","$apply","$call","$reflectApply","call","$gOPD","$defineProperty","$max","value","e","originalFunction","func","arguments","desc","configurable","length","applyBind","apply","hasOwn","Object","prototype","hasOwnProperty","toString","obj","fn","ctx","TypeError","l","i","k","ERROR_MESSAGE","slice","Array","toStr","funcType","that","target","this","bound","args","binder","result","concat","boundLength","Math","max","boundArgs","push","Function","join","Empty","implementation","undefined","$SyntaxError","SyntaxError","$Function","$TypeError","getEvalledConstructor","expressionSyntax","getOwnPropertyDescriptor","throwTypeError","ThrowTypeError","calleeThrows","get","gOPDthrows","hasSymbols","getProto","getPrototypeOf","x","__proto__","needsEval","TypedArray","Uint8Array","INTRINSICS","AggregateError","ArrayBuffer","Symbol","iterator","Atomics","BigInt","Boolean","DataView","Date","decodeURI","decodeURIComponent","encodeURI","encodeURIComponent","Error","eval","EvalError","Float32Array","Float64Array","FinalizationRegistry","Int8Array","Int16Array","Int32Array","isFinite","isNaN","JSON","Map","Number","parseFloat","parseInt","Promise","Proxy","RangeError","ReferenceError","Reflect","RegExp","Set","SharedArrayBuffer","String","Uint8ClampedArray","Uint16Array","Uint32Array","URIError","WeakMap","WeakRef","WeakSet","doEval","gen","LEGACY_ALIASES","$concat","$spliceApply","splice","$replace","replace","$strSlice","rePropName","reEscapeChar","stringToPath","string","first","last","match","number","quote","subString","getBaseIntrinsic","alias","intrinsicName","parts","intrinsicBaseName","intrinsicRealName","skipFurtherCaching","isOwn","part","origSymbol","hasSymbolSham","getOwnPropertySymbols","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","descriptor","enumerable","toStringTag","create","ctor","superCtor","super_","constructor","writable","TempCtor","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","GeneratorFunction","fnToStr","isFnRegex","test","generatorFunc","getGeneratorFunc","forEach","availableTypedArrays","g","globalThis","typedArrays","array","$slice","toStrTags","gOPD","typedArray","arr","proto","superProto","tag","anyTrue","getter","tryTypedArrays","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","arg","copy","fill","readUInt8","isArgumentsObject","isGeneratorFunction","whichTypedArray","isTypedArray","uncurryThis","f","BigIntSupported","SymbolSupported","ObjectToString","numberValue","valueOf","stringValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","isArrayBuffer","working","isDataViewToString","isDataView","isPromise","input","then","catch","isArrayBufferView","isView","isUint8Array","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isFloat32Array","isFloat64Array","isBigInt64Array","isBigUint64Array","isMap","isSet","isWeakMap","isWeakSet","SharedArrayBufferCopy","isSharedArrayBufferToString","isSharedArrayBuffer","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","isBoxedPrimitive","isAnyArrayBuffer","method","defineProperty","getOwnPropertyDescriptors","descriptors","formatRegExp","format","isString","objects","inspect","str","stringify","_","isNull","isObject","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","error","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","toUpperCase","opts","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","isUndefined","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","idx","arrayToHash","isError","indexOf","formatError","isRegExp","isDate","output","base","braces","isArray","toUTCString","formatProperty","key","formatArray","map","pop","reduce","prev","cur","reduceToSingleString","set","split","line","substr","ar","re","objectToString","d","o","pad","n","debuglog","pid","types","isNullOrUndefined","isSymbol","isNativeError","isPrimitive","isBuffer","months","timestamp","time","getHours","getMinutes","getSeconds","getDate","getMonth","prop","log","inherits","origin","add","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","cb","newReason","promisify","original","promiseResolve","promiseReject","promise","resolve","reject","err","setPrototypeOf","defineProperties","custom","callbackify","callbackified","maybeCb","self","rej","foundName","os","fs","path","rbql","rbql_csv","vscode","csv_utils","AssertionError","make_table_name_key","file_path","find_table_path","vscode_global_state","main_table_dir","table_id","filepath","candidate_path","charAt","homedir","existsSync","isAbsolute","table_path","get_header_line","document","comment_prefix","num_lines","lineCount","lnum","line_text","lineAt","text","startsWith","RbqlIOHandlingError","VSCodeRecordIterator","RBQLInputIterator","delim","policy","has_header","table_name","variable_prefix","super","NR","NL","fields_info","first_defective_line","first_record","get_first_record","stop","header_line","smart_split","async","query_text","variable_map","parse_basic_variables","parse_array_variables","parse_attribute_variables","parse_dictionary_variables","get_line_rfc","rfc_line_buffer","record_line","accumulate_rfc_line_into_record","get_line_simple","do_get_record","record","warning","num_fields","get_warnings","inconsistent_records_info","entries","record_id","sort","a","b","condition","message","assert","record_1","num_fields_1","record_2","num_fields_2","warn_msg","make_inconsistent_num_fields_warning","VSCodeWriter","RBQLOutputWriter","header_len","null_in_output","delim_in_simple_output","output_lines","polymorphic_join","simple_join","quoted_join","quoted_join_rfc","mono_join","set_header","header","write","fields","v","quote_field","rfc_quote_field","res","normalize_fields","out_fields","sub_array_delim","VSCodeTableRegistry","get_iterator_by_table_id","_table_id","VSCodeFileSystemCSVRegistry","RBQLTableRegistry","input_file_dir","encoding","options","stream","record_iterator","bulk_input_path","createReadStream","CSVRecordIterator","output_warnings","basename","read_header","input_reader","createInterface","closed","promise_resolve","promise_reject","output_promise","close","rbql_query_web","input_document","input_delim","input_policy","output_delim","output_policy","with_headers","join_tables_registry","input_iterator","output_writer","query","rbql_query_node","input_path","output_path","csv_encoding","user_init_code","input_stream","stdin","output_stream","close_output_on_finish","stdout","createWriteStream","is_ascii","default_init_source_path","read_user_init_code","dirname","CSVWriter","populate_optimistic_rfc_csv_record_map","requested_end_record","dst_record_map","record_begin","match_list","has_unbalanced_double_quote","get_default_js_udf_content","get_default_python_udf_content","align_columns","active_doc","column_sizes","result_lines","has_edit","config","workspace","getConfiguration","adjusted","trim","delta_len","repeat","shrink_columns","calc_column_sizes","field_rgx","field_rgx_external_whitespaces","extract_next_field","src","dlm","preserve_quotes_and_whitespaces","allow_external_whitespaces","cidx","src_cur","substring","match_obj","exec","match_end","uidx","field","split_quoted_str","extraction_report","unquote_field","split_whitespace_separated_str","preserve_whitespaces","rgxp","unquote_fields","split_lines","external_rfc_line_buffer","current_line","multiline_row","RbqlParsingError","RbqlRuntimeError","InternalBadFieldError","bad_idx","params","replace_all","search","replacement","RBQLContext","writer","unnest_list","top_count","like_regex_cache","sort_key_expression","aggregation_stage","aggregation_key_expression","functional_aggregators","join_map_impl","join_map","lhs_join_var_expression","where_expression","select_expression","update_expressions","variables_init_code","query_context","wrong_aggregation_usage_error","RBQL_VERSION","check_if_brackets_match","opening_bracket","closing_bracket","parse_root_bracket_level_text_spans","text_spans","last_pos","bracket_stack","cur_char","span","unquote_string","quoted_str","column_info_from_text_span","text_span","string_literals","rbql_star_marker","simple_var_match","attribute_match","subscript_int_match","subscript_str_match","column_index","column_name","is_star","replaced_string_literal_id","unquoted_column_name","adhoc_parse_select_expression_to_column_infos","ts","stable_compare","safe_get","safe_join_get","safe_set","regexp_escape","like_to_regex","pattern","p","converted","like","matcher","LIKE","RBQLAggregationToken","marker_id","UnnestMarker","UNNEST","vals","unnest","Unnest","UNFOLD","parse_number","MinAggregator","stats","increment","cur_aggr","min","get_final","MaxAggregator","SumAggregator","AvgAggregator","cur_sum","cur_cnt","VarianceAggregator","cur_sum_sq","avg_val","MedianAggregator","m","floor","CountAggregator","ArrayAggAggregator","post_proc","ConstGroupVerifier","output_index","const_values","old_value","init_aggregator","generator_name","MIN","Min","MAX","Max","COUNT","count","Count","SUM","sum","Sum","AVG","avg","Avg","VARIANCE","variance","Variance","MEDIAN","median","Median","ARRAY_AGG","array_agg","FOLD","add_to_set","dst_set","len_before","size","TopWriter","subwriter","NW","finish","UniqWriter","UniqCountWriter","records","old_val","unshift","SortedWriter","reverse_sort","unsorted_entries","stable_entry","reverse","entry","AggregateWriter","aggregators","aggregation_keys","all_keys","from","ag","InnerJoiner","get_rhs","lhs_key","get_join_records","LeftJoiner","null_record","max_record_len","StrictLeftJoiner","select_except","except_fields","select_simple","sort_key","sort_entry","select_aggregated","transparent_values","num_aggregators_found","trans_value","select_unnested","folded_fields","unnest_pos","findIndex","PROCESS_SELECT_COMMON","PROCESS_SELECT_SIMPLE","PROCESS_SELECT_JOIN","PROCESS_UPDATE_JOIN","PROCESS_UPDATE_SIMPLE","MAIN_LOOP_BODY","embed_expression","parent_code","child_placeholder","child_expression","embed_code","child_code","parent_lines","child_lines","pos","placeholder_indentation","generate_main_loop_code","is_select_query","is_join_query","js_code","compile_and_run","main_loop_body","main_loop_promise","lower_case_query","toLowerCase","GROUP_BY","UPDATE","SELECT","JOIN","INNER_JOIN","LEFT_JOIN","LEFT_OUTER_JOIN","STRICT_LEFT_JOIN","ORDER_BY","WHERE","LIMIT","EXCEPT","WITH","get_ambiguous_error_msg","variable_name","get_all_matches","regexp","str_strip","strip_comments","cline","combine_string_literals","backend_expression","prefix","dst_variables_map","matches","field_num","initialize","index","js_string_escape_column_name","quote_char","query_probably_has_dictionary_variable","continuous_name_segments","continuous_segment","column_names","dict_test_rgx","escaped_column_name","column_names_source","column_names_from_query","zero_based_idx","map_variables_directly","ensure_no_ambiguous_variables","input_column_names","join_column_names","join_column_names_set","has","parse_join_expression","invalid_join_syntax_error","variable_pairs","pair_rgx","and_rgx","resolve_join_variables","input_variables_map","join_variables_map","lhs_variables","rhs_indices","valid_join_syntax_msg","variable_pair","join_var_1","join_var_2","lhs_key_index","rhs_key_index","generate_common_init_code","base_var","attr_var","generate_init_statements","variables_map","indent","code_lines","simple_var_name_rgx","var_info","variable_declaration_keyword","replace_star_count","aggregate_expression","replace_star_vars","rbql_expression","replacement_expression","replace_star_vars_for_header_parsing","translate_update_expression","update_expression","first_assignment_error","assignment_looking_rgx","dst_var_name","var_index","current_indent","translate_select_expression","expression_without_stars","translated","translated_for_header","separate_string_literals","rgx","format_parts","idx_before","literal_id","string_literal","start_index","lastIndex","format_expression","locate_statements","statement_groups","ig","is","statement","match_str","separate_actions","with_match","ordered_statements","statement_start","span_start","span_end","statement_params","new_span","find_top","rb_actions","select_action","translate_except_expression","except_expression","input_header","skip_vars","skip_indices","var_name","HashJoinMap","key_indices","hash_map","nr","key_index","polymorphic_get_key","get_single_key","get_multi_key","ki","get_record","nf","key_records","cleanup_query","filter","remove_redundant_table_name","select_output_header","join_header","query_column_infos","output_header","qci","handle_query_modifier","TableIterator","table","normalize_column_names","stopped","TableWriter","external_table","SingleTableRegistry","shallow_parse_input_query","get_variables_map","rhs_table_id","join_record_iterator","get_header","sql_join_type","build","select_expression_for_ast","query_table","input_table","output_table","join_table","output_column_names","exception_to_error_info","exceptions_type_map","error_type","util","utf_decoding_error","rbql_init_source_path","readFileSync","name_record","index_path","content","lines","try_read_index","get_index_record","RecordQueue","push_stack","pull_stack","enqueue","dequeue","csv_path","first_record_should_be_emitted","header_preread_complete","decoder","TextDecoder","fatal","input_exhausted","started","utf8_bom_removed","partially_decoded_line","partially_decoded_line_ends_with_cr","resolve_current_record","reject_current_record","current_exception","produced_records_queue","process_line_polymorphic","process_partial_rfc_record_line","process_record_line","modifier","reset_external_callbacks","try_propagate_exception","exception","store_or_propagate_exception","pause","preread_first_record","try_resolve_next_record","start","isPaused","resume","parent_iterator","current_record_promise","num_records","process_line","clean_line","assumed_source_encoding","charCodeAt","remove_utf8_bom","process_data_stream_chunk","data_chunk","decoded_string","decode","first_line_index","process_data_bulk","control_buffer","Buffer","compare","process_data_stream_end","last_line","destroy","readFile","close_stream_on_finish","line_separator","setDefaultEncoding","error_obj","store_first_error","first_error","writer_error","_write_all","output_encoding","end","FileSystemCSVRegistry","interpret_named_csv_format","format_name","query_csv","require","possibleNames","out","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","window","child_process","rainbow_utils","ll_rainbow_utils","is_web_ext","preview_window_size","scratch_buf_marker","client_html_template_web","lint_results","aligned_files","autodetection_stoplist","original_language_ids","result_set_parent_map","lint_status_bar_button","rbql_status_bar_button","align_shrink_button","rainbow_off_status_bar_button","copy_back_button","last_statusbar_doc","rbql_context","last_rbql_queries","client_html_template","global_state","preview_panel","doc_edit_subscription","_unit_test_last_rbql_report","_unit_test_last_warnings","dialect_map","absolute_path_map","show_single_line_error","error_msg","active_window","showErrorMessage","sleep","ms","map_separator_to_language_id","separator","language_id","get_from_global_state","default_value","save_to_global_state","update","get_rfc_record_text","record_start","record_end","sample_preview_records_from_context","dst_message","requested_start_record","preview_records","enable_rfc_newlines","rfc_record_map","record_text","cur_record","preview_sampling_error","r","c","start_record_zero_based","make_header_key","make_rfc_policy_key","make_with_headers_key","get_header_from_document","fileName","raw_header","parse","get_field_by_line_position","query_pos","col_num","cpos","get_active_editor","activeTextEditor","get_active_doc","active_editor","hide_status_bar_buttons","all_buttons","hide","refresh_status_bar_buttons","endsWith","languageId","lint_cache_key","lint_report","createStatusBarItem","StatusBarAlignment","Left","color","tooltip","command","show","show_lint_status_bar_button","show_align_shrink_button","parent_table_path","parent_basename","show_rbql_copy_to_source_button","csv_lint","is_manual_op","detect_trailing_spaces","first_trailing_space_line","split_result","produce_lint_report","csv_lint_cmd","run_internal_test_cmd","integration_test_options","check_initialization_state","initialized","lazy_loaded","check_last_rbql_report","check_last_rbql_warnings","handle_rbql_result_file","text_doc","warnings","showTextDocument","languages","setTextDocumentLanguage","showWarningMessage","show_warnings","run_command","cmd","close_and_error_guard","callback_func","spawn","stderr","data","code","handle_command_result","src_table_path","dst_table_path","error_code","webview_report_handler","json_report","report","doc","openTextDocument","file_path_to_query_key","get_dialect","set_header_line","dialect","selection","set_rainbow_separator","original_language_id","character","restore_original_language","delete","set_join_table_name","showInputBox","set_virtual_header","old_header_str","input_box_props","raw_new_header","new_header","column_edit","edit_mode","position","active","cnum","quoting_warning","selections","char_pos_before","char_pos_after","position_before","Position","position_after","Selection","shrink_table","edit_builder","shrinked_doc_text","first_failed_line","invalid_range","Range","full_range","validateRange","align_table","aligned_doc_text","copy_back","result_doc","parent_doc","parent_editor","query_result_doc","getText","edit","do_copy_back","handle_rbql_client_message","webview","message_type","report_msg","postMessage","init_msg","path_key","input_document_path","history_list","rbql_backend","rbql_query","input_table_dir","protocol_message","navig_direction","backend_language","output_dialect","old_index","update_query_history","input_table_path","tmpdir","get_dst_table_dir","orig_extension","extname","delim_ext_map","dst_extension","result_table_name","get_dst_table_name","output_doc_cfg","language","csv_options","cmd_safe_query","run_rbql_query","udf_file_path","default_content","writeFileSync","udf_doc","edit_rbql","orig_uri","uri","scheme","isDirty","rnd_suffix","random","with_headers_by_default","createWebviewPanel","ViewColumn","Active","enableScripts","client_html","paths_list","local_path","adjusted_webview_url","asWebviewUri","Uri","file","adjust_webview_paths","html","onDidReceiveMessage","get_num_columns_if_delimited","min_num_columns","min_num_lines","num_lines_checked","comment_prefix_for_autodetection","autodetect_dialect","candidate_separators","best_dialect","best_dialect_num_columns","dialect_id","cur_dialect_num_columns","handle_doc_edit","change_event","dispose","rainbow_csv_language_id","handle_editor_switch","editor","handle_doc_open","is_default_csv","best_dialect_frequency","frequency","j","autodetect_dialect_frequency_based","autoenable_rainbow_csv","isUntitled","onDidChangeTextDocument","register_csv_copy_paste","make_preview","preview_mode","fsPath","size_limit","file_size_in_bytes","statSync","full_orig_doc","file_basename","out_path","open","fd","buffer","alloc","read_begin_pos","read","_num","buffer_str","lastIndexOf","includes","register_csv_hover_info_provider","context","hover_provider","registerHoverProvider","provideHover","token","cancellation_token","hover_text","enable_tooltip_column_names","enable_tooltip_warnings","max_label_len","column_label","short_column_label","make_hover_text","isCancellationRequested","mds","MarkdownString","appendCodeblock","Hover","make_hover","subscriptions","activate","globalState","rbql_client_uri","joinPath","extensionUri","bytes","asAbsolutePath","lint_cmd","commands","registerCommand","rbql_cmd","set_header_line_cmd","edit_column_names_cmd","set_join_table_name_cmd","column_edit_before_cmd","column_edit_after_cmd","column_edit_select_cmd","set_separator_cmd","rainbow_off_cmd","sample_head_cmd","sample_tail_cmd","align_cmd","registerTextEditorCommand","shrink_cmd","copy_back_cmd","internal_test_cmd","doc_open_event","onDidOpenTextDocument","switch_event","onDidChangeActiveTextEditor","deactivate"],"sourceRoot":""}